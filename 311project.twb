<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0511.1508                               -->
<workbook original-version='18.1' source-build='2023.1.2 (20231.23.0511.1508)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='cluster_centerpoints' inline='true' name='federated.0xr0hvc06lld9h1a394az1e34oki' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cluster_centerpoints' name='textscan.1bsxsgp17ffw4t182st6z0zfj8fd'>
            <connection class='textscan' directory='C:/Users/chris/Documents/311 Project' filename='cluster_centerpoints.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1bsxsgp17ffw4t182st6z0zfj8fd' name='cluster_centerpoints.csv' table='[cluster_centerpoints#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='ClusterID' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='integer' name='Week' ordinal='2' />
            <column datatype='string' name='SR TYPE' ordinal='3' />
            <column datatype='real' name='Latitude' ordinal='4' />
            <column datatype='real' name='Longitude' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1bsxsgp17ffw4t182st6z0zfj8fd' name='cluster_centerpoints.csv' table='[cluster_centerpoints#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='ClusterID' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='integer' name='Week' ordinal='2' />
            <column datatype='string' name='SR TYPE' ordinal='3' />
            <column datatype='real' name='Latitude' ordinal='4' />
            <column datatype='real' name='Longitude' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cluster_centerpoints.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ClusterID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ClusterID]</local-name>
            <parent-name>[cluster_centerpoints.csv]</parent-name>
            <remote-alias>ClusterID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cluster_centerpoints.csv_C3570133D2C24DEDB754C96CC7A233F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[cluster_centerpoints.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cluster_centerpoints.csv_C3570133D2C24DEDB754C96CC7A233F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Week]</local-name>
            <parent-name>[cluster_centerpoints.csv]</parent-name>
            <remote-alias>Week</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cluster_centerpoints.csv_C3570133D2C24DEDB754C96CC7A233F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SR TYPE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SR TYPE]</local-name>
            <parent-name>[cluster_centerpoints.csv]</parent-name>
            <remote-alias>SR TYPE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cluster_centerpoints.csv_C3570133D2C24DEDB754C96CC7A233F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[cluster_centerpoints.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cluster_centerpoints.csv_C3570133D2C24DEDB754C96CC7A233F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[cluster_centerpoints.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cluster_centerpoints.csv_C3570133D2C24DEDB754C96CC7A233F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Parameter Filter' datatype='boolean' name='[Calculation_2994893775757078542]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[SR TYPE] = [Parameters].[Parameter 1] OR [SR TYPE] = [Parameters].[Parameter 1 (copy)_2994893775512735746]' />
      </column>
      <column caption='Combined Filter Calculation' datatype='boolean' name='[Calculation_2994893776472580126]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [SR TYPE] = [Parameters].[Parameter 1] AND [Year] = [Parameters].[Parameter 5] AND [Week] = [Parameters].[Parameter 6] THEN&#13;&#10;    TRUE&#13;&#10;ELSEIF [Parameters].[Parameter 6] + [Parameters].[Parameter 3] &gt; 53 THEN&#13;&#10;    IF [Parameters].[Parameter 5] + 1 &gt; 2023 THEN&#13;&#10;        FALSE&#13;&#10;    ELSE&#13;&#10;        [SR TYPE] = [Parameters].[Parameter 1 (copy)_2994893775512735746] AND [Year] = [Parameters].[Parameter 5] + 1 AND [Week] = ([Parameters].[Parameter 6] + [Parameters].[Parameter 3]) % 53&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    [SR TYPE] = [Parameters].[Parameter 1 (copy)_2994893775512735746] AND [Year] = [Parameters].[Parameter 5] AND [Week] = [Parameters].[Parameter 6] + [Parameters].[Parameter 3]&#13;&#10;END' />
      </column>
      <column caption='Parameter 1' datatype='integer' name='[Calculation_3320560324690026496]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT(IF [SR TYPE] = [Parameters].[Parameter 1] AND [Year] = [Parameters].[Parameter 5] AND [Week] = [Parameters].[Parameter 6] THEN 1 END)' />
      </column>
      <column caption='Cluster ID' datatype='integer' name='[ClusterID]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Parameter 2' datatype='integer' name='[Parameter 1 (copy)_3320560324697333762]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT(IF [SR TYPE] = [Parameters].[Parameter 1 (copy)_2994893775512735746] AND [Year] = [Parameters].[Parameter 5] AND [Week] = [Parameters].[Parameter 6] THEN 1 END)' />
      </column>
      <column caption='Sr Type' datatype='string' name='[SR TYPE]' role='dimension' type='nominal' />
      <column caption='Week1' datatype='integer' name='[Week]' role='dimension' type='quantitative' />
      <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cluster_centerpoints.csv' datatype='table' name='[__tableau_internal_object_id__].[cluster_centerpoints.csv_C3570133D2C24DEDB754C96CC7A233F5]' role='measure' type='quantitative' />
      <column-instance column='[SR TYPE]' derivation='None' name='[none:SR TYPE:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:SR TYPE:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Parking Violation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Flooding&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Junk Motor Vehicle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missed Garbage Pickup&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Air Pollution&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Missed Heavy Trash Pickup&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Street Hazard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Missed Recycling Pickup&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pothole&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Street Condition&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tree Removal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fire Hydrant&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Parameter 2' datatype='string' name='[Parameter 1 (copy)_2994893775512735746]' param-domain-type='list' role='measure' type='nominal' value='&quot;Pothole&quot;'>
          <calculation class='tableau' formula='&quot;Pothole&quot;' />
        </column>
        <column caption='Parameter 1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Street Hazard&quot;'>
          <calculation class='tableau' formula='&quot;Street Hazard&quot;' />
        </column>
        <column caption='Week Offset' datatype='integer' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='0'>
          <calculation class='tableau' formula='0' />
        </column>
        <column caption='Selected Year' datatype='integer' default-format='n0;-0' name='[Parameter 5]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
          <calculation class='tableau' formula='2021' />
        </column>
        <column caption='Selected Week' datatype='integer' name='[Parameter 6]' param-domain-type='list' role='measure' type='quantitative' value='6'>
          <calculation class='tableau' formula='6' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cluster_centerpoints.csv' id='cluster_centerpoints.csv_C3570133D2C24DEDB754C96CC7A233F5'>
            <properties context=''>
              <relation connection='textscan.1bsxsgp17ffw4t182st6z0zfj8fd' name='cluster_centerpoints.csv' table='[cluster_centerpoints#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='ClusterID' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='integer' name='Week' ordinal='2' />
                  <column datatype='string' name='SR TYPE' ordinal='3' />
                  <column datatype='real' name='Latitude' ordinal='4' />
                  <column datatype='real' name='Longitude' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Parameter 2' datatype='string' name='[Parameter 1 (copy)_2994893775512735746]' param-domain-type='list' role='measure' type='nominal' value='&quot;Pothole&quot;'>
        <calculation class='tableau' formula='&quot;Pothole&quot;' />
        <members>
          <member value='&quot;Air Pollution&quot;' />
          <member value='&quot;Fire Hydrant&quot;' />
          <member value='&quot;Flooding&quot;' />
          <member value='&quot;Junk Motor Vehicle&quot;' />
          <member value='&quot;Missed Garbage Pickup&quot;' />
          <member value='&quot;Missed Heaby Trash Pickup&quot;' />
          <member value='&quot;Missed Recycling Pickup&quot;' />
          <member value='&quot;Parking Violations&quot;' />
          <member value='&quot;Pothole&quot;' />
          <member value='&quot;Street Condition&quot;' />
          <member value='&quot;Street Hazard&quot;' />
          <member value='&quot;Tree Removal&quot;' />
        </members>
      </column>
      <column caption='Parameter 1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Street Hazard&quot;'>
        <calculation class='tableau' formula='&quot;Street Hazard&quot;' />
        <members>
          <member value='&quot;Air Pollution&quot;' />
          <member value='&quot;Fire Hydrant&quot;' />
          <member value='&quot;Flooding&quot;' />
          <member value='&quot;Junk Motor Vehicle&quot;' />
          <member value='&quot;Missed Garbage Pickup&quot;' />
          <member value='&quot;Missed Heaby Trash Pickup&quot;' />
          <member value='&quot;Missed Recycling Pickup&quot;' />
          <member value='&quot;Parking Violations&quot;' />
          <member value='&quot;Pothole&quot;' />
          <member value='&quot;Street Condition&quot;' />
          <member value='&quot;Street Hazard&quot;' />
          <member value='&quot;Tree Removal&quot;' />
        </members>
      </column>
      <column caption='Week Offset' datatype='integer' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='0'>
        <calculation class='tableau' formula='0' />
        <members>
          <member value='0' />
          <member value='1' />
          <member value='2' />
          <member value='3' />
        </members>
      </column>
      <column caption='Selected Year' datatype='integer' default-format='n0;-0' name='[Parameter 5]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
        <calculation class='tableau' formula='2021' />
        <members>
          <member value='2011' />
          <member value='2012' />
          <member value='2013' />
          <member value='2014' />
          <member value='2015' />
          <member value='2016' />
          <member value='2017' />
          <member value='2018' />
          <member value='2019' />
          <member value='2020' />
          <member value='2021' />
          <member value='2022' />
          <member value='2023' />
        </members>
      </column>
      <column caption='Selected Week' datatype='integer' name='[Parameter 6]' param-domain-type='list' role='measure' type='quantitative' value='6'>
        <calculation class='tableau' formula='6' />
        <members>
          <member value='1' />
          <member value='2' />
          <member value='3' />
          <member value='4' />
          <member value='5' />
          <member value='6' />
          <member value='7' />
          <member value='8' />
          <member value='9' />
          <member value='10' />
          <member value='11' />
          <member value='12' />
          <member value='13' />
          <member value='14' />
          <member value='15' />
          <member value='16' />
          <member value='17' />
          <member value='18' />
          <member value='19' />
          <member value='20' />
          <member value='21' />
          <member value='22' />
          <member value='23' />
          <member value='24' />
          <member value='25' />
          <member value='26' />
          <member value='27' />
          <member value='28' />
          <member value='29' />
          <member value='30' />
          <member value='31' />
          <member value='32' />
          <member value='33' />
          <member value='34' />
          <member value='35' />
          <member value='36' />
          <member value='37' />
          <member value='38' />
          <member value='39' />
          <member value='40' />
          <member value='41' />
          <member value='42' />
          <member value='43' />
          <member value='44' />
          <member value='45' />
          <member value='46' />
          <member value='47' />
          <member value='48' />
          <member value='49' />
          <member value='50' />
          <member value='51' />
          <member value='52' />
          <member value='53' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Parameter 1 (copy)_2994893775512735746]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Pothole&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='correlation_results (project_311)' inline='true' name='federated.0io29bp1eu65so1276ma71vmvn64' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0nmu3561f30z1j16z91z61x66g2u'>
            <connection class='mysql' dbname='project_311' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.0nmu3561f30z1j16z91z61x66g2u' name='correlation_results' table='[correlation_results]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.0nmu3561f30z1j16z91z61x66g2u' name='correlation_results' table='[correlation_results]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[correlation_results]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[correlation_results_D32710D29260421D977664D799683ACB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Week]</local-name>
            <parent-name>[correlation_results]</parent-name>
            <remote-alias>Week</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[correlation_results_D32710D29260421D977664D799683ACB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SR_Type_1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SR_Type_1]</local-name>
            <parent-name>[correlation_results]</parent-name>
            <remote-alias>SR_Type_1</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[correlation_results_D32710D29260421D977664D799683ACB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ClusterID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ClusterID]</local-name>
            <parent-name>[correlation_results]</parent-name>
            <remote-alias>ClusterID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[correlation_results_D32710D29260421D977664D799683ACB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[correlation_results]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[correlation_results_D32710D29260421D977664D799683ACB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[correlation_results]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[correlation_results_D32710D29260421D977664D799683ACB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SR_Type_2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SR_Type_2]</local-name>
            <parent-name>[correlation_results]</parent-name>
            <remote-alias>SR_Type_2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[correlation_results_D32710D29260421D977664D799683ACB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Offset</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Offset]</local-name>
            <parent-name>[correlation_results]</parent-name>
            <remote-alias>Offset</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[correlation_results_D32710D29260421D977664D799683ACB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Correlation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Correlation]</local-name>
            <parent-name>[correlation_results]</parent-name>
            <remote-alias>Correlation</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[correlation_results_D32710D29260421D977664D799683ACB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Parameter Filter' datatype='boolean' name='[Calculation_2994893776138154000]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[SR_Type_1] = [Parameters].[Parameter 1] AND [SR_Type_2] = [Parameters].[Parameter 1 (copy)_2994893775512735746] AND [Offset] = [Parameters].[Parameter 3] AND [Week] = [Parameters].[Parameter 6] AND [Year] = [Parameters].[Parameter 5]' />
      </column>
      <column caption='Week Offset Filter' datatype='boolean' name='[Calculation_2994893776145227795]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Offset] = [Parameters].[Parameter 3]' />
      </column>
      <column caption='SR TYPE Filter' datatype='boolean' name='[Calculation_2994893776146087956]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[SR_Type_1] = [Parameters].[Parameter 1]' />
      </column>
      <column caption='Combined Filter Calculation' datatype='boolean' name='[Calculation_2994893776472580126]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [SR TYPE] = [Parameters].[Parameter 1] AND [Year 1] = [Parameters].[Parameter 5] AND [Week 1] = [Parameters].[Parameter 6] THEN&#13;&#10;    TRUE&#13;&#10;ELSEIF [Parameters].[Parameter 6] + [Parameters].[Parameter 3] &gt; 53 THEN&#13;&#10;    IF [Parameters].[Parameter 5] + 1 &gt; 2023 THEN&#13;&#10;        FALSE&#13;&#10;    ELSE&#13;&#10;        [SR TYPE] = [Parameters].[Parameter 1 (copy)_2994893775512735746] AND [Year 1] = [Parameters].[Parameter 5] + 1 AND [Week 1] = ([Parameters].[Parameter 6] + [Parameters].[Parameter 3]) % 53&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    [SR TYPE] = [Parameters].[Parameter 1 (copy)_2994893775512735746] AND [Year 1] = [Parameters].[Parameter 5] AND [Week 1] = [Parameters].[Parameter 6] + [Parameters].[Parameter 3]&#13;&#10;END' />
      </column>
      <column caption='Parameter 1' datatype='integer' name='[Calculation_3320560324690026496]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT(IF [SR TYPE] = [Parameters].[Parameter 1] AND [Year 1] = [Parameters].[Parameter 5] AND [Week 1] = [Parameters].[Parameter 6] THEN 1 END)' />
      </column>
      <column caption='Max Correlation' datatype='real' name='[Calculation_3320560324701941763]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([Correlation])' />
      </column>
      <column caption='Cluster ID' datatype='integer' name='[ClusterID]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Parameter 2' datatype='integer' name='[Parameter 1 (copy)_3320560324697333762]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT(IF [SR TYPE] = [Parameters].[Parameter 1 (copy)_2994893775512735746] AND [Year 1] = [Parameters].[Parameter 5] AND [Week 1] = [Parameters].[Parameter 6] THEN 1 END)' />
      </column>
      <column caption='Sr Type' datatype='string' name='[SR TYPE]' role='dimension' type='nominal' />
      <column caption='SR Type 1' datatype='string' name='[SR_Type_1]' role='dimension' type='nominal' />
      <column caption='SR Type 2' datatype='string' name='[SR_Type_2]' role='dimension' type='nominal' />
      <column caption='Week1' datatype='integer' name='[Week 1]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Week]' role='dimension' type='quantitative' />
      <column caption='Year1' datatype='integer' name='[Year 1]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='correlation_results' datatype='table' name='[__tableau_internal_object_id__].[correlation_results_D32710D29260421D977664D799683ACB]' role='measure' type='quantitative' />
      <column-instance column='[SR_Type_1]' derivation='None' name='[none:SR_Type_1:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/chris/Documents/My Tableau Repository/Datasources/correlation_results (project_311).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/18/2023 09:20:08 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='correlation_results (project_311)' increment-value='%null%' refresh-type='create' rows-inserted='8351321' timestamp-start='2023-11-18 21:19:37.855' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>0</ordinal>
              <family>correlation_results</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[correlation_results_D32710D29260421D977664D799683ACB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Week</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Week]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Week</remote-alias>
              <ordinal>1</ordinal>
              <family>correlation_results</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[correlation_results_D32710D29260421D977664D799683ACB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SR_Type_1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SR_Type_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SR_Type_1</remote-alias>
              <ordinal>2</ordinal>
              <family>correlation_results</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[correlation_results_D32710D29260421D977664D799683ACB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ClusterID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ClusterID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ClusterID</remote-alias>
              <ordinal>3</ordinal>
              <family>correlation_results</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1062897</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[correlation_results_D32710D29260421D977664D799683ACB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>4</ordinal>
              <family>correlation_results</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>736152</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[correlation_results_D32710D29260421D977664D799683ACB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>5</ordinal>
              <family>correlation_results</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>750817</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[correlation_results_D32710D29260421D977664D799683ACB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SR_Type_2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SR_Type_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SR_Type_2</remote-alias>
              <ordinal>6</ordinal>
              <family>correlation_results</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[correlation_results_D32710D29260421D977664D799683ACB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Offset</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Offset]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Offset</remote-alias>
              <ordinal>7</ordinal>
              <family>correlation_results</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[correlation_results_D32710D29260421D977664D799683ACB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Correlation</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Correlation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Correlation</remote-alias>
              <ordinal>8</ordinal>
              <family>correlation_results</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4464992</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[correlation_results_D32710D29260421D977664D799683ACB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:SR_Type_1:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Pothole&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Air Pollution&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missed Garbage Pickup&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Street Hazard&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missed Heavy Trash Pickup&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fire Hydrant&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Missed Recycling Pickup&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tree Removal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Parking Violation&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Flooding&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Junk Motor Vehicle&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Parameter 2' datatype='string' name='[Parameter 1 (copy)_2994893775512735746]' param-domain-type='list' role='measure' type='nominal' value='&quot;Pothole&quot;'>
          <calculation class='tableau' formula='&quot;Pothole&quot;' />
        </column>
        <column caption='Parameter 1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Street Hazard&quot;'>
          <calculation class='tableau' formula='&quot;Street Hazard&quot;' />
        </column>
        <column caption='Week Offset' datatype='integer' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='0'>
          <calculation class='tableau' formula='0' />
        </column>
        <column caption='Selected Year' datatype='integer' default-format='n0;-0' name='[Parameter 5]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
          <calculation class='tableau' formula='2021' />
        </column>
        <column caption='Selected Week' datatype='integer' name='[Parameter 6]' param-domain-type='list' role='measure' type='quantitative' value='6'>
          <calculation class='tableau' formula='6' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='correlation_results' id='correlation_results_D32710D29260421D977664D799683ACB'>
            <properties context=''>
              <relation connection='mysql.0nmu3561f30z1j16z91z61x66g2u' name='correlation_results' table='[correlation_results]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='year2022+ (project_311)' inline='true' name='federated.1xjf8ft1960x32190tsur1ikyccn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1xx1sof04jxe311cinthx0u341tp'>
            <connection class='mysql' dbname='project_311' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.1xx1sof04jxe311cinthx0u341tp' name='Custom SQL Query' type='text'>SELECT &#13;
  `t0`.`CASE NUMBER` AS `CASE NUMBER`,&#13;
  `t0`.`DEPARTMENT` AS `DEPARTMENT`,&#13;
  `t0`.`DIVISION` AS `DIVISION`,&#13;
  `t0`.`LATITUDE` AS `LATITUDE`,&#13;
  `t0`.`LONGITUDE` AS `LONGITUDE`,&#13;
  `t0`.`QUEUE` AS `QUEUE`,&#13;
  `t0`.`SR CREATE DATE` AS `SR CREATE DATE`,&#13;
  `t0`.`SR LOCATION` AS `SR LOCATION`,&#13;
  `t0`.`SR TYPE` AS `SR TYPE`,&#13;
  `t0`.`Table Name` AS `Table Name`&#13;
FROM (&#13;
  -- Repeat this structure for each year table&#13;
  SELECT &#13;
    `year2011`.`CASE NUMBER`,&#13;
    `year2011`.`DEPARTMENT`,&#13;
    `year2011`.`DIVISION`,&#13;
    `year2011`.`LATITUDE`,&#13;
    `year2011`.`LONGITUDE`,&#13;
    `year2011`.`QUEUE`,&#13;
    `year2011`.`SR CREATE DATE`,&#13;
    `year2011`.`SR LOCATION`,&#13;
    `year2011`.`SR TYPE`,&#13;
    &apos;year2011&apos; AS `Table Name`&#13;
  FROM `year2011`&#13;
  WHERE `year2011`.`SR CREATE DATE` IS NOT NULL AND `year2011`.`LATITUDE` IS NOT NULL AND `year2011`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2011`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
&#13;
  UNION ALL&#13;
&#13;
  SELECT &#13;
    `year2012`.`CASE NUMBER`,&#13;
    `year2012`.`DEPARTMENT`,&#13;
    `year2012`.`DIVISION`,&#13;
    `year2012`.`LATITUDE`,&#13;
    `year2012`.`LONGITUDE`,&#13;
    `year2012`.`QUEUE`,&#13;
    `year2012`.`SR CREATE DATE`,&#13;
    `year2012`.`SR LOCATION`,&#13;
    `year2012`.`SR TYPE`,&#13;
    &apos;year2012&apos; AS `Table Name`&#13;
  FROM `year2012`&#13;
  WHERE `year2012`.`SR CREATE DATE` IS NOT NULL AND `year2012`.`LATITUDE` IS NOT NULL AND `year2012`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2012`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2013`.`CASE NUMBER`,&#13;
    `year2013`.`DEPARTMENT`,&#13;
    `year2013`.`DIVISION`,&#13;
    `year2013`.`LATITUDE`,&#13;
    `year2013`.`LONGITUDE`,&#13;
    `year2013`.`QUEUE`,&#13;
    `year2013`.`SR CREATE DATE`,&#13;
    `year2013`.`SR LOCATION`,&#13;
    `year2013`.`SR TYPE`,&#13;
    &apos;year2013&apos; AS `Table Name`&#13;
  FROM `year2013`&#13;
  WHERE `year2013`.`SR CREATE DATE` IS NOT NULL AND `year2013`.`LATITUDE` IS NOT NULL AND `year2013`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2013`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2014`.`CASE NUMBER`,&#13;
    `year2014`.`DEPARTMENT`,&#13;
    `year2014`.`DIVISION`,&#13;
    `year2014`.`LATITUDE`,&#13;
    `year2014`.`LONGITUDE`,&#13;
    `year2014`.`QUEUE`,&#13;
    `year2014`.`SR CREATE DATE`,&#13;
    `year2014`.`SR LOCATION`,&#13;
    `year2014`.`SR TYPE`,&#13;
    &apos;year2014&apos; AS `Table Name`&#13;
  FROM `year2014`&#13;
  WHERE `year2014`.`SR CREATE DATE` IS NOT NULL AND `year2014`.`LATITUDE` IS NOT NULL AND `year2014`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2014`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2015`.`CASE NUMBER`,&#13;
    `year2015`.`DEPARTMENT`,&#13;
    `year2015`.`DIVISION`,&#13;
    `year2015`.`LATITUDE`,&#13;
    `year2015`.`LONGITUDE`,&#13;
    `year2015`.`QUEUE`,&#13;
    `year2015`.`SR CREATE DATE`,&#13;
    `year2015`.`SR LOCATION`,&#13;
    `year2015`.`SR TYPE`,&#13;
    &apos;year2015&apos; AS `Table Name`&#13;
  FROM `year2015`&#13;
  WHERE `year2015`.`SR CREATE DATE` IS NOT NULL AND `year2015`.`LATITUDE` IS NOT NULL AND `year2015`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2015`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2016`.`CASE NUMBER`,&#13;
    `year2016`.`DEPARTMENT`,&#13;
    `year2016`.`DIVISION`,&#13;
    `year2016`.`LATITUDE`,&#13;
    `year2016`.`LONGITUDE`,&#13;
    `year2016`.`QUEUE`,&#13;
    `year2016`.`SR CREATE DATE`,&#13;
    `year2016`.`SR LOCATION`,&#13;
    `year2016`.`SR TYPE`,&#13;
    &apos;year2016&apos; AS `Table Name`&#13;
  FROM `year2016`&#13;
  WHERE `year2016`.`SR CREATE DATE` IS NOT NULL AND `year2016`.`LATITUDE` IS NOT NULL AND `year2016`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2016`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2017`.`CASE NUMBER`,&#13;
    `year2017`.`DEPARTMENT`,&#13;
    `year2017`.`DIVISION`,&#13;
    `year2017`.`LATITUDE`,&#13;
    `year2017`.`LONGITUDE`,&#13;
    `year2017`.`QUEUE`,&#13;
    `year2017`.`SR CREATE DATE`,&#13;
    `year2017`.`SR LOCATION`,&#13;
    `year2017`.`SR TYPE`,&#13;
    &apos;year2017&apos; AS `Table Name`&#13;
  FROM `year2017`&#13;
  WHERE `year2017`.`SR CREATE DATE` IS NOT NULL AND `year2017`.`LATITUDE` IS NOT NULL AND `year2017`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2017`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2018`.`CASE NUMBER`,&#13;
    `year2018`.`DEPARTMENT`,&#13;
    `year2018`.`DIVISION`,&#13;
    `year2018`.`LATITUDE`,&#13;
    `year2018`.`LONGITUDE`,&#13;
    `year2018`.`QUEUE`,&#13;
    `year2018`.`SR CREATE DATE`,&#13;
    `year2018`.`SR LOCATION`,&#13;
    `year2018`.`SR TYPE`,&#13;
    &apos;year2018&apos; AS `Table Name`&#13;
  FROM `year2018`&#13;
  WHERE `year2018`.`SR CREATE DATE` IS NOT NULL AND `year2018`.`LATITUDE` IS NOT NULL AND `year2018`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2018`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2019`.`CASE NUMBER`,&#13;
    `year2019`.`DEPARTMENT`,&#13;
    `year2019`.`DIVISION`,&#13;
    `year2019`.`LATITUDE`,&#13;
    `year2019`.`LONGITUDE`,&#13;
    `year2019`.`QUEUE`,&#13;
    `year2019`.`SR CREATE DATE`,&#13;
    `year2019`.`SR LOCATION`,&#13;
    `year2019`.`SR TYPE`,&#13;
    &apos;year2019&apos; AS `Table Name`&#13;
  FROM `year2019`&#13;
  WHERE `year2019`.`SR CREATE DATE` IS NOT NULL AND `year2019`.`LATITUDE` IS NOT NULL AND `year2019`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2019`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2020`.`CASE NUMBER`,&#13;
    `year2020`.`DEPARTMENT`,&#13;
    `year2020`.`DIVISION`,&#13;
    `year2020`.`LATITUDE`,&#13;
    `year2020`.`LONGITUDE`,&#13;
    `year2020`.`QUEUE`,&#13;
    `year2020`.`SR CREATE DATE`,&#13;
    `year2020`.`SR LOCATION`,&#13;
    `year2020`.`SR TYPE`,&#13;
    &apos;year2020&apos; AS `Table Name`&#13;
  FROM `year2020`&#13;
  WHERE `year2020`.`SR CREATE DATE` IS NOT NULL AND `year2020`.`LATITUDE` IS NOT NULL AND `year2020`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2020`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2021`.`CASE NUMBER`,&#13;
    `year2021`.`DEPARTMENT`,&#13;
    `year2021`.`DIVISION`,&#13;
    `year2021`.`LATITUDE`,&#13;
    `year2021`.`LONGITUDE`,&#13;
    `year2021`.`QUEUE`,&#13;
    `year2021`.`SR CREATE DATE`,&#13;
    `year2021`.`SR LOCATION`,&#13;
    `year2021`.`SR TYPE`,&#13;
    &apos;year2021&apos; AS `Table Name`&#13;
  FROM `year2021`&#13;
  WHERE `year2021`.`SR CREATE DATE` IS NOT NULL AND `year2021`.`LATITUDE` IS NOT NULL AND `year2021`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2021`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2022`.`CASE NUMBER`,&#13;
    `year2022`.`DEPARTMENT`,&#13;
    `year2022`.`DIVISION`,&#13;
    `year2022`.`LATITUDE`,&#13;
    `year2022`.`LONGITUDE`,&#13;
    `year2022`.`QUEUE`,&#13;
    `year2022`.`SR CREATE DATE`,&#13;
    `year2022`.`SR LOCATION`,&#13;
    `year2022`.`SR TYPE`,&#13;
    &apos;year2022&apos; AS `Table Name`&#13;
  FROM `year2022`&#13;
  WHERE `year2022`.`SR CREATE DATE` IS NOT NULL AND `year2022`.`LATITUDE` IS NOT NULL AND `year2022`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2022`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2023`.`CASE NUMBER`,&#13;
    `year2023`.`DEPARTMENT`,&#13;
    `year2023`.`DIVISION`,&#13;
    `year2023`.`LATITUDE`,&#13;
    `year2023`.`LONGITUDE`,&#13;
    `year2023`.`QUEUE`,&#13;
    `year2023`.`SR CREATE DATE`,&#13;
    `year2023`.`SR LOCATION`,&#13;
    `year2023`.`SR TYPE`,&#13;
    &apos;year2023&apos; AS `Table Name`&#13;
  FROM `year2023`&#13;
  WHERE `year2023`.`SR CREATE DATE` IS NOT NULL AND `year2023`.`LATITUDE` IS NOT NULL AND `year2023`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2023`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
&#13;
) `t0`</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.1xx1sof04jxe311cinthx0u341tp' name='Custom SQL Query' type='text'>SELECT &#13;
  `t0`.`CASE NUMBER` AS `CASE NUMBER`,&#13;
  `t0`.`DEPARTMENT` AS `DEPARTMENT`,&#13;
  `t0`.`DIVISION` AS `DIVISION`,&#13;
  `t0`.`LATITUDE` AS `LATITUDE`,&#13;
  `t0`.`LONGITUDE` AS `LONGITUDE`,&#13;
  `t0`.`QUEUE` AS `QUEUE`,&#13;
  `t0`.`SR CREATE DATE` AS `SR CREATE DATE`,&#13;
  `t0`.`SR LOCATION` AS `SR LOCATION`,&#13;
  `t0`.`SR TYPE` AS `SR TYPE`,&#13;
  `t0`.`Table Name` AS `Table Name`&#13;
FROM (&#13;
  -- Repeat this structure for each year table&#13;
  SELECT &#13;
    `year2011`.`CASE NUMBER`,&#13;
    `year2011`.`DEPARTMENT`,&#13;
    `year2011`.`DIVISION`,&#13;
    `year2011`.`LATITUDE`,&#13;
    `year2011`.`LONGITUDE`,&#13;
    `year2011`.`QUEUE`,&#13;
    `year2011`.`SR CREATE DATE`,&#13;
    `year2011`.`SR LOCATION`,&#13;
    `year2011`.`SR TYPE`,&#13;
    &apos;year2011&apos; AS `Table Name`&#13;
  FROM `year2011`&#13;
  WHERE `year2011`.`SR CREATE DATE` IS NOT NULL AND `year2011`.`LATITUDE` IS NOT NULL AND `year2011`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2011`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
&#13;
  UNION ALL&#13;
&#13;
  SELECT &#13;
    `year2012`.`CASE NUMBER`,&#13;
    `year2012`.`DEPARTMENT`,&#13;
    `year2012`.`DIVISION`,&#13;
    `year2012`.`LATITUDE`,&#13;
    `year2012`.`LONGITUDE`,&#13;
    `year2012`.`QUEUE`,&#13;
    `year2012`.`SR CREATE DATE`,&#13;
    `year2012`.`SR LOCATION`,&#13;
    `year2012`.`SR TYPE`,&#13;
    &apos;year2012&apos; AS `Table Name`&#13;
  FROM `year2012`&#13;
  WHERE `year2012`.`SR CREATE DATE` IS NOT NULL AND `year2012`.`LATITUDE` IS NOT NULL AND `year2012`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2012`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2013`.`CASE NUMBER`,&#13;
    `year2013`.`DEPARTMENT`,&#13;
    `year2013`.`DIVISION`,&#13;
    `year2013`.`LATITUDE`,&#13;
    `year2013`.`LONGITUDE`,&#13;
    `year2013`.`QUEUE`,&#13;
    `year2013`.`SR CREATE DATE`,&#13;
    `year2013`.`SR LOCATION`,&#13;
    `year2013`.`SR TYPE`,&#13;
    &apos;year2013&apos; AS `Table Name`&#13;
  FROM `year2013`&#13;
  WHERE `year2013`.`SR CREATE DATE` IS NOT NULL AND `year2013`.`LATITUDE` IS NOT NULL AND `year2013`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2013`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2014`.`CASE NUMBER`,&#13;
    `year2014`.`DEPARTMENT`,&#13;
    `year2014`.`DIVISION`,&#13;
    `year2014`.`LATITUDE`,&#13;
    `year2014`.`LONGITUDE`,&#13;
    `year2014`.`QUEUE`,&#13;
    `year2014`.`SR CREATE DATE`,&#13;
    `year2014`.`SR LOCATION`,&#13;
    `year2014`.`SR TYPE`,&#13;
    &apos;year2014&apos; AS `Table Name`&#13;
  FROM `year2014`&#13;
  WHERE `year2014`.`SR CREATE DATE` IS NOT NULL AND `year2014`.`LATITUDE` IS NOT NULL AND `year2014`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2014`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2015`.`CASE NUMBER`,&#13;
    `year2015`.`DEPARTMENT`,&#13;
    `year2015`.`DIVISION`,&#13;
    `year2015`.`LATITUDE`,&#13;
    `year2015`.`LONGITUDE`,&#13;
    `year2015`.`QUEUE`,&#13;
    `year2015`.`SR CREATE DATE`,&#13;
    `year2015`.`SR LOCATION`,&#13;
    `year2015`.`SR TYPE`,&#13;
    &apos;year2015&apos; AS `Table Name`&#13;
  FROM `year2015`&#13;
  WHERE `year2015`.`SR CREATE DATE` IS NOT NULL AND `year2015`.`LATITUDE` IS NOT NULL AND `year2015`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2015`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2016`.`CASE NUMBER`,&#13;
    `year2016`.`DEPARTMENT`,&#13;
    `year2016`.`DIVISION`,&#13;
    `year2016`.`LATITUDE`,&#13;
    `year2016`.`LONGITUDE`,&#13;
    `year2016`.`QUEUE`,&#13;
    `year2016`.`SR CREATE DATE`,&#13;
    `year2016`.`SR LOCATION`,&#13;
    `year2016`.`SR TYPE`,&#13;
    &apos;year2016&apos; AS `Table Name`&#13;
  FROM `year2016`&#13;
  WHERE `year2016`.`SR CREATE DATE` IS NOT NULL AND `year2016`.`LATITUDE` IS NOT NULL AND `year2016`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2016`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2017`.`CASE NUMBER`,&#13;
    `year2017`.`DEPARTMENT`,&#13;
    `year2017`.`DIVISION`,&#13;
    `year2017`.`LATITUDE`,&#13;
    `year2017`.`LONGITUDE`,&#13;
    `year2017`.`QUEUE`,&#13;
    `year2017`.`SR CREATE DATE`,&#13;
    `year2017`.`SR LOCATION`,&#13;
    `year2017`.`SR TYPE`,&#13;
    &apos;year2017&apos; AS `Table Name`&#13;
  FROM `year2017`&#13;
  WHERE `year2017`.`SR CREATE DATE` IS NOT NULL AND `year2017`.`LATITUDE` IS NOT NULL AND `year2017`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2017`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2018`.`CASE NUMBER`,&#13;
    `year2018`.`DEPARTMENT`,&#13;
    `year2018`.`DIVISION`,&#13;
    `year2018`.`LATITUDE`,&#13;
    `year2018`.`LONGITUDE`,&#13;
    `year2018`.`QUEUE`,&#13;
    `year2018`.`SR CREATE DATE`,&#13;
    `year2018`.`SR LOCATION`,&#13;
    `year2018`.`SR TYPE`,&#13;
    &apos;year2018&apos; AS `Table Name`&#13;
  FROM `year2018`&#13;
  WHERE `year2018`.`SR CREATE DATE` IS NOT NULL AND `year2018`.`LATITUDE` IS NOT NULL AND `year2018`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2018`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2019`.`CASE NUMBER`,&#13;
    `year2019`.`DEPARTMENT`,&#13;
    `year2019`.`DIVISION`,&#13;
    `year2019`.`LATITUDE`,&#13;
    `year2019`.`LONGITUDE`,&#13;
    `year2019`.`QUEUE`,&#13;
    `year2019`.`SR CREATE DATE`,&#13;
    `year2019`.`SR LOCATION`,&#13;
    `year2019`.`SR TYPE`,&#13;
    &apos;year2019&apos; AS `Table Name`&#13;
  FROM `year2019`&#13;
  WHERE `year2019`.`SR CREATE DATE` IS NOT NULL AND `year2019`.`LATITUDE` IS NOT NULL AND `year2019`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2019`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2020`.`CASE NUMBER`,&#13;
    `year2020`.`DEPARTMENT`,&#13;
    `year2020`.`DIVISION`,&#13;
    `year2020`.`LATITUDE`,&#13;
    `year2020`.`LONGITUDE`,&#13;
    `year2020`.`QUEUE`,&#13;
    `year2020`.`SR CREATE DATE`,&#13;
    `year2020`.`SR LOCATION`,&#13;
    `year2020`.`SR TYPE`,&#13;
    &apos;year2020&apos; AS `Table Name`&#13;
  FROM `year2020`&#13;
  WHERE `year2020`.`SR CREATE DATE` IS NOT NULL AND `year2020`.`LATITUDE` IS NOT NULL AND `year2020`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2020`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2021`.`CASE NUMBER`,&#13;
    `year2021`.`DEPARTMENT`,&#13;
    `year2021`.`DIVISION`,&#13;
    `year2021`.`LATITUDE`,&#13;
    `year2021`.`LONGITUDE`,&#13;
    `year2021`.`QUEUE`,&#13;
    `year2021`.`SR CREATE DATE`,&#13;
    `year2021`.`SR LOCATION`,&#13;
    `year2021`.`SR TYPE`,&#13;
    &apos;year2021&apos; AS `Table Name`&#13;
  FROM `year2021`&#13;
  WHERE `year2021`.`SR CREATE DATE` IS NOT NULL AND `year2021`.`LATITUDE` IS NOT NULL AND `year2021`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2021`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2022`.`CASE NUMBER`,&#13;
    `year2022`.`DEPARTMENT`,&#13;
    `year2022`.`DIVISION`,&#13;
    `year2022`.`LATITUDE`,&#13;
    `year2022`.`LONGITUDE`,&#13;
    `year2022`.`QUEUE`,&#13;
    `year2022`.`SR CREATE DATE`,&#13;
    `year2022`.`SR LOCATION`,&#13;
    `year2022`.`SR TYPE`,&#13;
    &apos;year2022&apos; AS `Table Name`&#13;
  FROM `year2022`&#13;
  WHERE `year2022`.`SR CREATE DATE` IS NOT NULL AND `year2022`.`LATITUDE` IS NOT NULL AND `year2022`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2022`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2023`.`CASE NUMBER`,&#13;
    `year2023`.`DEPARTMENT`,&#13;
    `year2023`.`DIVISION`,&#13;
    `year2023`.`LATITUDE`,&#13;
    `year2023`.`LONGITUDE`,&#13;
    `year2023`.`QUEUE`,&#13;
    `year2023`.`SR CREATE DATE`,&#13;
    `year2023`.`SR LOCATION`,&#13;
    `year2023`.`SR TYPE`,&#13;
    &apos;year2023&apos; AS `Table Name`&#13;
  FROM `year2023`&#13;
  WHERE `year2023`.`SR CREATE DATE` IS NOT NULL AND `year2023`.`LATITUDE` IS NOT NULL AND `year2023`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2023`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
&#13;
) `t0`</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>CASE NUMBER</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CASE NUMBER]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>CASE NUMBER</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>254</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_20256B07EC9149EAAD98909A795E722D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEPARTMENT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DEPARTMENT]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>DEPARTMENT</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>254</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_20256B07EC9149EAAD98909A795E722D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DIVISION</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DIVISION]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>DIVISION</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>254</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_20256B07EC9149EAAD98909A795E722D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_20256B07EC9149EAAD98909A795E722D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_20256B07EC9149EAAD98909A795E722D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QUEUE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[QUEUE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>QUEUE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>254</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_20256B07EC9149EAAD98909A795E722D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SR CREATE DATE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SR CREATE DATE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>SR CREATE DATE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>65535</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_20256B07EC9149EAAD98909A795E722D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SR LOCATION</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SR LOCATION]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>SR LOCATION</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>254</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_20256B07EC9149EAAD98909A795E722D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SR TYPE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SR TYPE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>SR TYPE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>254</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_20256B07EC9149EAAD98909A795E722D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_20256B07EC9149EAAD98909A795E722D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Case Number' datatype='string' name='[CASE NUMBER]' role='dimension' type='nominal' />
      <column caption='Parameter Filter' datatype='boolean' name='[Calculation_2994893775688331268]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[SR TYPE] = [Parameters].[Parameter 1] OR [SR TYPE] = [Parameters].[Parameter 1 (copy)_2994893775512735746]' />
      </column>
      <column caption='Week Offset Calculation' datatype='datetime' name='[Calculation_2994893775693299717]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [SR TYPE] = [Parameters].[Parameter 1 (copy)_2994893775512735746] THEN&#13;&#10;    DATEADD(&apos;week&apos;, [Parameters].[Parameter 3], [Calculation_2994893776234864663])&#13;&#10;ELSE&#13;&#10;    [Calculation_2994893776234864663]&#13;&#10;END' />
      </column>
      <column caption='Cluster Correlation' datatype='real' name='[Calculation_2994893775701307401]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;import numpy as np&#13;&#10;import pandas as pd&#13;&#10;from sklearn.cluster import DBSCAN&#13;&#10;from sklearn.metrics.pairwise import haversine_distances&#13;&#10;from math import radians&#13;&#10;&#13;&#10;# Convert lat/long to radians&#13;&#10;def latlong_to_radians(lat, long):&#13;&#10;    return [radians(lat), radians(long)]&#13;&#10;&#13;&#10;# Perform DBSCAN clustering&#13;&#10;def cluster_coordinates(latitudes, longitudes, eps_km):&#13;&#10;    earth_radius_km = 6371.0088  # Earth&apos;s radius in kilometers&#13;&#10;    data_rad = np.array([latlong_to_radians(lat, lon) for lat, lon in zip(latitudes, longitudes)])&#13;&#10;    db = DBSCAN(eps=eps_km / earth_radius_km, min_samples=1, algorithm=&apos;ball_tree&apos;, metric=&apos;haversine&apos;).fit(data_rad)&#13;&#10;    return db.labels_&#13;&#10;&#13;&#10;# Function to calculate correlation based on distance&#13;&#10;def calculate_correlation(cluster_centers_1, cluster_centers_2, max_distance_km):&#13;&#10;    correlations = []&#13;&#10;    for center_1 in cluster_centers_1:&#13;&#10;        closest_distance = min([haversine_distances([center_1, center_2]).min() * earth_radius_km for center_2 in cluster_centers_2])&#13;&#10;        correlation = 1 - min(closest_distance / max_distance_km, 1)  # Normalize and invert&#13;&#10;        correlations.append(correlation)&#13;&#10;    return correlations&#13;&#10;&#13;&#10;# Convert incoming data to DataFrame&#13;&#10;data = pd.DataFrame({&apos;Latitude&apos;: _arg1, &apos;Longitude&apos;: _arg2, &apos;SR TYPE&apos;: _arg3})&#13;&#10;&#13;&#10;# Separate data based on SR TYPE and Parameter values&#13;&#10;df1 = data[data[&apos;SR TYPE&apos;] == _arg4]&#13;&#10;df2 = data[data[&apos;SR TYPE&apos;] == _arg5]&#13;&#10;&#13;&#10;# Define clustering parameters&#13;&#10;eps_km = 0.5  # Radius for DBSCAN (0.5 km)&#13;&#10;max_distance_km = 1  # Maximum distance for correlation calculation (1 km)&#13;&#10;&#13;&#10;# Check if dataframes are empty&#13;&#10;if df1.empty or df2.empty:&#13;&#10;    return []&#13;&#10;&#13;&#10;# Perform clustering&#13;&#10;labels1 = cluster_coordinates(df1[&apos;Latitude&apos;], df1[&apos;Longitude&apos;], eps_km)&#13;&#10;labels2 = cluster_coordinates(df2[&apos;Latitude&apos;], df2[&apos;Longitude&apos;], eps_km)&#13;&#10;&#13;&#10;# Calculate cluster centers&#13;&#10;cluster_centers_1 = df1.groupby(labels1).mean()[[&apos;Latitude&apos;, &apos;Longitude&apos;]].values&#13;&#10;cluster_centers_2 = df2.groupby(labels2).mean()[[&apos;Latitude&apos;, &apos;Longitude&apos;]].values&#13;&#10;&#13;&#10;# Calculate correlations&#13;&#10;correlations = calculate_correlation(cluster_centers_1, cluster_centers_2, max_distance_km)&#13;&#10;&#13;&#10;# Prepare output&#13;&#10;output_data = pd.DataFrame(cluster_centers_1, columns=[&apos;Latitude&apos;, &apos;Longitude&apos;])&#13;&#10;output_data[&apos;Correlation&apos;] = correlations&#13;&#10;&#13;&#10;# Flatten output data to a list and ensure all values are floats&#13;&#10;output_list = []&#13;&#10;for _, row in output_data.iterrows():&#13;&#10;    output_list.extend([float(row[&apos;Latitude&apos;]), float(row[&apos;Longitude&apos;]), float(row[&apos;Correlation&apos;])])&#13;&#10;&#13;&#10;output_list&#13;&#10;&quot;,&#13;&#10;ATTR([LATITUDE]), ATTR([LONGITUDE]), ATTR([SR TYPE]), [Parameters].[Parameter 1], [Parameters].[Parameter 1 (copy)_2994893775512735746])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Trigger Clustering and Correlation' datatype='real' name='[Calculation_2994893775719129098]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;    # Python script to perform clustering and correlation&#13;&#10;    # The script will store the results in a global variable&#13;&#10;    # ...&#13;&#10;&#13;&#10;    # Return a simple confirmation value, like 1, to indicate completion&#13;&#10;    # Import necessary libraries&#13;&#10;    import numpy as np&#13;&#10;    import pandas as pd&#13;&#10;    from sklearn.cluster import DBSCAN&#13;&#10;    from sklearn.metrics.pairwise import haversine_distances&#13;&#10;    from math import radians&#13;&#10;&#13;&#10;    # Convert lat/long to radians&#13;&#10;    def latlong_to_radians(lat, long):&#13;&#10;        return [radians(lat), radians(long)]&#13;&#10;    &#13;&#10;    # Perform DBSCAN clustering&#13;&#10;    def cluster_coordinates(latitudes, longitudes, eps_km):&#13;&#10;        earth_radius_km = 6371.0088  # Earth&apos;s radius in kilometers&#13;&#10;        data_rad = np.array([latlong_to_radians(lat, lon) for lat, lon in zip(latitudes, longitudes)])&#13;&#10;        db = DBSCAN(eps=eps_km / earth_radius_km, min_samples=1, algorithm=&apos;ball_tree&apos;, metric=&apos;haversine&apos;).fit(data_rad)&#13;&#10;        return db.labels_&#13;&#10;    &#13;&#10;    # Function to calculate correlation based on distance&#13;&#10;    def calculate_correlation(cluster_centers_1, cluster_centers_2, max_distance_km):&#13;&#10;        correlations = []&#13;&#10;        for center_1 in cluster_centers_1:&#13;&#10;            closest_distance = min([haversine_distances([center_1, center_2]).min() * earth_radius_km for center_2 in cluster_centers_2])&#13;&#10;            correlation = 1 - min(closest_distance / max_distance_km, 1)  # Normalize and invert&#13;&#10;            correlations.append(correlation)&#13;&#10;        return correlations&#13;&#10;    &#13;&#10;    # Convert incoming data to DataFrame&#13;&#10;    data = pd.DataFrame({&apos;Latitude&apos;: _arg1, &apos;Longitude&apos;: _arg2, &apos;SR TYPE&apos;: _arg3})&#13;&#10;    &#13;&#10;    # Separate data based on SR TYPE and Parameter values&#13;&#10;    df1 = data[data[&apos;SR TYPE&apos;] == _arg4]&#13;&#10;    df2 = data[data[&apos;SR TYPE&apos;] == _arg5]&#13;&#10;    &#13;&#10;    # Define clustering parameters&#13;&#10;    eps_km = 0.5  # Radius for DBSCAN (0.5 km)&#13;&#10;    max_distance_km = 1  # Maximum distance for correlation calculation (1 km)&#13;&#10;    &#13;&#10;    # Check if dataframes are empty&#13;&#10;    if df1.empty or df2.empty:&#13;&#10;        return []&#13;&#10;    &#13;&#10;    # Perform clustering&#13;&#10;    labels1 = cluster_coordinates(df1[&apos;Latitude&apos;], df1[&apos;Longitude&apos;], eps_km)&#13;&#10;    labels2 = cluster_coordinates(df2[&apos;Latitude&apos;], df2[&apos;Longitude&apos;], eps_km)&#13;&#10;    &#13;&#10;    # Calculate cluster centers&#13;&#10;    cluster_centers_1 = df1.groupby(labels1).mean()[[&apos;Latitude&apos;, &apos;Longitude&apos;]].values&#13;&#10;    cluster_centers_2 = df2.groupby(labels2).mean()[[&apos;Latitude&apos;, &apos;Longitude&apos;]].values&#13;&#10;    &#13;&#10;    # Calculate correlations&#13;&#10;    correlations = calculate_correlation(cluster_centers_1, cluster_centers_2, max_distance_km)&#13;&#10;    &#13;&#10;    # Store the results in a global variable&#13;&#10;    global results&#13;&#10;    results = {&#13;&#10;        &apos;latitude&apos;: cluster_centers_1[:, 0].tolist(),&#13;&#10;        &apos;longitude&apos;: cluster_centers_1[:, 1].tolist(),&#13;&#10;        &apos;correlation&apos;: correlations&#13;&#10;    }&#13;&#10;    &#13;&#10;    # Return a confirmation value&#13;&#10;    1.0&#13;&#10;    &#13;&#10; &quot;,&#13;&#10;    ATTR([LATITUDE]), ATTR([LONGITUDE]), ATTR([SR TYPE]), [Parameters].[Parameter 1], [Parameters].[Parameter 1 (copy)_2994893775512735746])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Year' datatype='integer' name='[Calculation_2994893776222662677]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([SR CREATE DATE], &apos; &apos;)&#13;&#10;THEN YEAR(DATEPARSE(&quot;M/d/yy hh:mm&quot;, [SR CREATE DATE]))&#13;&#10;ELSE YEAR(DATEPARSE(&quot;M/d/yy&quot;, [SR CREATE DATE]))&#13;&#10;END' />
      </column>
      <column caption='Week' datatype='integer' name='[Calculation_2994893776233443350]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([SR CREATE DATE], &apos; &apos;)&#13;&#10;THEN DATEPART(&apos;week&apos;, DATEPARSE(&quot;M/d/yy hh:mm&quot;, [SR CREATE DATE]))&#13;&#10;ELSE DATEPART(&apos;week&apos;, DATEPARSE(&quot;M/d/yy&quot;, [SR CREATE DATE]))&#13;&#10;END' />
      </column>
      <column caption='Date' datatype='date' name='[Calculation_2994893776234864663]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF CONTAINS([SR CREATE DATE], &apos; &apos;)&#13;&#10;THEN DATE(DATEPARSE(&quot;M/d/yy hh:mm&quot;, [SR CREATE DATE]))&#13;&#10;ELSE DATE(DATEPARSE(&quot;M/d/yy&quot;, [SR CREATE DATE]))&#13;&#10;END' />
      </column>
      <column caption='Combined Filter Calculation' datatype='boolean' name='[Calculation_2994893776465948701]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [SR TYPE] = [Parameters].[Parameter 1] AND [Calculation_2994893776222662677] = [Parameters].[Parameter 5] AND [Calculation_2994893776233443350] = [Parameters].[Parameter 6] THEN&#13;&#10;    TRUE&#13;&#10;ELSEIF [Parameters].[Parameter 6] + [Parameters].[Parameter 3] &gt; 53 THEN&#13;&#10;    IF [Parameters].[Parameter 5] + 1 &gt; 2023 THEN&#13;&#10;        FALSE&#13;&#10;    ELSE&#13;&#10;        [SR TYPE] = [Parameters].[Parameter 1 (copy)_2994893775512735746] AND [Calculation_2994893776222662677] = [Parameters].[Parameter 5] + 1 AND [Calculation_2994893776233443350] = ([Parameters].[Parameter 6] + [Parameters].[Parameter 3]) % 53&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    [SR TYPE] = [Parameters].[Parameter 1 (copy)_2994893775512735746] AND [Calculation_2994893776222662677] = [Parameters].[Parameter 5] AND [Calculation_2994893776233443350] = [Parameters].[Parameter 6] + [Parameters].[Parameter 3]&#13;&#10;END' />
      </column>
      <column caption='Department' datatype='string' name='[DEPARTMENT]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Sr Create Date' datatype='string' datatype-customized='true' default-format='*mm/DD/YYYY hh:mm' name='[SR CREATE DATE]' role='dimension' type='nominal' />
      <column datatype='string' name='[SR TYPE]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='year2011+' datatype='table' name='[__tableau_internal_object_id__].[_20256B07EC9149EAAD98909A795E722D]' role='measure' type='quantitative' />
      <column-instance column='[SR TYPE]' derivation='None' name='[none:SR TYPE:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/chris/Documents/My Tableau Repository/Datasources/Project_311.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/19/2023 03:06:50 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='year2022+ (project_311)' increment-value='%null%' refresh-type='create' rows-inserted='917953' timestamp-start='2023-11-19 03:06:40.552' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>CASE NUMBER</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CASE NUMBER]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CASE NUMBER</remote-alias>
              <ordinal>0</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>877314</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_20256B07EC9149EAAD98909A795E722D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DEPARTMENT</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DEPARTMENT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DEPARTMENT</remote-alias>
              <ordinal>1</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_20256B07EC9149EAAD98909A795E722D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DIVISION</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DIVISION]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DIVISION</remote-alias>
              <ordinal>2</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_20256B07EC9149EAAD98909A795E722D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LATITUDE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LATITUDE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LATITUDE</remote-alias>
              <ordinal>3</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>296645</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_20256B07EC9149EAAD98909A795E722D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LONGITUDE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LONGITUDE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LONGITUDE</remote-alias>
              <ordinal>4</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>294284</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_20256B07EC9149EAAD98909A795E722D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QUEUE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[QUEUE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QUEUE</remote-alias>
              <ordinal>5</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>38</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_20256B07EC9149EAAD98909A795E722D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SR CREATE DATE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SR CREATE DATE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SR CREATE DATE</remote-alias>
              <ordinal>6</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>135854</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_20256B07EC9149EAAD98909A795E722D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SR LOCATION</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SR LOCATION]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SR LOCATION</remote-alias>
              <ordinal>7</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>398874</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_20256B07EC9149EAAD98909A795E722D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SR TYPE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SR TYPE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SR TYPE</remote-alias>
              <ordinal>8</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_20256B07EC9149EAAD98909A795E722D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Table Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Table Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Table Name</remote-alias>
              <ordinal>9</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_20256B07EC9149EAAD98909A795E722D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.659465' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.340535' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:SR TYPE:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Air Pollution&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Flooding&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Junk Motor Vehicle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missed Garbage Pickup&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Street Condition&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missed Heavy Trash Pickup&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fire Hydrant&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Street Hazard&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Parking Violation&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Missed Recycling Pickup&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pothole&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tree Removal&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Parameter 2' datatype='string' name='[Parameter 1 (copy)_2994893775512735746]' param-domain-type='list' role='measure' type='nominal' value='&quot;Pothole&quot;'>
          <calculation class='tableau' formula='&quot;Pothole&quot;' />
        </column>
        <column caption='Parameter 1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Street Hazard&quot;'>
          <calculation class='tableau' formula='&quot;Street Hazard&quot;' />
        </column>
        <column caption='Week Offset' datatype='integer' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='0'>
          <calculation class='tableau' formula='0' />
        </column>
        <column caption='Selected Year' datatype='integer' default-format='n0;-0' name='[Parameter 5]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
          <calculation class='tableau' formula='2021' />
        </column>
        <column caption='Selected Week' datatype='integer' name='[Parameter 6]' param-domain-type='list' role='measure' type='quantitative' value='6'>
          <calculation class='tableau' formula='6' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='year2011+' id='_20256B07EC9149EAAD98909A795E722D'>
            <properties context=''>
              <relation connection='mysql.1xx1sof04jxe311cinthx0u341tp' name='Custom SQL Query' type='text'>SELECT &#13;
  `t0`.`CASE NUMBER` AS `CASE NUMBER`,&#13;
  `t0`.`DEPARTMENT` AS `DEPARTMENT`,&#13;
  `t0`.`DIVISION` AS `DIVISION`,&#13;
  `t0`.`LATITUDE` AS `LATITUDE`,&#13;
  `t0`.`LONGITUDE` AS `LONGITUDE`,&#13;
  `t0`.`QUEUE` AS `QUEUE`,&#13;
  `t0`.`SR CREATE DATE` AS `SR CREATE DATE`,&#13;
  `t0`.`SR LOCATION` AS `SR LOCATION`,&#13;
  `t0`.`SR TYPE` AS `SR TYPE`,&#13;
  `t0`.`Table Name` AS `Table Name`&#13;
FROM (&#13;
  -- Repeat this structure for each year table&#13;
  SELECT &#13;
    `year2011`.`CASE NUMBER`,&#13;
    `year2011`.`DEPARTMENT`,&#13;
    `year2011`.`DIVISION`,&#13;
    `year2011`.`LATITUDE`,&#13;
    `year2011`.`LONGITUDE`,&#13;
    `year2011`.`QUEUE`,&#13;
    `year2011`.`SR CREATE DATE`,&#13;
    `year2011`.`SR LOCATION`,&#13;
    `year2011`.`SR TYPE`,&#13;
    &apos;year2011&apos; AS `Table Name`&#13;
  FROM `year2011`&#13;
  WHERE `year2011`.`SR CREATE DATE` IS NOT NULL AND `year2011`.`LATITUDE` IS NOT NULL AND `year2011`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2011`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
&#13;
  UNION ALL&#13;
&#13;
  SELECT &#13;
    `year2012`.`CASE NUMBER`,&#13;
    `year2012`.`DEPARTMENT`,&#13;
    `year2012`.`DIVISION`,&#13;
    `year2012`.`LATITUDE`,&#13;
    `year2012`.`LONGITUDE`,&#13;
    `year2012`.`QUEUE`,&#13;
    `year2012`.`SR CREATE DATE`,&#13;
    `year2012`.`SR LOCATION`,&#13;
    `year2012`.`SR TYPE`,&#13;
    &apos;year2012&apos; AS `Table Name`&#13;
  FROM `year2012`&#13;
  WHERE `year2012`.`SR CREATE DATE` IS NOT NULL AND `year2012`.`LATITUDE` IS NOT NULL AND `year2012`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2012`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2013`.`CASE NUMBER`,&#13;
    `year2013`.`DEPARTMENT`,&#13;
    `year2013`.`DIVISION`,&#13;
    `year2013`.`LATITUDE`,&#13;
    `year2013`.`LONGITUDE`,&#13;
    `year2013`.`QUEUE`,&#13;
    `year2013`.`SR CREATE DATE`,&#13;
    `year2013`.`SR LOCATION`,&#13;
    `year2013`.`SR TYPE`,&#13;
    &apos;year2013&apos; AS `Table Name`&#13;
  FROM `year2013`&#13;
  WHERE `year2013`.`SR CREATE DATE` IS NOT NULL AND `year2013`.`LATITUDE` IS NOT NULL AND `year2013`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2013`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2014`.`CASE NUMBER`,&#13;
    `year2014`.`DEPARTMENT`,&#13;
    `year2014`.`DIVISION`,&#13;
    `year2014`.`LATITUDE`,&#13;
    `year2014`.`LONGITUDE`,&#13;
    `year2014`.`QUEUE`,&#13;
    `year2014`.`SR CREATE DATE`,&#13;
    `year2014`.`SR LOCATION`,&#13;
    `year2014`.`SR TYPE`,&#13;
    &apos;year2014&apos; AS `Table Name`&#13;
  FROM `year2014`&#13;
  WHERE `year2014`.`SR CREATE DATE` IS NOT NULL AND `year2014`.`LATITUDE` IS NOT NULL AND `year2014`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2014`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2015`.`CASE NUMBER`,&#13;
    `year2015`.`DEPARTMENT`,&#13;
    `year2015`.`DIVISION`,&#13;
    `year2015`.`LATITUDE`,&#13;
    `year2015`.`LONGITUDE`,&#13;
    `year2015`.`QUEUE`,&#13;
    `year2015`.`SR CREATE DATE`,&#13;
    `year2015`.`SR LOCATION`,&#13;
    `year2015`.`SR TYPE`,&#13;
    &apos;year2015&apos; AS `Table Name`&#13;
  FROM `year2015`&#13;
  WHERE `year2015`.`SR CREATE DATE` IS NOT NULL AND `year2015`.`LATITUDE` IS NOT NULL AND `year2015`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2015`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2016`.`CASE NUMBER`,&#13;
    `year2016`.`DEPARTMENT`,&#13;
    `year2016`.`DIVISION`,&#13;
    `year2016`.`LATITUDE`,&#13;
    `year2016`.`LONGITUDE`,&#13;
    `year2016`.`QUEUE`,&#13;
    `year2016`.`SR CREATE DATE`,&#13;
    `year2016`.`SR LOCATION`,&#13;
    `year2016`.`SR TYPE`,&#13;
    &apos;year2016&apos; AS `Table Name`&#13;
  FROM `year2016`&#13;
  WHERE `year2016`.`SR CREATE DATE` IS NOT NULL AND `year2016`.`LATITUDE` IS NOT NULL AND `year2016`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2016`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2017`.`CASE NUMBER`,&#13;
    `year2017`.`DEPARTMENT`,&#13;
    `year2017`.`DIVISION`,&#13;
    `year2017`.`LATITUDE`,&#13;
    `year2017`.`LONGITUDE`,&#13;
    `year2017`.`QUEUE`,&#13;
    `year2017`.`SR CREATE DATE`,&#13;
    `year2017`.`SR LOCATION`,&#13;
    `year2017`.`SR TYPE`,&#13;
    &apos;year2017&apos; AS `Table Name`&#13;
  FROM `year2017`&#13;
  WHERE `year2017`.`SR CREATE DATE` IS NOT NULL AND `year2017`.`LATITUDE` IS NOT NULL AND `year2017`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2017`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2018`.`CASE NUMBER`,&#13;
    `year2018`.`DEPARTMENT`,&#13;
    `year2018`.`DIVISION`,&#13;
    `year2018`.`LATITUDE`,&#13;
    `year2018`.`LONGITUDE`,&#13;
    `year2018`.`QUEUE`,&#13;
    `year2018`.`SR CREATE DATE`,&#13;
    `year2018`.`SR LOCATION`,&#13;
    `year2018`.`SR TYPE`,&#13;
    &apos;year2018&apos; AS `Table Name`&#13;
  FROM `year2018`&#13;
  WHERE `year2018`.`SR CREATE DATE` IS NOT NULL AND `year2018`.`LATITUDE` IS NOT NULL AND `year2018`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2018`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2019`.`CASE NUMBER`,&#13;
    `year2019`.`DEPARTMENT`,&#13;
    `year2019`.`DIVISION`,&#13;
    `year2019`.`LATITUDE`,&#13;
    `year2019`.`LONGITUDE`,&#13;
    `year2019`.`QUEUE`,&#13;
    `year2019`.`SR CREATE DATE`,&#13;
    `year2019`.`SR LOCATION`,&#13;
    `year2019`.`SR TYPE`,&#13;
    &apos;year2019&apos; AS `Table Name`&#13;
  FROM `year2019`&#13;
  WHERE `year2019`.`SR CREATE DATE` IS NOT NULL AND `year2019`.`LATITUDE` IS NOT NULL AND `year2019`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2019`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2020`.`CASE NUMBER`,&#13;
    `year2020`.`DEPARTMENT`,&#13;
    `year2020`.`DIVISION`,&#13;
    `year2020`.`LATITUDE`,&#13;
    `year2020`.`LONGITUDE`,&#13;
    `year2020`.`QUEUE`,&#13;
    `year2020`.`SR CREATE DATE`,&#13;
    `year2020`.`SR LOCATION`,&#13;
    `year2020`.`SR TYPE`,&#13;
    &apos;year2020&apos; AS `Table Name`&#13;
  FROM `year2020`&#13;
  WHERE `year2020`.`SR CREATE DATE` IS NOT NULL AND `year2020`.`LATITUDE` IS NOT NULL AND `year2020`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2020`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2021`.`CASE NUMBER`,&#13;
    `year2021`.`DEPARTMENT`,&#13;
    `year2021`.`DIVISION`,&#13;
    `year2021`.`LATITUDE`,&#13;
    `year2021`.`LONGITUDE`,&#13;
    `year2021`.`QUEUE`,&#13;
    `year2021`.`SR CREATE DATE`,&#13;
    `year2021`.`SR LOCATION`,&#13;
    `year2021`.`SR TYPE`,&#13;
    &apos;year2021&apos; AS `Table Name`&#13;
  FROM `year2021`&#13;
  WHERE `year2021`.`SR CREATE DATE` IS NOT NULL AND `year2021`.`LATITUDE` IS NOT NULL AND `year2021`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2021`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2022`.`CASE NUMBER`,&#13;
    `year2022`.`DEPARTMENT`,&#13;
    `year2022`.`DIVISION`,&#13;
    `year2022`.`LATITUDE`,&#13;
    `year2022`.`LONGITUDE`,&#13;
    `year2022`.`QUEUE`,&#13;
    `year2022`.`SR CREATE DATE`,&#13;
    `year2022`.`SR LOCATION`,&#13;
    `year2022`.`SR TYPE`,&#13;
    &apos;year2022&apos; AS `Table Name`&#13;
  FROM `year2022`&#13;
  WHERE `year2022`.`SR CREATE DATE` IS NOT NULL AND `year2022`.`LATITUDE` IS NOT NULL AND `year2022`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2022`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
  &#13;
  UNION ALL&#13;
  &#13;
  SELECT &#13;
    `year2023`.`CASE NUMBER`,&#13;
    `year2023`.`DEPARTMENT`,&#13;
    `year2023`.`DIVISION`,&#13;
    `year2023`.`LATITUDE`,&#13;
    `year2023`.`LONGITUDE`,&#13;
    `year2023`.`QUEUE`,&#13;
    `year2023`.`SR CREATE DATE`,&#13;
    `year2023`.`SR LOCATION`,&#13;
    `year2023`.`SR TYPE`,&#13;
    &apos;year2023&apos; AS `Table Name`&#13;
  FROM `year2023`&#13;
  WHERE `year2023`.`SR CREATE DATE` IS NOT NULL AND `year2023`.`LATITUDE` IS NOT NULL AND `year2023`.`LONGITUDE` IS NOT NULL&#13;
	AND `year2023`.`SR TYPE` IN (&apos;Air Pollution&apos;, &apos;Fire Hydrant&apos;, &apos;Flooding&apos;, &apos;Junk Motor Vehicle&apos;, &apos;Missed Garbage Pickup&apos;, &apos;Missed Heavy Trash Pickup&apos;, &apos;Missed Recycling Pickup&apos;, &apos;Parking Violation&apos;, &apos;Pothole&apos;, &apos;Street Condition&apos;, &apos;Street Hazard&apos;, &apos;Tree Removal&apos;)&#13;
&#13;
) `t0`</relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 2 (generated)' name='[Action2_E058A605A23343BDAC9FEEA36F97570C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Parameter 2,SR TYPE' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cluster Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='cluster_centerpoints' name='federated.0xr0hvc06lld9h1a394az1e34oki' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 2' datatype='string' name='[Parameter 1 (copy)_2994893775512735746]' param-domain-type='list' role='measure' type='nominal' value='&quot;Pothole&quot;'>
              <calculation class='tableau' formula='&quot;Pothole&quot;' />
            </column>
            <column caption='Parameter 1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Street Hazard&quot;'>
              <calculation class='tableau' formula='&quot;Street Hazard&quot;' />
            </column>
            <column caption='Week Offset' datatype='integer' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='0'>
              <calculation class='tableau' formula='0' />
            </column>
            <column caption='Selected Year' datatype='integer' default-format='n0;-0' name='[Parameter 5]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
              <calculation class='tableau' formula='2021' />
            </column>
            <column caption='Selected Week' datatype='integer' name='[Parameter 6]' param-domain-type='list' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0xr0hvc06lld9h1a394az1e34oki'>
            <column caption='Combined Filter Calculation' datatype='boolean' name='[Calculation_2994893776472580126]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [SR TYPE] = [Parameters].[Parameter 1] AND [Year] = [Parameters].[Parameter 5] AND [Week] = [Parameters].[Parameter 6] THEN&#13;&#10;    TRUE&#13;&#10;ELSEIF [Parameters].[Parameter 6] + [Parameters].[Parameter 3] &gt; 53 THEN&#13;&#10;    IF [Parameters].[Parameter 5] + 1 &gt; 2023 THEN&#13;&#10;        FALSE&#13;&#10;    ELSE&#13;&#10;        [SR TYPE] = [Parameters].[Parameter 1 (copy)_2994893775512735746] AND [Year] = [Parameters].[Parameter 5] + 1 AND [Week] = ([Parameters].[Parameter 6] + [Parameters].[Parameter 3]) % 53&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    [SR TYPE] = [Parameters].[Parameter 1 (copy)_2994893775512735746] AND [Year] = [Parameters].[Parameter 5] AND [Week] = [Parameters].[Parameter 6] + [Parameters].[Parameter 3]&#13;&#10;END' />
            </column>
            <column caption='Cluster ID' datatype='integer' name='[ClusterID]' role='dimension' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Sr Type' datatype='string' name='[SR TYPE]' role='dimension' type='nominal' />
            <column caption='Week1' datatype='integer' name='[Week]' role='dimension' type='quantitative' />
            <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2994893776472580126]' derivation='None' name='[none:Calculation_2994893776472580126:nk]' pivot='key' type='nominal' />
            <column-instance column='[ClusterID]' derivation='None' name='[none:ClusterID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[SR TYPE]' derivation='None' name='[none:SR TYPE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xr0hvc06lld9h1a394az1e34oki].[none:Calculation_2994893776472580126:nk]'>
            <groupfilter function='member' level='[none:Calculation_2994893776472580126:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xr0hvc06lld9h1a394az1e34oki].[none:Calculation_2994893776472580126:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xr0hvc06lld9h1a394az1e34oki].[avg:Longitude:qk]' field-type='quantitative' max='-10530553.394648436' min='-10677574.573667975' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0xr0hvc06lld9h1a394az1e34oki].[avg:Latitude:qk]' field-type='quantitative' max='3501302.3149479791' min='3439406.8668481777' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0xr0hvc06lld9h1a394az1e34oki].[none:SR TYPE:nk]' />
              <lod column='[federated.0xr0hvc06lld9h1a394az1e34oki].[none:ClusterID:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xr0hvc06lld9h1a394az1e34oki].[avg:Latitude:qk]</rows>
        <cols>[federated.0xr0hvc06lld9h1a394az1e34oki].[avg:Longitude:qk]</cols>
      </table>
      <simple-id uuid='{D5070386-2ACB-4C53-98D4-8D461B316EE4}' />
    </worksheet>
    <worksheet name='Correlation Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; of &lt;</run>
            <run>[Parameters].[Parameter 1]</run>
            <run>&gt; correlated to &lt;</run>
            <run>[Parameters].[Parameter 1 (copy)_2994893775512735746]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='correlation_results (project_311)' name='federated.0io29bp1eu65so1276ma71vmvn64' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 2' datatype='string' name='[Parameter 1 (copy)_2994893775512735746]' param-domain-type='list' role='measure' type='nominal' value='&quot;Pothole&quot;'>
              <calculation class='tableau' formula='&quot;Pothole&quot;' />
            </column>
            <column caption='Parameter 1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Street Hazard&quot;'>
              <calculation class='tableau' formula='&quot;Street Hazard&quot;' />
            </column>
            <column caption='Week Offset' datatype='integer' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='0'>
              <calculation class='tableau' formula='0' />
            </column>
            <column caption='Selected Year' datatype='integer' default-format='n0;-0' name='[Parameter 5]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
              <calculation class='tableau' formula='2021' />
            </column>
            <column caption='Selected Week' datatype='integer' name='[Parameter 6]' param-domain-type='list' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0io29bp1eu65so1276ma71vmvn64'>
            <column caption='Parameter Filter' datatype='boolean' name='[Calculation_2994893776138154000]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[SR_Type_1] = [Parameters].[Parameter 1] AND [SR_Type_2] = [Parameters].[Parameter 1 (copy)_2994893775512735746] AND [Offset] = [Parameters].[Parameter 3] AND [Week] = [Parameters].[Parameter 6] AND [Year] = [Parameters].[Parameter 5]' />
            </column>
            <column caption='Cluster ID' datatype='integer' name='[ClusterID]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Correlation]' role='measure' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Offset]' role='measure' type='quantitative' />
            <column caption='SR Type 1' datatype='string' name='[SR_Type_1]' role='dimension' type='nominal' />
            <column caption='SR Type 2' datatype='string' name='[SR_Type_2]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Week]' role='dimension' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2994893776138154000]' derivation='None' name='[none:Calculation_2994893776138154000:nk]' pivot='key' type='nominal' />
            <column-instance column='[ClusterID]' derivation='None' name='[none:ClusterID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Correlation]' derivation='None' name='[none:Correlation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SR_Type_1]' derivation='None' name='[none:SR_Type_1:nk]' pivot='key' type='nominal' />
            <column-instance column='[SR_Type_2]' derivation='None' name='[none:SR_Type_2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Week]' derivation='None' name='[none:Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0io29bp1eu65so1276ma71vmvn64].[none:Calculation_2994893776138154000:nk]'>
            <groupfilter function='member' level='[none:Calculation_2994893776138154000:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0io29bp1eu65so1276ma71vmvn64].[none:Calculation_2994893776138154000:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0io29bp1eu65so1276ma71vmvn64].[avg:Longitude:qk]' field-type='quantitative' max='-10546453.467192268' min='-10674492.580257865' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0io29bp1eu65so1276ma71vmvn64].[avg:Latitude:qk]' field-type='quantitative' max='3496370.9340162366' min='3442466.8752245223' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0io29bp1eu65so1276ma71vmvn64].[none:Correlation:qk]' max='1.0' min='0.0' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0io29bp1eu65so1276ma71vmvn64].[none:Correlation:qk]' />
              <lod column='[federated.0io29bp1eu65so1276ma71vmvn64].[none:ClusterID:ok]' />
              <lod column='[federated.0io29bp1eu65so1276ma71vmvn64].[none:Week:qk]' />
              <lod column='[federated.0io29bp1eu65so1276ma71vmvn64].[none:Year:qk]' />
              <lod column='[federated.0io29bp1eu65so1276ma71vmvn64].[none:SR_Type_1:nk]' />
              <lod column='[federated.0io29bp1eu65so1276ma71vmvn64].[none:SR_Type_2:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2.1546962261199951' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0io29bp1eu65so1276ma71vmvn64].[avg:Latitude:qk]</rows>
        <cols>[federated.0io29bp1eu65so1276ma71vmvn64].[avg:Longitude:qk]</cols>
      </table>
      <simple-id uuid='{CB7F6C42-4655-4451-94F2-D6576DB579C9}' />
    </worksheet>
    <worksheet name='General Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='year2022+ (project_311)' name='federated.1xjf8ft1960x32190tsur1ikyccn' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 2' datatype='string' name='[Parameter 1 (copy)_2994893775512735746]' param-domain-type='list' role='measure' type='nominal' value='&quot;Pothole&quot;'>
              <calculation class='tableau' formula='&quot;Pothole&quot;' />
            </column>
            <column caption='Parameter 1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Street Hazard&quot;'>
              <calculation class='tableau' formula='&quot;Street Hazard&quot;' />
            </column>
            <column caption='Week Offset' datatype='integer' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='0'>
              <calculation class='tableau' formula='0' />
            </column>
            <column caption='Selected Year' datatype='integer' default-format='n0;-0' name='[Parameter 5]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
              <calculation class='tableau' formula='2021' />
            </column>
            <column caption='Selected Week' datatype='integer' name='[Parameter 6]' param-domain-type='list' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1xjf8ft1960x32190tsur1ikyccn'>
            <column caption='Case Number' datatype='string' name='[CASE NUMBER]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[Calculation_2994893776222662677]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([SR CREATE DATE], &apos; &apos;)&#13;&#10;THEN YEAR(DATEPARSE(&quot;M/d/yy hh:mm&quot;, [SR CREATE DATE]))&#13;&#10;ELSE YEAR(DATEPARSE(&quot;M/d/yy&quot;, [SR CREATE DATE]))&#13;&#10;END' />
            </column>
            <column caption='Week' datatype='integer' name='[Calculation_2994893776233443350]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([SR CREATE DATE], &apos; &apos;)&#13;&#10;THEN DATEPART(&apos;week&apos;, DATEPARSE(&quot;M/d/yy hh:mm&quot;, [SR CREATE DATE]))&#13;&#10;ELSE DATEPART(&apos;week&apos;, DATEPARSE(&quot;M/d/yy&quot;, [SR CREATE DATE]))&#13;&#10;END' />
            </column>
            <column caption='Combined Filter Calculation' datatype='boolean' name='[Calculation_2994893776465948701]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [SR TYPE] = [Parameters].[Parameter 1] AND [Calculation_2994893776222662677] = [Parameters].[Parameter 5] AND [Calculation_2994893776233443350] = [Parameters].[Parameter 6] THEN&#13;&#10;    TRUE&#13;&#10;ELSEIF [Parameters].[Parameter 6] + [Parameters].[Parameter 3] &gt; 53 THEN&#13;&#10;    IF [Parameters].[Parameter 5] + 1 &gt; 2023 THEN&#13;&#10;        FALSE&#13;&#10;    ELSE&#13;&#10;        [SR TYPE] = [Parameters].[Parameter 1 (copy)_2994893775512735746] AND [Calculation_2994893776222662677] = [Parameters].[Parameter 5] + 1 AND [Calculation_2994893776233443350] = ([Parameters].[Parameter 6] + [Parameters].[Parameter 3]) % 53&#13;&#10;    END&#13;&#10;ELSE&#13;&#10;    [SR TYPE] = [Parameters].[Parameter 1 (copy)_2994893775512735746] AND [Calculation_2994893776222662677] = [Parameters].[Parameter 5] AND [Calculation_2994893776233443350] = [Parameters].[Parameter 6] + [Parameters].[Parameter 3]&#13;&#10;END' />
            </column>
            <column aggregation='Avg' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Sr Create Date' datatype='string' datatype-customized='true' default-format='*mm/DD/YYYY hh:mm' name='[SR CREATE DATE]' role='dimension' type='nominal' />
            <column datatype='string' name='[SR TYPE]' role='dimension' type='nominal' />
            <column-instance column='[LATITUDE]' derivation='Avg' name='[avg:LATITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LONGITUDE]' derivation='Avg' name='[avg:LONGITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CASE NUMBER]' derivation='None' name='[none:CASE NUMBER:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2994893776465948701]' derivation='None' name='[none:Calculation_2994893776465948701:nk]' pivot='key' type='nominal' />
            <column-instance column='[SR TYPE]' derivation='None' name='[none:SR TYPE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xjf8ft1960x32190tsur1ikyccn].[none:Calculation_2994893776465948701:nk]'>
            <groupfilter function='member' level='[none:Calculation_2994893776465948701:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xjf8ft1960x32190tsur1ikyccn].[none:Calculation_2994893776465948701:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xjf8ft1960x32190tsur1ikyccn].[avg:LONGITUDE:qk]' field-type='quantitative' max='-10540183.872628605' min='-10669080.211080562' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1xjf8ft1960x32190tsur1ikyccn].[avg:LATITUDE:qk]' field-type='quantitative' max='3498908.2314401413' min='3444643.2834910592' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1xjf8ft1960x32190tsur1ikyccn].[none:SR TYPE:nk]' />
              <lod column='[federated.1xjf8ft1960x32190tsur1ikyccn].[none:CASE NUMBER:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xjf8ft1960x32190tsur1ikyccn].[avg:LATITUDE:qk]</rows>
        <cols>[federated.1xjf8ft1960x32190tsur1ikyccn].[avg:LONGITUDE:qk]</cols>
      </table>
      <simple-id uuid='{5AF9CEB5-9904-4238-AF49-564193D6510C}' />
    </worksheet>
    <worksheet name='Highest Correlation'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='correlation_results (project_311)' name='federated.0io29bp1eu65so1276ma71vmvn64' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 2' datatype='string' name='[Parameter 1 (copy)_2994893775512735746]' param-domain-type='list' role='measure' type='nominal' value='&quot;Pothole&quot;'>
              <calculation class='tableau' formula='&quot;Pothole&quot;' />
            </column>
            <column caption='Parameter 1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Street Hazard&quot;'>
              <calculation class='tableau' formula='&quot;Street Hazard&quot;' />
            </column>
            <column caption='Week Offset' datatype='integer' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='0'>
              <calculation class='tableau' formula='0' />
            </column>
            <column caption='Selected Year' datatype='integer' default-format='n0;-0' name='[Parameter 5]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
              <calculation class='tableau' formula='2021' />
            </column>
            <column caption='Selected Week' datatype='integer' name='[Parameter 6]' param-domain-type='list' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0io29bp1eu65so1276ma71vmvn64'>
            <column caption='Parameter Filter' datatype='boolean' name='[Calculation_2994893776138154000]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[SR_Type_1] = [Parameters].[Parameter 1] AND [SR_Type_2] = [Parameters].[Parameter 1 (copy)_2994893775512735746] AND [Offset] = [Parameters].[Parameter 3] AND [Week] = [Parameters].[Parameter 6] AND [Year] = [Parameters].[Parameter 5]' />
            </column>
            <column caption='Max Correlation' datatype='real' name='[Calculation_3320560324701941763]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([Correlation])' />
            </column>
            <column datatype='real' name='[Correlation]' role='measure' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Offset]' role='measure' type='quantitative' />
            <column caption='SR Type 1' datatype='string' name='[SR_Type_1]' role='dimension' type='nominal' />
            <column caption='SR Type 2' datatype='string' name='[SR_Type_2]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Week]' role='dimension' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2994893776138154000]' derivation='None' name='[none:Calculation_2994893776138154000:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3320560324701941763]' derivation='User' name='[usr:Calculation_3320560324701941763:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0io29bp1eu65so1276ma71vmvn64].[none:Calculation_2994893776138154000:nk]'>
            <groupfilter function='member' level='[none:Calculation_2994893776138154000:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0io29bp1eu65so1276ma71vmvn64].[none:Calculation_2994893776138154000:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='464' />
            <format attr='height' value='131' />
            <format attr='text-align' value='center' />
            <format attr='font-family' field='[federated.0io29bp1eu65so1276ma71vmvn64].[usr:Calculation_3320560324701941763:qk]' value='Tableau Bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0io29bp1eu65so1276ma71vmvn64].[usr:Calculation_3320560324701941763:qk]' max='1.0' min='0.0' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0io29bp1eu65so1276ma71vmvn64].[usr:Calculation_3320560324701941763:qk]' />
              <size column='[federated.0io29bp1eu65so1276ma71vmvn64].[usr:Calculation_3320560324701941763:qk]' />
              <lod column='[federated.0io29bp1eu65so1276ma71vmvn64].[avg:Latitude:qk]' />
              <lod column='[federated.0io29bp1eu65so1276ma71vmvn64].[avg:Longitude:qk]' />
              <text column='[federated.0io29bp1eu65so1276ma71vmvn64].[usr:Calculation_3320560324701941763:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='40' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='14.547999382019043' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E8D0FBDB-00DC-4DEC-9DD8-4EA261BE420E}' />
    </worksheet>
    <worksheet name='TTL Parameter 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Total &lt;</run>
            <run fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cluster_centerpoints' name='federated.0xr0hvc06lld9h1a394az1e34oki' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Street Hazard&quot;'>
              <calculation class='tableau' formula='&quot;Street Hazard&quot;' />
            </column>
            <column caption='Selected Year' datatype='integer' default-format='n0;-0' name='[Parameter 5]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
              <calculation class='tableau' formula='2021' />
            </column>
            <column caption='Selected Week' datatype='integer' name='[Parameter 6]' param-domain-type='list' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0xr0hvc06lld9h1a394az1e34oki'>
            <column caption='Parameter 1' datatype='integer' name='[Calculation_3320560324690026496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(IF [SR TYPE] = [Parameters].[Parameter 1] AND [Year] = [Parameters].[Parameter 5] AND [Week] = [Parameters].[Parameter 6] THEN 1 END)' />
            </column>
            <column caption='Sr Type' datatype='string' name='[SR TYPE]' role='dimension' type='nominal' />
            <column caption='Week1' datatype='integer' name='[Week]' role='dimension' type='quantitative' />
            <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[SR TYPE]' derivation='None' name='[none:SR TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3320560324690026496]' derivation='User' name='[usr:Calculation_3320560324690026496:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='464' />
            <format attr='height' value='131' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' field='[federated.0xr0hvc06lld9h1a394az1e34oki].[usr:Calculation_3320560324690026496:qk]' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0xr0hvc06lld9h1a394az1e34oki].[none:SR TYPE:nk]' />
              <size column='[federated.0xr0hvc06lld9h1a394az1e34oki].[usr:Calculation_3320560324690026496:qk]' />
              <text column='[federated.0xr0hvc06lld9h1a394az1e34oki].[usr:Calculation_3320560324690026496:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Bold'>&lt;</run>
                <run fontname='Tableau Bold'>[federated.0xr0hvc06lld9h1a394az1e34oki].[usr:Calculation_3320560324690026496:qk]</run>
                <run fontname='Tableau Bold'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='40' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='14.547999382019043' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B4830EBF-5D7D-47F9-8CEC-7D7D2AAAF3A0}' />
    </worksheet>
    <worksheet name='TTL Parameter 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Total &lt;</run>
            <run fontalignment='1'>[Parameters].[Parameter 1 (copy)_2994893775512735746]</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cluster_centerpoints' name='federated.0xr0hvc06lld9h1a394az1e34oki' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 2' datatype='string' name='[Parameter 1 (copy)_2994893775512735746]' param-domain-type='list' role='measure' type='nominal' value='&quot;Pothole&quot;'>
              <calculation class='tableau' formula='&quot;Pothole&quot;' />
            </column>
            <column caption='Selected Year' datatype='integer' default-format='n0;-0' name='[Parameter 5]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
              <calculation class='tableau' formula='2021' />
            </column>
            <column caption='Selected Week' datatype='integer' name='[Parameter 6]' param-domain-type='list' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0xr0hvc06lld9h1a394az1e34oki'>
            <column caption='Parameter 2' datatype='integer' name='[Parameter 1 (copy)_3320560324697333762]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(IF [SR TYPE] = [Parameters].[Parameter 1 (copy)_2994893775512735746] AND [Year] = [Parameters].[Parameter 5] AND [Week] = [Parameters].[Parameter 6] THEN 1 END)' />
            </column>
            <column caption='Sr Type' datatype='string' name='[SR TYPE]' role='dimension' type='nominal' />
            <column caption='Week1' datatype='integer' name='[Week]' role='dimension' type='quantitative' />
            <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[SR TYPE]' derivation='None' name='[none:SR TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Parameter 1 (copy)_3320560324697333762]' derivation='User' name='[usr:Parameter 1 (copy)_3320560324697333762:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='464' />
            <format attr='height' value='131' />
            <format attr='text-align' value='center' />
            <format attr='font-family' field='[federated.0xr0hvc06lld9h1a394az1e34oki].[usr:Parameter 1 (copy)_3320560324697333762:qk]' value='Tableau Bold' />
            <format attr='vertical-align' field='[federated.0xr0hvc06lld9h1a394az1e34oki].[usr:Parameter 1 (copy)_3320560324697333762:qk]' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0xr0hvc06lld9h1a394az1e34oki].[none:SR TYPE:nk]' />
              <size column='[federated.0xr0hvc06lld9h1a394az1e34oki].[usr:Parameter 1 (copy)_3320560324697333762:qk]' />
              <text column='[federated.0xr0hvc06lld9h1a394az1e34oki].[usr:Parameter 1 (copy)_3320560324697333762:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='40' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='14.547999382019043' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{11781D44-4465-4CB4-80E0-3B39CABADB1B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='1080' maxwidth='1920' minheight='1080' minwidth='1920' preset-index='17' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Parameter 2' datatype='string' name='[Parameter 1 (copy)_2994893775512735746]' param-domain-type='list' role='measure' type='nominal' value='&quot;Pothole&quot;'>
          <calculation class='tableau' formula='&quot;Pothole&quot;' />
          <members>
            <member value='&quot;Air Pollution&quot;' />
            <member value='&quot;Fire Hydrant&quot;' />
            <member value='&quot;Flooding&quot;' />
            <member value='&quot;Junk Motor Vehicle&quot;' />
            <member value='&quot;Missed Garbage Pickup&quot;' />
            <member value='&quot;Missed Heaby Trash Pickup&quot;' />
            <member value='&quot;Missed Recycling Pickup&quot;' />
            <member value='&quot;Parking Violations&quot;' />
            <member value='&quot;Pothole&quot;' />
            <member value='&quot;Street Condition&quot;' />
            <member value='&quot;Street Hazard&quot;' />
            <member value='&quot;Tree Removal&quot;' />
          </members>
        </column>
        <column caption='Parameter 1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Street Hazard&quot;'>
          <calculation class='tableau' formula='&quot;Street Hazard&quot;' />
          <members>
            <member value='&quot;Air Pollution&quot;' />
            <member value='&quot;Fire Hydrant&quot;' />
            <member value='&quot;Flooding&quot;' />
            <member value='&quot;Junk Motor Vehicle&quot;' />
            <member value='&quot;Missed Garbage Pickup&quot;' />
            <member value='&quot;Missed Heaby Trash Pickup&quot;' />
            <member value='&quot;Missed Recycling Pickup&quot;' />
            <member value='&quot;Parking Violations&quot;' />
            <member value='&quot;Pothole&quot;' />
            <member value='&quot;Street Condition&quot;' />
            <member value='&quot;Street Hazard&quot;' />
            <member value='&quot;Tree Removal&quot;' />
          </members>
        </column>
        <column caption='Week Offset' datatype='integer' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='0'>
          <calculation class='tableau' formula='0' />
          <members>
            <member value='0' />
            <member value='1' />
            <member value='2' />
            <member value='3' />
          </members>
        </column>
        <column caption='Selected Year' datatype='integer' default-format='n0;-0' name='[Parameter 5]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
          <calculation class='tableau' formula='2021' />
          <members>
            <member value='2011' />
            <member value='2012' />
            <member value='2013' />
            <member value='2014' />
            <member value='2015' />
            <member value='2016' />
            <member value='2017' />
            <member value='2018' />
            <member value='2019' />
            <member value='2020' />
            <member value='2021' />
            <member value='2022' />
            <member value='2023' />
          </members>
        </column>
        <column caption='Selected Week' datatype='integer' name='[Parameter 6]' param-domain-type='list' role='measure' type='quantitative' value='6'>
          <calculation class='tableau' formula='6' />
          <members>
            <member value='1' />
            <member value='2' />
            <member value='3' />
            <member value='4' />
            <member value='5' />
            <member value='6' />
            <member value='7' />
            <member value='8' />
            <member value='9' />
            <member value='10' />
            <member value='11' />
            <member value='12' />
            <member value='13' />
            <member value='14' />
            <member value='15' />
            <member value='16' />
            <member value='17' />
            <member value='18' />
            <member value='19' />
            <member value='20' />
            <member value='21' />
            <member value='22' />
            <member value='23' />
            <member value='24' />
            <member value='25' />
            <member value='26' />
            <member value='27' />
            <member value='28' />
            <member value='29' />
            <member value='30' />
            <member value='31' />
            <member value='32' />
            <member value='33' />
            <member value='34' />
            <member value='35' />
            <member value='36' />
            <member value='37' />
            <member value='38' />
            <member value='39' />
            <member value='40' />
            <member value='41' />
            <member value='42' />
            <member value='43' />
            <member value='44' />
            <member value='45' />
            <member value='46' />
            <member value='47' />
            <member value='48' />
            <member value='49' />
            <member value='50' />
            <member value='51' />
            <member value='52' />
            <member value='53' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='41530' id='7' param='horz' type-v2='layout-flow' w='99166' x='417' y='16199'>
            <zone h='41530' id='5' type-v2='layout-basic' w='99166' x='417' y='16199'>
              <zone h='41530' id='3' name='General Map' w='49583' x='417' y='16199'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='41530' id='31' name='Cluster Map' w='49583' x='50000' y='16199'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='7729' id='24' param='horz' type-v2='layout-flow' w='12340' x='417' y='8470'>
            <zone h='7729' id='21' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='12340' x='417' y='8470'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='7729' id='22' mode='compact' param='[Parameters].[Parameter 1 (copy)_2994893775512735746]' type-v2='paramctrl' w='13389' x='12757' y='8470'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='7729' id='23' mode='compact' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='15000' x='26146' y='8470'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='41530' id='25' name='Correlation Map' w='49583' x='50000' y='57729'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='7729' id='28' name='Correlation Map' pane-specification-id='0' param='[federated.0io29bp1eu65so1276ma71vmvn64].[none:Correlation:qk]' type-v2='color' w='14791' x='84792' y='8470'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='7729' id='33' mode='compact' param='[Parameters].[Parameter 5]' type-v2='paramctrl' w='16250' x='41146' y='8470'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='7729' id='34' mode='compact' param='[Parameters].[Parameter 6]' type-v2='paramctrl' w='13958' x='57396' y='8470'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='7729' id='35' param='vert' type-v2='layout-flow' w='78802' x='7656' y='741'>
            <zone forceUpdate='true' h='7408' id='37' type-v2='text' w='78802' x='7656' y='741'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#193768' fontname='Tableau Bold' fontsize='40'>       311 Project</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='7729' id='10' name='General Map' pane-specification-id='3' param='[federated.1xjf8ft1960x32190tsur1ikyccn].[none:SR TYPE:nk]' type-v2='color' w='13438' x='71354' y='8470'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='7729' id='36' is-centered='0' is-scaled='1' param='C:/Users/chris/Downloads/UHD-CST-Logo1.png' type-v2='bitmap' w='7239' x='417' y='741'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='7729' id='38' type-v2='text' w='13125' x='86458' y='741'>
            <formatted-text>
              <run fontalignment='2' fontname='Tableau Bold' fontsize='16'>By Christopher Aguirre</run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontname='Tableau Bold' fontsize='16'>Fall 2023</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='20765' id='44' param='vert' type-v2='layout-flow' w='24791' x='417' y='57729'>
            <zone fixed-size='179' h='17315' id='47' is-fixed='true' name='TTL Parameter 1' w='24791' x='417' y='57729'>
              <layout-cache type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='6620' id='45' param='horz' type-v2='layout-flow' w='12396' x='12812' y='92639'>
            <zone h='6620' id='63' is-scaled='1' param='C:/Users/chris/Documents/311 Project/mysql.png' type-v2='bitmap' w='12396' x='12812' y='92639'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='20765' id='46' param='horz' type-v2='layout-flow' w='24792' x='25208' y='78494'>
            <zone h='16852' id='57' name='Highest Correlation' w='24792' x='25208' y='78494'>
              <layout-cache fixed-size-h='174' fixed-size-w='464' type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='20765' id='51' name='TTL Parameter 2' w='24792' x='25208' y='57729'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='20765' id='60' is-centered='0' is-scaled='1' param='C:/Users/chris/Documents/311 Project/Seal_of_Houston,_Texas.png' type-v2='bitmap' w='12395' x='417' y='78494'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='6506' id='61' is-scaled='1' param='C:/Users/chris/Documents/311 Project/juniper.jpg' type-v2='bitmap' w='12396' x='12812' y='78494'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='7639' id='62' is-scaled='1' param='C:/Users/chris/Documents/311 Project/alteryx.png' type-v2='bitmap' w='12396' x='12812' y='85000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2650' minheight='2650' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='67' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98518' id='66' param='vert' type-v2='layout-flow' w='99166' x='417' y='741'>
                <zone fixed-size='75' h='7729' id='36' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/chris/Downloads/UHD-CST-Logo1.png' type-v2='bitmap' w='7239' x='417' y='741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='7408' id='37' type-v2='text' w='78802' x='7656' y='741'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#193768' fontname='Tableau Bold' fontsize='40'>       311 Project</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='7729' id='38' type-v2='text' w='13125' x='86458' y='741'>
                  <formatted-text>
                    <run fontalignment='2' fontname='Tableau Bold' fontsize='16'>By Christopher Aguirre</run>
                    <run fontalignment='2'>Æ&#10;</run>
                    <run fontalignment='2' fontname='Tableau Bold' fontsize='16'>Fall 2023</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7729' id='21' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='12340' x='417' y='8470'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7729' id='22' mode='compact' param='[Parameters].[Parameter 1 (copy)_2994893775512735746]' type-v2='paramctrl' w='13389' x='12757' y='8470'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7729' id='23' mode='compact' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='15000' x='26146' y='8470'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7729' id='33' mode='compact' param='[Parameters].[Parameter 5]' type-v2='paramctrl' w='16250' x='41146' y='8470'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7729' id='34' mode='compact' param='[Parameters].[Parameter 6]' type-v2='paramctrl' w='13958' x='57396' y='8470'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41530' id='3' is-fixed='true' name='General Map' w='49583' x='417' y='16199'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7729' id='10' name='General Map' pane-specification-id='3' param='[federated.1xjf8ft1960x32190tsur1ikyccn].[none:SR TYPE:nk]' type-v2='color' w='13438' x='71354' y='8470'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41530' id='31' is-fixed='true' name='Cluster Map' w='49583' x='50000' y='16199'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='179' h='17315' id='47' is-fixed='true' name='TTL Parameter 1' w='24791' x='417' y='57729'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='217' h='20765' id='51' is-fixed='true' name='TTL Parameter 2' w='24792' x='25208' y='57729'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41530' id='25' is-fixed='true' name='Correlation Map' w='49583' x='50000' y='57729'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7729' id='28' name='Correlation Map' pane-specification-id='0' param='[federated.0io29bp1eu65so1276ma71vmvn64].[none:Correlation:qk]' type-v2='color' w='14791' x='84792' y='8470'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='216' h='20765' id='60' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/chris/Documents/311 Project/Seal_of_Houston,_Texas.png' type-v2='bitmap' w='12395' x='417' y='78494'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='62' h='6506' id='61' is-fixed='true' is-scaled='1' param='C:/Users/chris/Documents/311 Project/juniper.jpg' type-v2='bitmap' w='12396' x='12812' y='78494'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='174' h='16852' id='57' is-fixed='true' name='Highest Correlation' w='24792' x='25208' y='78494'>
                  <layout-cache fixed-size-h='174' fixed-size-w='464' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='75' h='7639' id='62' is-fixed='true' is-scaled='1' param='C:/Users/chris/Documents/311 Project/alteryx.png' type-v2='bitmap' w='12396' x='12812' y='85000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='64' h='6620' id='63' is-fixed='true' is-scaled='1' param='C:/Users/chris/Documents/311 Project/mysql.png' type-v2='bitmap' w='12396' x='12812' y='92639'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D242E271-3D97-4BF8-BFC1-89C093E2E164}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='General Map'>
      <cards>
        <edge name='left'>
          <strip size='241'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 5]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1 (copy)_2994893775512735746]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card pane-specification-id='3' param='[federated.1xjf8ft1960x32190tsur1ikyccn].[none:SR TYPE:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1 (copy)_2994893775512735746]</field>
            <field>[federated.1xjf8ft1960x32190tsur1ikyccn].[none:CASE NUMBER:nk]</field>
            <field>[federated.1xjf8ft1960x32190tsur1ikyccn].[none:Calculation_2994893775688331268:nk]</field>
            <field>[federated.1xjf8ft1960x32190tsur1ikyccn].[none:Calculation_2994893776383729688:ok]</field>
            <field>[federated.1xjf8ft1960x32190tsur1ikyccn].[none:Calculation_2994893776383729688:qk]</field>
            <field>[federated.1xjf8ft1960x32190tsur1ikyccn].[none:Calculation_2994893776385990683:ok]</field>
            <field>[federated.1xjf8ft1960x32190tsur1ikyccn].[none:Calculation_2994893776461041692:nk]</field>
            <field>[federated.1xjf8ft1960x32190tsur1ikyccn].[none:Calculation_2994893776465948701:nk]</field>
            <field>[federated.1xjf8ft1960x32190tsur1ikyccn].[none:SR TYPE:nk]</field>
            <field>[federated.1xjf8ft1960x32190tsur1ikyccn].[wk:Calculation_2994893775693299717:ok]</field>
            <field>[federated.1xjf8ft1960x32190tsur1ikyccn].[wk:SR CREATE DATE:ok]</field>
            <field>[federated.1xjf8ft1960x32190tsur1ikyccn].[wk:Sr Create Date (Week numbers):ok]</field>
            <field>[federated.1xjf8ft1960x32190tsur1ikyccn].[yr:SR CREATE DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{821F1B86-79A6-4019-882D-5AB7767E887E}' />
    </window>
    <window class='worksheet' name='Cluster Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xr0hvc06lld9h1a394az1e34oki].[none:SR TYPE:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1 (copy)_2994893775512735746]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 5]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xr0hvc06lld9h1a394az1e34oki].[none:Calculation_2994893775757078542:nk]</field>
            <field>[federated.0xr0hvc06lld9h1a394az1e34oki].[none:Calculation_2994893776472580126:nk]</field>
            <field>[federated.0xr0hvc06lld9h1a394az1e34oki].[none:ClusterID:ok]</field>
            <field>[federated.0xr0hvc06lld9h1a394az1e34oki].[none:SR TYPE:nk]</field>
            <field>[federated.0xr0hvc06lld9h1a394az1e34oki].[none:Week:qk]</field>
            <field>[federated.0xr0hvc06lld9h1a394az1e34oki].[none:Year:qk]</field>
            <field>[federated.1xjf8ft1960x32190tsur1ikyccn].[none:CASE NUMBER:nk]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
      <simple-id uuid='{06F953E9-89BA-4A7D-BB9B-D8F23C7AB2A5}' />
    </window>
    <window class='worksheet' name='Correlation Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 5]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' size='27' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1 (copy)_2994893775512735746]' size='27' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' size='27' type='parameter' />
            <card pane-specification-id='0' param='[federated.0io29bp1eu65so1276ma71vmvn64].[none:Correlation:qk]' size='40' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 4]</field>
            <field>[federated.0io29bp1eu65so1276ma71vmvn64].[none:Calculation_2994893776138154000:nk]</field>
            <field>[federated.0io29bp1eu65so1276ma71vmvn64].[none:Calculation_2994893776145227795:nk]</field>
            <field>[federated.0io29bp1eu65so1276ma71vmvn64].[none:Calculation_2994893776146087956:nk]</field>
            <field>[federated.0io29bp1eu65so1276ma71vmvn64].[none:Correlation:qk]</field>
            <field>[federated.0io29bp1eu65so1276ma71vmvn64].[none:SR_Type_1:nk]</field>
            <field>[federated.0io29bp1eu65so1276ma71vmvn64].[none:SR_Type_2:nk]</field>
            <field>[federated.0io29bp1eu65so1276ma71vmvn64].[none:Week:qk]</field>
            <field>[federated.0io29bp1eu65so1276ma71vmvn64].[none:Year:qk]</field>
            <field>[federated.0xr0hvc06lld9h1a394az1e34oki].[none:Calculation_2994893775757078542:nk]</field>
            <field>[federated.0xr0hvc06lld9h1a394az1e34oki].[none:ClusterID:ok]</field>
            <field>[federated.0xr0hvc06lld9h1a394az1e34oki].[none:SR TYPE:nk]</field>
            <field>[federated.0xr0hvc06lld9h1a394az1e34oki].[none:Week:qk]</field>
            <field>[federated.0xr0hvc06lld9h1a394az1e34oki].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F19FBFE-93BB-4561-9FD1-3E0C0224CB76}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Cluster Map'>
          <zoom type='entire-view' />
          <map-scale-visibility value='0' />
          <default-map-unit-selection mapunit='1' />
        </viewpoint>
        <viewpoint name='Correlation Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='General Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Highest Correlation'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0io29bp1eu65so1276ma71vmvn64].[avg:Latitude:qk]</field>
                    <field>[federated.0io29bp1eu65so1276ma71vmvn64].[avg:Longitude:qk]</field>
                    <field>[federated.0io29bp1eu65so1276ma71vmvn64].[usr:Calculation_3320560324701941763:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>29.731019069764756</value>
                  <value>-95.389177196868019</value>
                  <value>0.98027767560141499</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='TTL Parameter 1' />
        <viewpoint name='TTL Parameter 2' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D27EFED5-3375-450C-964B-09C1922120D3}' />
    </window>
    <window class='worksheet' name='TTL Parameter 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xr0hvc06lld9h1a394az1e34oki].[none:SR TYPE:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xr0hvc06lld9h1a394az1e34oki].[none:SR TYPE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7A95BBF5-04E1-48C0-9CB6-647E8729FE0F}' />
    </window>
    <window class='worksheet' name='TTL Parameter 2'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xr0hvc06lld9h1a394az1e34oki].[none:SR TYPE:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xr0hvc06lld9h1a394az1e34oki].[none:SR TYPE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{18AB165F-A51A-4FB5-AFC6-A625B8FCE2BD}' />
    </window>
    <window class='worksheet' name='Highest Correlation'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0io29bp1eu65so1276ma71vmvn64].[usr:Calculation_3320560324701941763:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0io29bp1eu65so1276ma71vmvn64].[usr:Calculation_3320560324701941763:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0io29bp1eu65so1276ma71vmvn64].[none:SR TYPE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2E0CD8B-0951-422A-BA70-CD7EED584106}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cluster Map' width='192'>
      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
      OJM3Hmc0VyUNOGMyQeIm7zKgYMmszm9M6m7SoDRsuPx9CuwloWdzsdJJtqe5UnuOVTPe5r0a
      FSAaEDFzDmjq+KDaQVgTBkyBhjFifHaXDONs+Kx1LkUeaGrB/r8FodUGr/CuXqLPBguSsUbu
      AE3y0DjwnM5d4A+McTQs+Xubq6UYMdbw0cW6Q2Hmca0xLNlEaWcPwYFqiQKUBzp53R4ps/nu
      /m0MKU6wEgjJYNRiup0/y0Hmm2d1mk8Z4xHNcXkOZwBbsHv0OcqNxxj84Pfh7KfQhQ0ekqcz
      L0AjV9uLVPYoi+4UFSudeFPJkjnKU/0R6jLcZTbd8+kSS1I33/0VySGn7peb1QhCjaYJmhbw
      1CAQ6RPjlP/8F8/wW//2Cou9in/0oW2SNqTkcJLRnUFLqnKF3bTHkvXd/KVs8CfCef8UMo9M
      8lwEqv0KM4Yb6Ro7aUKaqW8LSAexmLVgOoMM5d10iUXTZ4nVw3faFDy7kHhlVKCSeGPS53IQ
      PrJsc8NGMgBto2y53VqWJmNc7473mL0VsaM5dgtiNp/d32MMlKZmpjc/0TG73GaFDJbKYLh0
      F9pRjMPJAl57NFoTtGVJVlAOJ+gHx0xx7b1GnFUe7l3uz4uwC4DLA8Wca8EyUeHMe4kHHHg/
      FUeSHIZlKcPOW+0OHnKSMj8I4rMtkTHQyUdmcSmf5yblxlMKDdYJGmsmYmkf+CmWXvltWmBQ
      bWZjc+C4fzbX19WQ3fwiiBJTYpACk6T0kmAkHpor0RpVnRfCFcH4hMY4P2mSgrE95ABlcwZd
      GNjErcbxiz99Bic1w1f/gGk4R+v2tY2cSbRBCGkMHfgthi5hH2zQm05oi+GhaRWxaFfckBQ5
      Zu9nwa+BCEETfpbvaNHd11yRw2B42D7FWXP+rvsVQ/YHy/S1Cad78JHh9K4ylJNMVrdbFwnL
      p+96n9lEqSq/d7XHV7ZuEeIet+ItMr7BHjrGAQItjdaM2SPv8ZEoJUkTQQ9m84EmjToSecWE
      Ebu6y72WeFJogqFN+feFZGnjHV8p73ApOdo7vpowk3y5Z+Wex/stZ96DPXf4QlL27cIgqSGJ
      yxh8uft9DS2F1KhOuJYuYFKdHz6660gNRqdgPEYi3uZNwpp83Edx7Dz88/hXPk9v/BY2jbFp
      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
      nPA/rOyBAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Correlation Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nMy995Nd13Xv+Vl77xNu6IzUiAQBkGISRCpYshVsy7LlXB6PxzX2+2XmP5v5
      YWqm3tSbV5aDZEuWbcmSLYnKpCWCJAAikIidbjjn7LDmh307AQ0GidbTqupCo++955ydVviu
      71pX7rx5TUWU9yJfWu/xqbmG9c6wieEDPf+ePr8tiQJRj8jBrxkevu7XNyqeHniWXdr5m9NI
      deVfwE/5zuQYc8ce4/69exw+coQ7d+6wtLTE+v27PPfMk0QcClgNqFhELKrQTLcYDAbcfOs2
      dW+AEVgYVg/dP1JgZ8+lCtffusfJ1aMI4ZHjjJRYut2xJSHYPqqKmEhpHABGDKqRmEDihISj
      6g3pJhsYo7P5iqgYAomS9NC9kvQwaQoHzOlB71VN1O0d3OZ1poef3v96AnF9MAYJI5KpITQY
      A7fuNaweHnD9rS2aLjLXL1AMReG4e3/E8WOLXH/zPudOL7O2MeXwUkVSAVOhqhjtEFFCcpS9
      AbHZQFC8X8OURxEUNII4FIOlJUkP6xyqSupGbEXDQnHAHOAAOXD/5HGXSPKIKE5Ese/hAKjC
      PS98a1yyQKJfKuMI8+69HaIsgiZFD/qokYee6743jFSoTdr3moqBheMUa1eIa29w8iOfxDnH
      aDRidXWVw4cP89bNGxgUIRKlQjEkLGVREv2UlCI//PHLvPnWbVaPHUMVFhbnWV9bo21bBsMh
      1jo2N7d4/vnn+dGPfsjm5ibLyyscO36awlQYAjF60IjdswHVWEzSvAFsD+MshR8xSoH/CP/K
      RfcClQ4JpkfBFFUDbkivqmjHaxQ2kRREBCcR1YhINTvILQmHLSqSQulKUhCU/P6UdGfd8r+a
      512VoqxJKdHIKstvfZ/kJ7S9I6SYsM5hkofYgDqQCqMBbIGlo39ojE9w6lgfxRHVYaxFSBxe
      dKx3hqcunEL9FsdWakJyiHWYNAGEZCoUxVlFo0dsifrbKAH1dzHFIYwkohiMRlRqql6f4AP4
      dQoLL48dH3UtlXlg66gn2SHEgJWHD4hoSzI9MBb3nresgBf4zrjko1XH16cFn1+YMu8erQEf
      eS31iKtQhLuhZMm2uNnG0RRRzffbXrzlIvH7S9NHPphfPEOaJLz3XL58mVdffZXTp0+zsrJC
      rz8gmiEGj4lTjIBKSfIeh2dxbsB//OQVnnv2aRTBuYIf//glUkqUZcH6+gZ1r8fGxgbjzftM
      xiOstUwGh/nvtxNDq3x+qcO4EuPmWZt0FEYpmFK6ihQFxIAfk1JJYZQ5sRxqn+NlXmZFljlp
      nstjV6GqKrquQ0RQhaSQ2N7Ys41vB6jpQZwSujGaZlo7jklSI+oxEh82BgJRgWRIYRNNwujc
      7zL/0v+FPvvntKlBU5874RUGukTNEDU9yqomthsg8Fa8xlq6x9P2YwzcEbZknc3uTc7YM2yE
      wFvxPkN/DFPO433W9mgEDApgCiROsRKIvsP1FglxASceY/uIepLUkCKuHuKKgvFojLOC2h6a
      pnxyvn3kHpU4Qu2QGCdYSbM5FEzRIybJcyIGufvWG/peLADA5dayFiylKE6UD/Te++bfK0mF
      74wHPFmPWZhZkv92q8+ZQeDDw46vrVesq+EPH7X5gfr+qyCGr1+ZcPGFj3L37l0OHTpE0zQs
      LS3x7X/4b3zkE79G55YQgZiUqqpoJ5sUJj+/sQ7VhIjBk7XxeNpx6bWrPPPMWS6lH3Jl9CSn
      7BY3/Vl+c2HKzbbP391LnCwiv3domifa9LkxaRlH5bT8lGr4QWyaEqXGakOgopDdxXur81zm
      37hY/iYlhqo3Rztex0ggmYJ7aZ1kW3r0mZPDGBLKtpLIGt1qk+fSDtCUEO2wEg+cq80gfHOt
      4nPHDKG7S9eNKMpDDPwW9ZvfZ+PcH2CdZRK3qLTGGrjeOJZcwncTJoyJdBgX8GbKbX+ZKC0r
      cpRePM1NfQ3sBh+znyFJhRhHSgFSRG0fISJxCqbYcQ2jFthyQPBTjLYIEM2Asu7hOw8opIBJ
      k6y906PHt7uvQO0QjS1iShBFQ4OVRJQaNLx3CwBwtoqcrQ6++ba2Psivfzv5QM/TN7vm+k+O
      THau8anFg0/6XpEUUFvy3NMX+NH3voUYy1s3r6EpkVLg4lNP0L/yL/TFMDl+kcvuPqd4lmvX
      bxJj5Oypo1xbe51aa5aHK7ShxXcNIoZT547xvXvfIbaJEX2K8ibz65fZkiHjpuG0HTDfrQED
      QBk3iUPiKUtLKUcQJGslAgmLPqCTh9bR86coqpIULLfWN3Em0jBlg9fZkGs8rs/Ql3lUPCE2
      GAE7M/2RcudwpZSwRjDp0Zvj2xsVU5PdT4ulPzgNmmiNo6rnGNz/MeOlZ5luRDbrKUeLxN0p
      zNUFw9JSa4naRV6efJ/O3QCBpJYYjrBmbzBnYUMjl9NPOWueJEmVtb+rMXGMSomIkjBZK4ti
      8CgJNJHUUPQWMEA3uoeU82iYIrYkIUia5oMex2+7z4xAiiNsuUhot3AmwmzOZKZEfqYD8Ch5
      bep4Y+J4dr7j8AHBydvJwCp29vuNxvJ3mz3+tyOjHZfonUQREEtVVbzwoef2vfaFuz0uLk7Z
      Wj6O00B94zs8P12jPVKxvj7hwy+8wD98+SuMJxMOHz7MS5PLoAljHdY6isJiy5rp8B7njtzg
      7isjrlx+ibsLC4QY6fcHjAA9+Qk0hhzEKvx0UjJXHuZiZdAEhkCgztptNj0CDIzwdHEWqzVb
      zTpN8SpX4yUEA/EwhRPmzDGcdnn97P6xJ3+boAbpnUT8GJX6befqsysNIRmgxNoKUsM4GEqj
      TI5/hLmX/z+mw3NMJ5F/9wljr7PWXOC5QYstl6AzdKljo32a0tyl0AFn5GlWq4qpHOVWvEQp
      Fbf0BnPpEEuxR4ybFMURCAk1lqQFRpuZq9Zk17oZUQ+XUVWayRZiLMYYJLU5egse6wZIHCEp
      kGQXkHiUGIHUrSNu1x3KGyaClO/zAegc321LntLund/8NnKsivzlofG73vwAaEIfoQ5OVHFH
      UwRx+BMfR9yA3q0Xeaq4zdUX/xFnLWdPnMTVBU8+8QTGOm7fvkWKgbKwjHQLu1yzdf0qw/l5
      PvLChxgM+owmLVVhGI8nGE1E8qZOCT662GVfO6YdDW3xYAq2fM1coSiQUl4US2ToOu5EjyRH
      FE9NjyXpcy+9yVTvcs4+tW9sSUHKE5TakfwGmD7GAG/vHWBsQYoeFdgIlsook2iYRHCnPs7o
      8tf46+GvUOsad7bOc7a/gbeLSGhxNKgGfnVxgPe/SmUs5cx616qctM/wVngZgCv6Mn1WsClk
      rVvk4BRAsYgGEg5NStVfIKWYYwLxJLGIqdAwxYpiTJHnS0FoSWaApoNRxH1jnVmCvTGBEN9f
      C3CvNbw2dSSEF8cVv18+2l9/UFR1H2znDDOw8t2LaMpo0AHywtz+A5mkgOiZHvoAgyNPszS5
      yzNrV6C7RXvyYzTSQ8o5FuYXMdYRfEciMWKd9fm3GMQ+h81hRCCZAU7Hs3Hkjby9INsuXYyb
      RCxih1g8XYx8bbPH7y81qAquWsC4At9O2NAtjrkLHHZnuRS+QxcVxwp341XOuQv7x6H5/pKm
      WEmkuAZYTDmHPhCWPbhJVBMYx3oHc0XECfQs/GTi+Up3jD9v/5XPnniDlwN8ajjgeO8QRZyg
      pgCgEEenE/q2wsruzYyAauRuWgcxrNonGacJ89UKqdsiufkZGueJ9DA6xVSLGGsy3CsRUy0Q
      ggEkgyShARTRKZqxWYwElETCYA+Agx+UBw+BIeGK6v07AP+2WbGWsm1edu+gfg6U9xg0PCia
      3n3gYUokjkFAU6Ktl2lXVyjCmOr6v9MLDc3RD9HNHSOEHk6zr1loxaJ9CgwYAz6CM/KQthXJ
      r22LtX2MQqDEqKcQeKoOeDukLmt8NyF0I1w1x1w6htMGpeScfYE7eoVCCo7qRVIsUJcQmAXb
      u5sfoCiWiQliBFsuEYKfzWyCOMWI7kyRxTPVPn0X91naXnmV8+U91uqneOHajzn/1P9MVIuJ
      owwe7BlnoZHWCL09U6+aXb0nyo9wL93mXrrGlHWGusIF+zGakFjsDegag3ElRdHHd1O0neC2
      Y5pmi6I3j2/GxC4htiakRAq3EVtiXY3GgGiD2gE6e7Z3XPY9hyChaDfiYJX5M8j69qVUOV+/
      d1ToZ8ki7L9AzDDju5CUchjaRvbkIBTv+ozOfJrxuc/htm4w/5O/Yu7ej0C2nW5BxCJpgsQJ
      TiczFGa/VIWwMNz/LCJgjdJFC8U855fnsRrxk7vYNMFJIIYWm5pZwKzMyQLnyg/R6Fu8ab5N
      y4gNb/do/mYfzq0KamskbBH9CCFh0wjiFGwPtQMiBTFlqzvxLdbVpD1DOOPO85z9FXqDFzIE
      2a5j0zi7VeiefAJYeiQ86gaza2br6rWkTgCRSMMF8ywTXedWusyX7sOtrTFVr49zhm6yhk2T
      2fWzWJOIXUtRz2NSC+oR67DFIQpJoCEn5WZwQpLyXa07zCxUGGNdRfR3378D8LmFKZKzNdzy
      9p0/8IDIz20B8r2/fb/kr273su/9Nm/98ajg26OHM70AEWGy+jyjp/4INYaFV75A//q/UxlB
      Q84h7D73w2Kt4PZMgSr4ZCnKmsH8MjG0xMk9rE53kJz8xkTEEpIjSo1oYNQ2PG6eoJSK2gYq
      k2hlCKnZBwOqZjQoY/8pxxqpI5pe1vxpStfe47X0Eup6rJtAacCKoiokhZAEHw3JDkAj7bnf
      oH/1X3a0a9e9lbOwCklqjC3oJUPyDRRzBEo0dZSmwxrlmJxgKCvc1VtcMM/QpU3++Ejk2MIc
      wXf4ZoQzB7svGqcYa0gYFIuJ453ZNqlFTDHT/hMwJVHtwQnVA8TYkm66ia2OvX8u0KEi8ZeH
      x3QqLLn3hgAJzECpn10EBbF8dLnjWmv3ZWL3iiqIEWqnPNd7e3g1pUSz+BjN0lnKdoPqyj/T
      ix1+8Qx+5RydGh6kkcjsRxVCMtiyxhY1pSrTyYSqrrHaPmSs8uJFynpIipEUPTcmyn9dn+O3
      F6c81X8OiyO6Hl1oGSVYKPY8KyZbmT2oiJVA1Iyng2JNwyjdQeIWJvTolWWGFlOGIp21xBAg
      TLK1KheoNFIkjzcFRXGIACQ1QILY5XkWSGELTIWJyvZGLYicsE/yVvwJk+Q53/84qNKN7+VM
      vhmQkt+nUHbEFDTjEVV/kW66iRElkQ8qpiSFDlf2SHGak16mT9Iwo1i87bKimjBGMKl5/w6A
      ETj9iNzAL0xmdvTUOzyHSVMu9N7DIVWlKeb5ys0+F84/xykzov/6P9HTSFw4TXv4A0TNmjSo
      oap6QA+rnq4dE7sGZxIWUPpsbxFNgagB7CKKIuIIwWPTBKgoy4rjdeBEFfPmN30ktfRt5H60
      RM2wtgiIWFD/kEmyBEISopQkehwKH+NWqOlbJcYpzpAzskZRLUghUtjtQ600Zz5F9cY38Y99
      GpECMJAUYwVR0KSgYKzkxJzpAzkpJwJVMpwsn2dQzzEdrePodnx90Q5MCQ+ghjrb5FbHhDYj
      VjEmMGYnOyzGErsJYvsQRzlBJhXR9LFpsu8QhBQxM5dJU0TEgx1C9O8vDPozy8/p/WyL7vHo
      7nnD5dbxkeH+yf36ekWEDJnKjGsx8yUF+PRce6AG+cGP/oMPffBZmrbjStvn5uZx1tbWODLc
      5NWv/TXHjx/PpLC5Ic45mrZhcb7P2ZNKXT8+e74CV1g6XxMUEg2IYLXFiaKpJUgOmK20HC5K
      /pcVyfCq6SN7sp8LRWQUcjywVEYyoPow/jkKhqiJoWvZYsCJKgEBn4TK6AxS3JUHxz51c/Rc
      QTW9R1OvIIAxe2KBoKhP2IHDEEimIkaDIRHV5oRW9Ew272Ot27GOAIJHzWDnAKhqpn4AMY1w
      6iGBrZfwCjZNiGrBOKxOc1AeI2qHEEdYWmKy+w6BaiKELVK8R1Ufm7lLAilii/n3Lwb4eeXn
      PwO6b/U6hY348PC+Ma141Rdc6Hsu9AIXas8TVeCp2nOx/+j8xfz8HFevXafXq/m7L32Zo0eP
      sri4xP0Gjq2eoG0aom8oy5JXX73EytISP/nJJUSyjkkKZW+eyeYaKbZYbSgEjFRso9Ei2Yht
      b5BME1CSW5ht/l1wwUo+BBl2VCQFxA0IyeRgePbTJMO8i1gJzNsJagYYoJ5p+e1M7CNnVZWt
      x36L6urXKcIkWyogdkqcRExpsIPd55cwQU0ftQPKmfsifpPCeIIkghZEqfNxnZ2GlMB3d+na
      m4SwkTPFKaCax+enm7iizOQ/E3HsKikrEUkNXVgnxRwXiXqSqWfzKLhiicLVWElYWgppsDpF
      /fiXxAK8DyLZud/9Pzu0q33ywqDjQ/33nqk+99gprly7Qdt2PH72LPPzi/zk5Zf49U//Kk2n
      1JXl5vf/iUPHl+nVzzDX2+KFi+dxdgkgB2mpZWruMGQeEUvUyCvpezxmn+dOvMwJcxJRneUz
      djOWuk0L1rAPbgQojPKKv8b54gQStjCuZitNGVAy8pEFt/sZQ0RTQ7IDRD2aIgnQJIgIxtqZ
      m7Gt3hMJJSbYevx3mHvtS5jjH2M6fxodNSSN2P5utJ+D45K638N3HX5yj8Lk1bgR3yClPifr
      82i7vov6qAdbYrSP93eIcURRHMWaAqEgqkFcL+P/NhP/lERKU4zpAUJKLdYt71DSLZ6IJZoB
      mgJiHGJld06ZHT7iz0aGe78lY9oVVt+Z8/MoGdz4Fv7I03TFkDYKcRYwDWx6z7ykR0lMghQZ
      ITG2zFo2eTRMUSnptXcp777M1pnfwLd3cMXKzmcVi1aJm9NLrHJyxliHkW7SZwFvDJVG1NZo
      9JiZK7PD8ZEy8+K1YRQNqoJXxdkJl/1NlgvluDnDut7j1fQSx8wHOMpZeubhOU0qII6EYcts
      cS9cZ1EWWZbDqGr264EQbhFV6KoLxNSw4hJzV76SUaTe89gBmCqjL4GCsjeHxohvtxDXz7kD
      IGFJYvfUYDgkTWEWDSU7ROKI6O/Q+U3q4bOYNM3+vhgkTQCw1SK+2cTQMp2+Rq93jra9QUod
      Rf+ZTNeGHeanLXsQGsQWOT8haeZiZYat8D5zgX4u+XnPoCqKYd3ntLwTxYiyGWw22dtKDXAz
      RGHPR3du37eJyugjD42mDqsdSdNMOydwfUQTTbVE3Y2oJreJbo4UdjdfTJa6mGM1niSZgmSy
      q1LLESJgsweNNSUpmXx9AGQHEkXy7yF5FovIdb2MxiFOh1yLL3NbbxIJRBW2usjJfkEMGZLc
      K9nl8WiCvm+puhZXBEwZ866YKfXQTUkRtmyE5DlkI6Mzn6a3cZXlN7/I5InfwStIuUApQjfZ
      oDCRwkCM2d1KmikQbobOqCbU1sQkfGkj8sk5ZUiDmhpXHELtPBo9WsyhIbuK22vhmy3K/hLN
      ZEzRfwF1jsIuZNfRlpA6BEVV6br7CDVYhzBTgqr5/qq5KCa2v0QH4GcQVdgMFgXKpIySZa7c
      X4yyYHaDwqQmZ4FngVbmp2dtiAgaJrRJWPeGocvX2QvRKbCW7rCerjNvVznM4cw1T2OSOtSU
      jB//TQaXvoQ7+jTT+dMA+ATjJJQIm9HRIzIOiaWZD78jklEVo+EhjH+SCgoDaksgokSOynHK
      okIdvNEucEO+gcTlnECrlpE4RVwN6dG0lKJeRYwDHFGqmSZIECekNKGsHudUHZC4/TzKdOE0
      RX+FwSt/w/TpP6OJAeJ45u5kMZJQUTQlrOyiUzJLRJlijl+fW6NnDEIgUqEqlPVhvA+kGDJt
      es/8WImErqEoK2LskLCZ11rBx5QPi8m3Kowjhi3MrFBpnwgkVaxJvzxB8Hs1ANubv2cTi0Wk
      kMTQ8Uj8HwDj8METZhVgTbeVLUEYE31D6yxl0WO+gPvecbezjGKBF0cQi4plQ+/TlyELsrzz
      0DneCBgjdMkyeuL3MJtvMrj5bUSEUbQsFR4rwqILDFx+5vvesTbL7G5LJsbtH4QCk6BsdpEY
      WuYKxQiUkhN5InCyqqjjY5wwj/PB6jH6MsAQSWreNkEUg8fQw1BAbCG12bLZPqY6D6YPykPX
      aOyA6dN/Rv3S/0vV3H7IYgq5rFNstW98MDscYUrtBrkMFDDGoG6OpIrELUTbPRn47XnILCJj
      DcR2n/Iwknam7Uq8RCcRg0NsH0+fLtV4+nit8FohtiDwPnKB/rNEFdokTKOZnVzwSRh7w8m+
      32Eh7pSPvZ2kSLGNX2tHWS4hqcWYHKT2QovH4mwJtuBmfIMlAjfH9yndOs5YOp3Smj5OF1jR
      pf0WQrPHGxKMT36c3vrrDF/5W9rHf3dmguNsUbN1OVTmRNVWsCQiSwWgKWtkDSSNBDwx9Zhz
      kdoqQXPAuldupqssyxFeqM/u+7vMEKLd1NTDYg0HJKISkLC2wCcBWxGiYjRm6FKFor/EtJmQ
      nvg8g5/+DZPzn8OXw4ch1djkqjXdb4WMeqKUBHWocahvsK7KFHDTA+NALCl2M6SLXEwTx/ho
      Keo5UrvxwJLnUs9j5uQM1tbs/hAROgwFRjLS5yNYnf5yWIC9ZY/bEhXWvGXdWy6PHD8YOb64
      XvF/3uvz9VHJ5WSo7F7VGd6RCxTUIrZHoJ6ZXHaCTZGcDTAijNqG7657nquPUbsKLW4wioa1
      EGljn3s+gnG8En/M1fjq7iPEwEZwjINl3Rsmi2eZnv5VVl75K4owzs+n+9EnK6D2Dj/Rb/B6
      d4/r8VU8iRvpCt+OX+PH/lWmcZduLKJ4f5c34xXGugXAoqxwK914aLxZJ5h3hJjbKAdaie0i
      HmKmQEMiUFPPHaJtW4w2dKbH6Jk/p//6V6mm90kqGYK0A9QOwFaILYm6uzY55prlX2yJn1zK
      vP84ZsesxmmmOm9/BoMQMaJYAjGGPVAnIIaAEKSHZYmCwexKunPP/ZKYTi798liA7SopVbjT
      WlSEzQBf36hZ7QXGGD448PxhNWVoD1it6N/xAFiJRD/FSYYGA9mFiAlEEomSrbbl1bbgs8st
      SSssBSKJstjYuY5Rg0097oYJUyk4YXIKqknC0EUqo4REJq7JMnMX/oDl179Id+KjpMHhh56r
      lIrT7gQ+jXjd38OZMa+094B5ztnHWC73+LCqWNujlyYYLKpKTZ8z9vz++dRcpWUkI/c686x2
      N8yMV6+CVwMpUR4Q/N9KNzmu55gmoZJE1eszGW3mkF0qTNGn60ZsPfkHDK78M3b5PKP5x9BZ
      iabAjAmYWZvADNESTMo5g6o+TSbDWFKMxBiwbn/HkIRBUp6H7TjCVUv4psNJBiQkbFAUczmR
      JnWGjdMehZO13O4EyC8BCrTt4hiBaRLWOsv/vdZnKIkPz3U8NddxceDpzTTgJB6szx50Cw58
      j7GZRrurVrbngW9PbjNqVzniHM8PA9gqoxHOU+qA4/Ys19NPCXgMMJQ+F6tz3NM7TEJmpPed
      Us4gZWdgcRaAqxq2nvozBpe/zHDrBpPV5/exSPsyoC8DOulYTzdz1VqxjiActfuXSIgYt8xC
      LBGBiY64ll7nSfvBnfdsk9XEutxBwhR7Pp8lpJZ1vcNhd5a+MbRBaVSpjM7QrZyVPWrP8NbU
      8lpb8ukjA7pmvFPPnDSiMaMsXmrWzv4ec29+k7mtm2ye+Dg+KaXJXUdi6kiml62SdjjJiFNM
      DZgak6YEKqwtEE0IHtmX1ZZ9dSNGwLdbuGoO7TYQEaybn9V0C0YbpFok+iYT5+L+JKcIIP3/
      sXkAVRjPsrXTVPO9DaV2icIpvzLsHvJNp1H4r7f7XBx2PDv0+wLe4ZV/onns0wQMkdyj5rXX
      XmPaTHnu2WdZX19ncWmFy5cvc/rUSax1+BC5efM686sL1Lbm2li4MDRcvfYmZ08eAddHfQNE
      xFaEtEnAM4oNh8tTMyx7dyyeHqU8jLjEJLj+MnF6n+HaK9j1q4wf/+w+KHb3OspECzZ5nSU5
      RC39h69n+siM368KiYiZYZeKzPgy7S4Wf4BumOqEq/E1LhQfxs6oCBveMrARI3Zno4UAxlUU
      Vb1v86uCVyFJny5Ms5UBSgPLW69h7l9h87HfYBKFqFnB1dWQ0I3o2110RxWiGSJxjIoD22Pa
      jhm4/QhZknKGKO1aQ1XADUgpIuS+Sapp1jnDZIQuTFBToXHWsSM1dO1NcCsU5eL/OAvQRKFJ
      hkKUgUukqCzUkcfr8Mgs7WYSzg4Cj/UCVjLbUsRixaOmxHQjKOdJanE03Lp9i+m05fbtf2Iw
      6GOMwYfIjRs3uXX7FjFGnnrqKa5eu8atW7dZWlpmfW5I13UcPXmWmArmZIwAIWVXpdCKqjxG
      iuOHECdjzD44y2uHo8hc/BQBZbJ8gbZnOPSTL9Cc/xyd6+1jcaQ0xVJwzGQINSaD2CInk1IC
      BWsLAiA6a3ki7JRi7tze1hCnj8QFetLnCfsce8Pj2iS8CrXEfa5Cf26OydY6hpZNn62dkPMp
      XYIfNgWf2dOipFl8jLKaZ+m1v6U899skkw9njFvg+mx0Uwqj1DargIiwFXuIJiqNlCYjfGbm
      ptUmURYGeaALREIQLK6saKdjrEx2qsOSVMQQcJKdK0VABR82iKnJvYMSv3gLkDRrmsoqfbu7
      0TutKOWdM8FfvV/x3CDjyitFItohNo7ojW5i2g0mh57Ca42j4bUr1xlNpqweO0pKka2tMYpw
      6dXXWF5aYDg3z/xKn9u3pxTqOXHiFJuba0ynU8LpVQp3HPEjnu57gvQhtRiX0/EPtuQIVFyb
      CpMUeWbgCQm+sBH5cL3GmcUn6JoRYgo6HXMt/ogFrXji9Us0J36F6eAkSRMxTgGDqxbR0NCm
      EX3bz5i4rbAzlqWaOmu0A5o+5TkWkhli0tbBVOOZHJSB3wq7BJKUDEvzi4ybls5PsKIMbNq5
      ZrZ6fZo0Zf6AuKzwI3pXvsbk7G/gbZ3Ja1KDRkIKdCn75IXrUUsuK42mB2oyzRcuLAsAACAA
      SURBVEJbjORaZTE1PnYkzWCoFYMxgsYxrlihriva6Yjtk2tdSYxhhgIJSRVXVKTQEBUmyVGb
      9Is9AHG2+RcfTADx7g/A643jWxslf3pkQiH5pKtGYowsv/LfmTz1x7RaY2kyFPbgBhDh7nrD
      8kKNx7EV7nOtO8HF3iaRaodo9VKzzotbp/kvq0qKaQbFhQybPnBNVehkjr+9Ffn9owlrDXHG
      i4/a0qvm0XYtz4GUjHVMxLMoBXNXv0Gql9lceYKueQ0fIv2FF1A/IpmWnpsHwGtNIbsHIEX/
      tn1xOu3hmL7zAZAKS/vQ34Na6sESTdPipEPSw2ujCkH6FEweeQ+nkd4rf0fz2Kfw1QIxCbgh
      GWpVUhKsNZi4NZufHqSGO51hTXs8UbfZ9SmzIoAEmh2eFD2tCj4Jc3UPk3zuKSSgZmYBZnFY
      UsDNsdVkF3VYWMTYX8wB2I731rxlqYgHmmWv+5tFHSQ+ewBEejSh5WrrqK2lVcuX1g3/k/6I
      56opo6MfBZRO4fa042TV7XNXvFYkoxTJc6sz3E89nq5HBLLlkJnpXU8DhrKBK5cyzLpHRGZ4
      /Axnx9Zc2oysFhPu81NqqTgiJ6BcIMaEMYbGT0GUXjnkx5OvUokFEe798xXmjj+F9yOcG6Ca
      KwesBJ75wBNAtjB2z+KmGN72AHh6Ged+jwcgN5MaUJQ1bTPFkikY5gCe1rs5AABGI4NX/wF/
      5BnG82dy7ULyux3iEMysQVaOX7J1y3CpAbGZS5UCQphRsvffY62zLAzn2RpvMe8Cr125xmg8
      3SlY8j6wevosq4cO5WA6eVIMv5g8wJp3rHvL/CM2PxycC9grIcEX7/X4m7Uea+pozZBn5h0X
      hpYnhsJfHFHOPPZBils/xKVNbBpRpRHHasc1P+Rf1yu+sl7z1/dr1poMr313veDLmzULVZEJ
      WbbMvqNapFyk8lfxk0t47wneE2Mi+SnJT4ndhM4nQjfBdw3Xxp5vbAZq4zluTnLUnMjBn3FI
      GKGh4Wb6Pjfi99nwt3BYzptnWGSZsHCEp5+5yOLSSZCC+YUFzp2/QNfuIheCEtWSKMGUB85V
      8OuEsDl7/7uThBI05J9ksPUyxpb4yb2Mwgj8vEStJJbR+c9R3P4xw/uvZCTL5CRcpmFsU1IE
      MYIYk5EcI1iTFYGV3PCrsFDYnD9xOz/K4Srg/BZzVW612TQtv/6bv0VUy/KhY3z2c5/n3uWX
      qJpb1M1b1Dqhdr8gGNSIslj8fNVizsAfHs7mK6UM+YsCCj3gZAHJC2HpLOX4Fu3gGEag0Amn
      ewvMF4Y3OmHFtiSpsbZmfhD5oyJyeRxYnY+4NCJKH0xBN75CUR1CiwFGxzhjiWJxNmeN13zF
      wBlEeqhxfOUt+O2FzPGHXKRtXI/oM1oTgYKCBTlC5QbQwS29jqLM1Us0TcPVq1e5efMmi4uL
      nDt3bl9ew2iHmgJNnuDlQM0uYnc+IwaI+8LiHfneD1+irIfEGOg0EE2LKvSYJ8bAoeU+p1aP
      7wbWb6OZIolvjl9nqbqPxkX6rmNJVlgxR7EobvM6TDcwzSZaDigvfRH35nehtwzGQoq5wktz
      IlOM3fPEwk6Un3FLRHP3ODSivs3jk9xCRY2bUckFszUAYGlpiePHjyMiuDuvUF3fRMkV6Ekc
      LnNFsr+aO0W/N578O0lIvKvu0+9WY8F+87d3bQSlO/w09a0f0A6O5ddNHzSyyIg7vsdq6Rml
      NTQc5rxrAeFcDSHlSixTVHjfYMTQTV7F2HmKcpGAYyvdYUnmmWrJF9aFP1keY1yPSxPD5xY9
      q8Ve4h3Yosdk8hb1DIc/ak6yzhTtWm7Fa5xyZ+gx4Eb7E8qy5Pnnn+czn/kMXddhjOHHP3hx
      d2wC6yHwj5s9jjjLJ4ZhZ9IyFCrgVjJjdLsPJxYOaNtelD0+ePFDfPWrX+WHP/whFy9exBjD
      9fVr/MVf/AVf/LsvcGr1OCDENEHIBSwHraIVQ0wrvDKqscZzsYj0fMPw+pcBJSyeRedXCYun
      Ccahpz5BsfEGxeYNJuc+S5KSmGIugEER188d4Oj2LG62fmJyN7m3E9UcaK995+t84xtfB4Sf
      /vQ/6HxHdf55ts4+tS9n5ETMTJto7pac3t5vfC+yTVj7ebX/20narlNltkC9AVW3RacdlgpM
      JmVNUo+qdCDK0B4hYbnqC5qkPFFHjBFCBzemkSujxK8tLlMAhRuS1DI1uQhcgdo5/tdDY+7H
      AX9/33LMNTw+8Pva/CUKnMCa2WSOAX0KtnSdQuZAoG/meCl+l3lZ5OknLvDSD75DTLOsrRTM
      d2/xiZVEx24Zx5JT/nR5QqQkPainxO341bmHZkFVlzNKsyf5mxRueeZyKHNzc5w6dYrV1VW8
      96yvr7OykusXnK1yC3n1eW7FEdmFeHfZBw5S4GK9yB1ZZ7G9zZlXb1C4ObZOPs93+AnP1c9Q
      PRA/hKVzhGqR6tWvMD3/O4QA2xxsEzXXWvhmn7ssRBLVO/rsmXPl+dCHX2Br+jpWMs8qS0lU
      j9vTRsUJYadyKtc3Z7LW+yHr3u6U7f3niexE/gCiAaOJcbjFnD2OIWIkYVLDP93v8zvLntUy
      MoqWS/F7XN36EKcLYTAjHhbuOh+Y36RhlW+tH+XTKw1iavqpAzmBkRbiFs70uNE6Lk2VrnJ8
      aq5lFAI9V2DV46oBzWST0g4RLTDqGesWScfMFat8pPot1uIbXEov4fqWi8/tfjlFlB7o0zB6
      g+Erf8vk/G8RzO6ibVvsnRmQXAWVZh6D0RbRFt8OdprKSrHKtjVIMfKNb34T33Y5wCUyN+gB
      8I9f/hLnzqziaDPSIgWa2ty+5IF1TEBIgePhHo9d+T6pt0h77vM0tiZpZOD73I9vcYTlh2oS
      ut4K/vSnKWyB8WMMLcFvkHSBcrhKG6rZdx8EDBYjkil66eEAeK+ogtgeZTQ4O0dMWzuvhSRM
      wgbz5S4dZX8MkDIFIPPkf34x8g705L0ihkS1O8kPaJvdopX9F8wIwq5oihhX0w8dTXeV3twz
      qEK/UF4YdqyW+XsHKlPyq72n+c064GyfFDoU4UR5mqmf4CJ8ZMWwpT0WdYJXMLP6XiEhRrnf
      tPzJUuBS47jVWr62VfFHhwKoUIihEM9y6u0UZCSUUiyX2+/SLz/DSLdQFH2gtZ+kKckMmA5W
      iWcXGPz0b2jOfJKmWKHB0mERSZkhO5uPBNSuoqBBNTJhi4oBhQXoQMrcg1MjH/rwJ/CtR+Im
      XnpUB2SvdxGYCjkA5RGE3tolypsvEudPMnny9wh7KBdGLH0zZBRuc7Q+/lBNQu4yZwnTEWVv
      ga4ZEWWKEUczWqPqL9BNE9fiyxzXwxR2jkSHkRp4tJueEHLbc8+wPMFGc4lthf7XG0/ypyu3
      971/3wHYhv/eL3lPl9KU0/fykKIB3pnpvFdSDBRuHmJLig3gEA1c8wXPaEKlQEToy0JGG1xJ
      xOZWH0CpAkXNUAPJT3mjtdzzlgt9gzMR391FixWe61eslpHXxo7/4/6AP1hseHlasFSWnA65
      hbnsrUPF0GnL4/YDJBItUwpKHhyxERBr0Ai+6DN66o/pv/r3mPnH6Ox5en3B1CaTwLanT2Fd
      p9wNmxR2wn29xWMcYUNvsywroB2mWqKqSrburUNUih6g+yd8Ozmmkl0ljMNIruzS1GFFqaZ3
      qV7/Z8LKBbae/QvUFMQYc/1BCqCZGHHSPoE3XWaC6oMLOKMqi+Kn67h6gUQm76GRZrxBPZjn
      senToIGYJqgU7xgs5qA9K5xSI3PlGQrJvZL+92NjjMzve/9DKJDqI3bgexCfhHE0BxalP0qU
      vPDvh7uUih6VXcAUJUkVLQZE3/DbS1k7S2qQcgH1WwiJoANcGtNFwUg/L4y2JFMycp7DtsfJ
      gcOaEj+9i08RoyWrZWSaJBPfbOKOtxzrX2WuOs7GBJZmjedyAOc4Yi9wN72Jx9LTQCSyLIc5
      qCveXuQlYhhd+F36N1/k0No/0C5+gFSdQsXtc1atS7wRv8ux+AEOy5MohhDmuU+f5eEAHzo2
      7m+itqB0BUkLyrKY1THkVYia25HbWT9U4qyVu1jEDXHdGuX1F9l87i9zPsKPsWmK1e3mXG4H
      ygShopcVjM8Eip1RKURxxBgpC0MMnro3yHCzrqMUGGNzOxTjcGYemSXJ8vwcvPbb3mHmzSml
      qRCKR+ZMHrIAuaby3WvcB/1RyOn0pWKbCfketPfDl/qZRIs+0myhwxOgCU0ptwc0AhQoNTrr
      nal2mCuXJHeRyPQCnwPK6IHAerpCF1qO26cp3AJFdQhsje88daH82sp9Ph1r/p+7Q473zhKT
      41vjgE4sh0zk4ryhSA2WhrvpGueLT7E+9VRFf1a4cdCg96+wqjJefQF7uKVcf4Pi2jexzTpa
      9Jie/iTB1QxSxZPuIyxQYXEkazhWHQVVQrNOIYnFEiDSROFrazUfX+gYmElGeXT3Szfy1zGV
      +Uv50n18mFKaM1TXvsnk8c/m70KLYSfRlOOQBHTb2crZc0NQwR5QlqmppIugYtDYEOIYKeYw
      pkfstvLecgNSnMzqmIVAhege2rbk4qGdIyywxj2CdqzIMTQ1GFsjs/JXFYeYghAilm7/AUgz
      SDVRsv0NGm+3HzNiYWe/5XFPo2FYKFFyRY9J073n/j9NughJoDagxoHPBRVgcnkdCillOgOZ
      RJbMYMbrOdintBLp4jo9s8iQmoIOQ+LOONEvDZu+4WgRGUifCRW/f9hwtBJcYWnnE0dd5HqT
      4yBRcDhKHLU4fhqUU/Ysd+UHDx2A7Z4+ss81yVVawVr84WfRwxcxOuWlF/8dvfL3xJXH8Ukw
      tsL7KadOn+XEySWi7zBxvNONbVtqq5yoIioOYzJ/SDFEU2UXQhWjLYkSlV6GKEVxYUJ0JVZj
      blL1c2gsS4ezPaZRKJDcEt9vge0zv3SK8dYahpCb+iZPQlhvt72FvOdKp/mLAFWRWfb4lryK
      SMFycQShIiWDLRZygY0GNEwpRFE73H8ANrxloWjRHb309u6QoBjN0NuGz+y9gd1tt520ePSH
      H7rWo4/JVCe8Fd/Ep1wWedwdYihz3JxalqvIv48qXh4XBBGWTOKzvs9jvTSr9oo7vSxNHhYw
      c0uIGNm1VA8/Exy1x4gasWLZDr6+PKr5+NBwtXOURllyka/eV56bmxKNAj2O2RaL8li/AFMQ
      Q4TkeMJ8BGccLwxakB59fQYjfeKeY5Agb8A9OH/b3spsSgXXv4DFEk3FWIb8yuf/C5ubm0wm
      E8qyZGlpmRe/9U2OHxqSZLAfJJh9UZ2I8FgdENvD08stQ8hdLtwMyt2eE+MWKMwwI4Su3HlB
      VTFG3jnYe8Tr2U9vsK7P1NeEBD2XuzbEGCnrAb7ZRGKDisMaYbmWWVxlEJvjlOA3Mxjilkkq
      XJDPoLHBxW5m+X2ef1Je7+1G5ujDLtB2TuDdhrAR2PSWORcf0jKzq76ra213HDtIxrrJd8fK
      TzcvogJ/fOgNnq3h36YVh33kM/PtPjpu7/7+q6m4bK3UZzMvCcQSQ4faYodakFQxrsLH7ACo
      COjDnQNOlZETFRgJvDLNhe1XvWOxhTOz1vBZn2ZXKgbJmLkxGM0lijljqQz2BGXbKJcte8QQ
      CDLI9coRXO8cThwxepxz2LhF0oaqrtjY2ODFF1/k9ddfZ2lpiQ9/+MMggpoKI2aPOxKZTq9R
      9h4niSO5MU0c8B9b8In5FmcyNTlhMRqJUmO0w+iMS5XYl53WGWy+08JFwZiHqxzebvWNKEbH
      FA7WO0tKG9jeMbo2U06Kej4XyvsNNBjElFjtiCkT4oTcFc8ANo1BDcZUTKInIAxmLFWDJ0qG
      Z/cCjQ+5QG2UA0vjDpJpFLpkWHwbjs+7lbf7uCA0sQ8zlOZGV/FsDUdc5MgBSTYVy97aWxHN
      XxphspWKVDneKSpEu9wvfgbZNq3BpjZv/qQ5CSR50rfH+Mn5ligDTpeR02XEK3xWlTe7goDD
      qtKq0qTEttEpVWfcdNC0++2I23IjXeWIrOIoibHIi0lmCjiZBaKmwhIh5Z6eOXgVrLV88IMf
      5KMf/Sj/P3FvGitJdt35/c69NyIycntr7fvSVV29kmz2sEWKpLhKNkWJWkbDGQ0sf7AHAgwI
      GMOYL/4yBuwvBmzDgDHwNvAAlgYzo5VjydLIQ4mkRIpkNymyt+qluruqumt/VW/Ll0tE3Hv8
      4Ubmy3zvVXW3JGoOkLVkZGRG3LjbOed//v9er8eRI0e4s3KPvt+kkSxM/YolaZ5HtMT6gtw0
      aSRK0yovbmU80iriMZdFuIn63ZDrqQFgTYhbs5q9IUI1dodM3+sGODWBXmXpiqFfFOQupSqH
      kVM07VKNesA2Dfp4p2JtZ5veUQNiDB0XGHphvbLMudg/jY4ItjOJEtmdOsELiWcQDOuVeU/Z
      26E3LKQP+tz784A91RQh1LZ5th+EoaKbXQIev69OrKZN3MYNmDtRvxFwRrb5YbQk+DrqZIjk
      TvXq50wgBMGJ1tGEsSZ7nBUnNIMGer5HxZDN/j1GMmI55Gxu5qymj6D2TW6FNxkP7bw8wMPJ
      Q+T3yeK06GCIFCZGtpvNCgSTM4mpSRYde9clTVOWFu7x+muvYqP8CXbjGjeuHeXh84/yw+KP
      eMJ9mjFXQ6idXMM4qVVS0eADncC3NjMGvqLwwoIVlKQuhN9h4xGt493CNh27x0ZZ1MkTHdt7
      w1w2ndJ0OSKGIijtMfq1Ak9C1l4kBKUaRFY5EUsgcKV6hbPufGwvA0UZVXgaVnHiWZ1A8BX1
      Q6RG2hL2iAI1bSwg2KziKAKoFLwKw7p80auQmPCATct2A7z37h943n+XUnaUGYaUleFh7g5P
      IGVFcJYi7C1sMbaqfYjsnWeRQx9izJqswNsDSz8IZSUcaVW83Et5o3S0VPlAu+BIw5IZi0la
      +CqyICBJdBRtSuUDtqYBFywbukpDEpalXkxNSa+CysTSwKRWsAII5havVCWnzAXm99APmTeL
      kzbbmYtRDFRbdb8TJO2QJAmjrVWOHlzg0KGDESodCprv3Ia0Ty8TPmQ+T2bb4GNBv5EYkRGN
      20JMgrUWHywfmxe0EioJ9IMls5GYIISKoH0EcJLAqIeRWLBSacr0BtGaBPGbM6IfkTbx/Qum
      tGxgtbR0XCAxGrXVendJW0uIzQllH6mjP4fNiZlzU7O9ujoD84lnrXTMJ9VkK7QSbrChd/dG
      g+ZWGXq4W7hIMYjijNJ1s7Wcau+fkYsf4n0FCWpkPd5bNqt5vLf8cONj24tIEmdxI9Wk3HCv
      YvjVEkbSJq+2KF0TRXlzIBiEpTSQNpSWwEe7I57WEdY0UGmwGVZYH6Tc83McTR1tJwRfxM6l
      MZITSmLWWoR95hTGGHy2BghiLG2gmwSsXuCInsIFxYwZzhwMvaUIkNWdPGAQmyHGgsYQtLGO
      4KdYm0MR4RFQy7amjLbu7VZXsSmDEx+n9dbX6L7zDbaOPUNZxSJ+oV7ltEKTOYIvkWoQSXv9
      KA5VibpdncSyNRxhrMEgrErBlfL7POGeRothjPEHj2JIZXuVCOPaiCmbIWJ4Hz3BGWXBeO6W
      jpb1KBKnsdGAoIEkn8MXA0BosC0LGzSGU6a7hRGYT6ptaI6OCJJRaYn9J//VP/6neyWfnImr
      QcMqmVUSM7ubEXn33Y3WqiXvJQwaMNzSq5QauLZxCrWGUWgRSMhNj1Fo0nSbFNrg5nCZTfMS
      p5OFWMA9/r36ZwqEddNk+d7LFN1jCIGlJLCYBJpWyQyIyynLgHU54LE6YFPvkGE42miwVVQk
      FLgpf2i8TRKUoXp6/ioD3SI1OYnJ2dA1Xg7PYjAs2EXEF5EZTTLKkMRlPMtRoFCHrTlz1A+j
      xpYfRp/EV2CbUEuAGmIxuKFCkpxyFDXFxubVzSR6yoVTJIO7ZNe+h18+H4vFiQ49Eml5RUyk
      HTFZTRobiXdVPaKerdE9HH2sEZrSZNGdJFOL0wI72qTKF/B1hn0ctg3iar9h9tl6TSI94s7+
      UaNY1eQQttk6xDaiDyJCbiX6Vcbg1SEupV94JAQazTY+KBK2/TOVpH5Ws31OBBpGWSsjm2BO
      i0U59KOtB1DVWpAg7jnj2FS8ekqmiz0siUs5I08T1HNhWVCNS3N80IZ+WZK7iqEvAUdmHqfS
      bFzxCZNRb2g5Q3v/adxL30ZdO8rpsJMWQxCXIzqKS6nAfjlEEKgwrNoXwZ9DqmQ7HEnczVpR
      Ntwql3kVFE7LIzy/eoqn5qNC9ma1iskc4hVCZB9zNe9/qHJGvTexJrDGEo1skYbE67GTe/BU
      1QCTdfHFZsTAS+zoDZcQqvKBopiKsnXgSRrNZbov/AZbF77ESLKo/YVG/L1xqOtiraEY2TpR
      VFMUaoXiKTCs6w0OyBGyYMB12DrwYeZe+z1G3eMgUJkm1jp8WWCNQ/2sX/ZCL+FcK4LY4m5A
      6msUMPXM7Qe7AW4aGIevGvXgjpEoS9cO2agsoTeimbcJpk0oezGoaRLuh2UTiZoKURfZk7j8
      RzsArPhtEJTW0GX1rOsNLvmXmV4cl/wxzprzTJh8hRohG0f0UjaMb9jpjOJ9SF8VJAiSNjFh
      a08BCB8Eq1szuYF4qkV94FjjKaQcYTSuX07KCSCv0IRNP+WrEGg6ZU4WeNI+A8GhtUO7c9VU
      VRrZMtYEckkZ+CHrmtK2xfYgkQQVGG1dIckOxUypQrPVZrC1iYjhin+TeTPPvFm8f/6kfYTq
      wpdovvzb2DOfo985QagqBKUqR6RpQqiEhOHUDCoM+9cRd5Q8saQholALeoQK0rBF/+xP0r7y
      DfzZL8YwsRXCaIhotutaGkYxxuJDTgg9jEniyoeiflBrhe119WFXBGoSqhadbGnMYIO8OU8w
      C5TDHlL1Z4UHd5iV6BOsFpbUDH60A2AvwtRoykY1R79sU/gMVUPSyiB9f6C3B5kqYPeWzxw7
      mTt/aq00/HDDcWIu42gxQE2K6DBGTRhDRSB1jpXNe5AYRAKrJSy4gBVHE0cwRD9Bt9GwEWpu
      MM6BXaCqokOdSUlDh/QqS99bGlZwCI4C61oYHYDGmuByNOSOv0zHLXMkfZQQlGAtDkvwAXRW
      cC5Iysim+Mf+Ae3XvoKde5th5xhF6xDWpZFmRbYTcJWWeC3I8wMUZfQXxMzjdYTQIsPgbE4F
      VPkSjbVLjDqHovD71O++0nfcLixPtAsealaMgieTAV77ERpeFzNMO/xR3sqAGBKx9c5hticH
      mdILAzpJ5JWSQY9Gs4uxCSbs3mrt6hdAt3aM/4PwAi3IMq0Q+P7GOaxE0YSOLeCBIdX3a8o4
      kf1enbBeyNDEcNAWmLBBGSxi8jgApmfzEGglBatVG2cHzCWew9l2w8dcYsBrAmIJatiSDbrS
      xldVLNVkiHpQSVHbosUAQ6CSBltliRVDy1pCKFESkmabsr9KRQ/r2yT1qhDKGGVxEsC2qXQs
      fiyYJCNUJRWG3vkv0nr7WzRvP084tYw3WVR5TNpUvsRqweXwOnf0BqfNwyy5I7xT9MhdjyV7
      nET9hJTqbrjNoGVY3LoDnUMzba4IR1PPkotsPL0wwNnIzoxtIMSo4njLGhfgmHgVAhrKGHny
      xYziJVCXwFqYYqhoibBVlUh/QLNzmKrKaoGP6dVj7IXK5H9WYDGVv+0BEC/DiePJvM3J9DZC
      ZPDKTfddzv2bMyFGC2A8A8V/70s8BxsSs7d2EYOSZBlVWTMYhALUE4Ky5I5g5TYaDpPbBTw5
      IoJqRFFlRjAuAT/AiZIwwBC3RsbmUFc0Ggp8VSJpF+89ziV0BHpFyebgFsH0aOWP4csRVgLH
      5PT2fdTJOx9szDr7HvXkiIhQjISEfqR0Eegd+xjN1dfpXvxdeue+SLCWshpwL1zHmVaEriiU
      qlgDDcminhbFzAxvsSRuDgmz2HpVxWYdcl+R1VCOPiVKmESL+tpjSzfpygLpVPRmYvWkb5Oc
      4FMM5UT6NGi86bG/EJ1oZTS6hS0LMHmMntkEagxa8MNthUgdb6+3CYP/9leA+pc7pktnaoUL
      8FeJl71vWy+F5zdTPrIQCDQwInUZneJqPIwPW/jy7YiLsQ9hQ79u/ASxKQY4Ys9y2B8FVXql
      EMwIU+ONrIAv40CytaJiQ+cIhIhLUoNKfPiiFVDhq0gF6UcDRIRWlrOm+7gRhjyWNdnq36BV
      O41BYaSBd/RljvgFrDuB1BnabYFupaj6VNU7JOkBosSp0l84S5ov0n7ldxme+QzD/ACXw4uE
      seMo40iK0LUZQQ9QhoCzdUE6MG+WSJIcCddn2tZoSagMllF03xR8eRNjHTpuZ4RMcjLZo/OP
      r1wDWo0YVNe4Y/ssyTEa2iSxDucyPBJ5l+pEZqtzjkw8hAqbZrEoSgLerxOqNdI85gnKYhUl
      kNy3IuxHbF6F37nXogyBM42KH+tsL2XvM2Xw3iz4XVugSoW5RsKdYNnPJs6GmQ/EgIsQ/AZB
      bb2Xj7gd0YjtQaFSQ1LXujYt9L2hYWK4b+wsV34L41qosagKKgYTorySDdu1w5gs0ipWfaxU
      UfyZDu2sxdn0YarRiOt6icN6EocFEgamBC+IpOwNp47m/SY2zGGmqrXKfJkfmido/+A7dC98
      guXeWVbNnQj6Mw7fDfRtxZ07K1x5+zpGhMWlJfYtdrHWcm91laW5LuWgzQGIU7HN8cRw6nR7
      zrlDkVWv1gdoSuvdH1tVIs7QG77DbVnlNm9wxlxgnz9MqdSraj2bBxgVAS/3aNg2oeghbj5C
      OSXB2u3fizXOs231tzoABOWJZsHpbES2K+x1//O8Gi6PLEMfl/IjqX9PavTqq11dYz4B66O2
      lrjYOO/0LY1EWU4CXg3GtbG2HbcmYlCxKBKP4TG1vtb4yw2ACtZApSmIwYojSRfAD+o9uQGt
      8GqxxhI0YtRFS9BaAd02Ub+B95skton1JQ23zM3NVdbNPVb8LTIatGUfApVNxgAAIABJREFU
      bbPAMXOa1GR4LOzYL0dsv+DF7RogPsDrV65jbRN59vs8dqRLNci4ffs2CwsL/PDeK/zcTx/j
      T196haNHj3Dr9m3m/Bw3bt3l9UuXOHL4MN/+7vc5dvQIhx52UQvNNOn7WzRkGaWMWWOIBTJT
      2bCdkbHxFnQ6UqehhDTHZQc5HYcYHZmPOZHQh6RNqLa2eUCJq8ZGcQevJRR3WGg+FGlZTM7V
      N97h+//q9wmjggtf+hQPf+jAf5gtkAiczx/ExnW/mczwZ5s5N+tai5+YG/Jj7ftr+o7NJ02M
      H+GnCsqtBNJwN0qCShuAPNE4s0DUEAtDknQ/klp8sTWVZDIIdheJl5FIztSvKirXpxPaaIhi
      GHEpHqKmTSIlQUu8NzgdRsJbE7Ez49VFTU6aHUIVXNam3x9ijVIEizPKiCFz4ijDFi/pq5wy
      5+nUWeJpCyo4l5M2H9p1bOXuPT718We4s7LK0r6DNNmi+dp3OfXBx7GNNrdu3ST4iqefepKF
      +TmOHjtBMxPW1zfZd+DjPPfcd/n0p34Cu/I6pY+ejBHohR7OznE5vMhp8zB39AaH5PhMjw+S
      IqHY3sfXzG+zA1ixmrLfHN7dE0QJVQ9cC60i83VmHA27n9XhZYw4EpMyKlbIswNceeVlnv3l
      /5p9vfgMX/ndb1H8s3/Ckx//UP1Ef0RWBPjGWsZoeqKe6jTXRpbVyux1CIg0iNOYmNNZRSLQ
      scriTgjAfcx3DmJ7t+5zVCcwipaEbVHtMdbdtLEmny2lq4mpYPdQbbq4v+9qg4GUMSGDoKGi
      LG/PJHrGWXQrUfTZEh3cqMtr8WqpgsHYFBP6dJyjEQ5wVM7yAftjHDGncCQ8bJ+kKwt7ho7F
      NXYlpca2f3meTqvB6ROH6HQ6mLzLkYce5aGVr3OoJVy48ARehQPL8zgrLMzPk6Q5+/Yf4sBi
      m89+/rPky/M8lN5lHB4TY1gyp0mlwTnzeNxGqmfADnr2d4lzhzCkLG4jIlQa22L7leA1yrui
      kStoTNNuiYX4DduilSzQci0IBd//F7836fwA85Xwwv/6r+uw649wBUgEDmS+Zkrbba/2HQup
      suD2nsmf28h4tFNMWIc/1hlxKhvxZxsZlwvH+eZuwqedFlr7cHdfh+6xPY5ul6B4Fa6MHKkq
      R/Oaz94miO/N9vQpja+9bFy21xEhhMhg7UMfX/VitVNt9+sCIvDmW28xGAziCqVv4Ys+Bw8f
      46HFQ1wqbrPCCofTeTLJ2dJN7ugNjtrHd9+7ChK2Ik36A0yrAWISRq0DhId/mvyV38ec+jS9
      5pGIw5cIJbTGQhhSFbdITMpNbnDSWK4M4EDqaUiJ6AjVlEQcDscJG1efICbWD4fqXX09kRTn
      FigpuaVvc8gcR1UwroH6IagyYgTGkxpHqY5GkqIG5vNz+FCwGe7Rch0MjmprNzzbb20nMX9k
      K8Bku3Ofu/30wogz6Wwnnl4F8iTwnfWMjSoGi6+OHHcLw1Otgg+23n37AxDSVtQM2GE2Xeau
      9GPkOUTw32e7Q443IugKcWgoCBr3y5NXFUsIfb06+SAzr4aBtSJh6E2NvRk3hs7sme7n7hiB
      0WCTn/iJT9LttDl+/Bg/8ZnPc+36TVrSYl8inE6XWa8CvTKD0KDSUId1p14BfCgoq97s9c9c
      r6EKpq4zSKiCZSBN1h/5JZJrzzJ3+1kSidpgvqwBbxooq03K4iaHqwZiU47njk3NWdeUV/rp
      fRDCioYx9WHywGCf1J8J6rkeXsPrFqLlJC/wdrjIFf88d8qrlMPr+MEr3N26zO3iTUbVGlYD
      HZowuo0NPU5/4ZP0pzLKpQaOfvGTjNk6/sZXgCLAtcJyNPEkFn64kfBkt6yb4b1Hej7QKvme
      ShStBpad542h49Pt4X0HlQ/w9tByslmXOYqb0reNFhR6ac7B9DQOi2peX5hF1eNMVGEXI3UZ
      HfiYaorq7gJog9w5gk8myBaIyI2lLLJipKlDjKUqU0y2RJJ2CD7EGI5zBD/2S2S2YWp/ZW1t
      jeFwyMmTJ3EuQdIFDtHFi+eUcTgSvCrL4WScnbUxdSXQtAlV2p6MOxGdudbpfytg0rxG+yUM
      n/xlsstfo3Px9yhOfRzfOBCRumLJWhcAxVoHNy+jwbPsQIwnywO3i4zL/YwjuY8ll/UvCJE2
      xftZpKZqBCZ6TZhwftbXZbAMGdAmmwwsT8W8WaZUw92kQsSyWVYsGrjHdY6aU5RlD1+tkCQd
      Pvy5j/HN/6bH6//8dwhlybFf/Dyf+JVfmDDrzdCjhxD4s29/j6WlfbtgxpaSh8/NCrHtZQMv
      /PPbbVo2EFQ4llZ8fiHOIJW6WIRSF6ZcGSbsSyqaVvEax+K0BE6pcSsVcISg3KuU/en99/8v
      riW86BN+aTEmf6wR8kv/no1Tn5kkv1yjiy8LtFZPmcAAam0AiMozNkkRH0OVW7pJqQXzZmny
      W4U2SWVvWvC10tLNMlQVrYZxcLGdlRbbAD9kei3QGgbwwgt/SaPZYXxlvippJIZTJ0/EzxiH
      EcOgrCiD0q0LlyZPq76nSnJcHXp8P/AS1e3ITOILWlf+FFHP4NhHKRvz8Z4UssEKydpleic+
      RagqbJLgywIwOPqMAqxWlpEXFvKcZtjEGSiC1GWpijNQBYt1Dl8V/OXFl7m+couHT1/goTMP
      s96/y4IzNd9nZKi4HF5kRW+yIMfoMs9Bu8xqYekkBVfCa5yxFwihQLXE2lYs3BdHEIcxQvAx
      1zNuLLl945qOQ1DeB65ev8Xly5dZWFjgzp07XL58mV/7tV/j23/xTZ58/NHtE+/XgGwnlvoh
      FqI0zXimsfWxSFFxZeQYKZxrVExEkcfq7Uxhy8XWPC++rhaCdLys1Vm9DR9rZwsR5m0gtRYn
      SvvSH7D58C9MvjcUfWSqvHH80CtpkNQVUEGJCMPRFdJ0CVVlXVfp0+OAHI57ywfw4m+UllYW
      AV9mBx1IUEFNAzulmxs0xCysHRf6aPRBCEjVmzkXScBYvroiXGgWHG3s7Qt5shnKyPdrgTp3
      AbQZ4V79Q0RgdOJj2I3ruLUrbJz7EmrTWFtgU3zRB5PgdhLYJi02BjVRmChOlIE3dF0k8BXj
      +N9+///g2cGzuKajWq/42ZM/z1NPfY5BgCUT6CYBYxp47fF2eJUgGbm2OGYPcau6x0rYoGVL
      TtqHdoVae711XvyLF/HFiEc/8QnarcZkxqi3QDL5S1U5fvw4d+7cod1u8/TTT5PneeRi0YjZ
      eGDDqcUYQbSiOb4IHR+rwVcat0T7TS2DGQKhvpRpWfuxgxLEgcYidFXHzTLlRDLCq4uIQSNc
      XBO+s5WiDr60EDjaAKRAg8cP7sVQozBBf94cGA40wu7luP6MhiHi5mKziDAvi7S1wy29jsWy
      YM7etylazjOqfYJdJkmd/d22q+ESJ8w5Sr/BiCEt6UQgndu7kkpQPjZX8mLP3XcA/HVNxBBC
      ZFLopwvI+Z9j/qV/Sf6D3wAxDJ/8+wgFGoTXiu/RTfazX45hbRJpSoChjkAT2sbRcX4Gpdkw
      ns0qToivvPICz/afJWnH3EEyn/CV136Hj114muMLba4OLLcGCQ3jyRtrjHREgyZdmWfDV9z1
      PU6n+0lIYl2F2V7NV1c3eP6//KecuXYHK/Dyv/jXHP8f/jsOHjuEIeAEP6EvN0ZZXblBv7HF
      Ymv/5GK/8bWvsrzYmVCIPMhiRc5sYmP7mM6wv7VNYK20ZNSdjvtxiUaQVc/HKv8jDYP3jZp9
      LIopf2RhxDW17E8tFmpms7hS7QWPveYd+yiwjFGegeHwOo3Gofq8iuByNvztST8vtcCGQKoG
      b+7viFuJMOBNX5IEQ2M6bBtH18zn13WVd8JlmtIkl2asXd3hOI+tKO+AKolb5kz+o+n80yZA
      Nlolf/0P6J/+LMP8AI3eVfLX/ohk7gj9E5/iePpYXVxdEYKQ1J3vXnWXRZujOuYlnf3uZj39
      3l65gWvNuqM+9WxuDVmcm+N4HulthpVwteggup9GYuiZTW4NN3kkO0xKHiEcxkV9sDrE/sNf
      /7945PpK3Vfgoc0BP/xn/ztH/8f/nqrcQYwlIjz9oScpGD0Qq/HXac2dj3TOxaLlbvJgF/nK
      0PH60PHjcwGp7tCQFiqNSCla1xt+aSnw8rry63dTvrxUcTaPyozTNgrwnY2MR1rlTAhMQomb
      wogIgE/oyhSrgkDpVymK2yRprG2I/EI1PceOy29Zg9cqQnbr9yxCFSw+KFXwGAJe58nMcdCU
      AQpWSVwNyZgaK9F/iLAGo0pqAmWA5Eeo82OtIX/1D+if+48oJUHFMOgcp3j4F8n8Ju2Lv02z
      tY/+8U8wlARjE0IVxe2OJ0uT64Y6TKyRe3QsuaQYLpx9lN/8k98iWdyGa7SKFvuWlkjyLn64
      GhG0RumakpcGAzYZ8Yh7hIEIIu2YUAye4AsQA77HWrhDce36Ln/WX79JNeqhprE7DCoifwOd
      f++OvNe74yqdjerBAal9mSezyiA4cqmJnEIf4zKMi9drdcgIDyJ7yEJEC0HIjXK9sLN1o0ZR
      6aCYCVJ0rxnYmAybHJhUUAmRbNeTTUoDtYb7GiypKB0XaLtAywZSPE0bmE88HX2HrHyNR+1h
      lhpdFpoNFlot0iQHm2FdAq6JuBaStDFJG+cyYka6ik79X3WPr4Iniy9pUtGINQcaX5403pNt
      EWxGXzqU0iIoGJsRGov0syXWn/gVyvmTtC/+FgvXv46tBqikVGQENYRa0GWsBIP6KBkb4t/B
      e44fPsKXz3+Z6panf7ePve341R//VVqZoSxLsK0Jc11uGpxsWNSfJXcLnGgc453hLcryXizx
      JGoGo0P61TXcE6cop1ZcVSV9/AKKQ4PH/c0DMN//N1qBZA96wpe2Eh5tlaBK0zpOZoYFu+3Y
      RSaQIaidRI9ONit+Oulz0I23a7PXM1Thlrfsn9rOvdRLmE/gQMOgmkyquWySRmVCjVVUQVLU
      tWjkGcEXUa9Lo+BOXHaTCamtcwmqHk+H4LejDsY6QiipQgLpadLcYFQR30OI6iZWhwQa9IsE
      qQY06mRgUEElw9gErTy7S9B3P4WqXI3YJBv9mYCgkoJE6kMBtIYnTNd5R8p2j9UKrCNhGJUq
      GRKqkoDFZvOUoz5+7hzDxQvk916ie/Hf4BdO0D/0FBv9krwVw78eR1AoioK8NRb4qGEULuWz
      T3+Wpx/+O6yt3WPf8j6aeStifHyg2e3S37KIViw0FmgPuxxrVtwbDchCQW4tG3j2MRVNNhnG
      5Fz4xU/x+pV7NP7km1gNbHzwMT70j/7BRGlGbl+/qskeGq9/VauCwZgan77DxlyS06HOsQ29
      4/mtlLPNIYsusFkJLw0SnukUNboy3tpO3yLUUYSdMp7f+NZzZI2clApvM/r9LT769JM4t3ul
      eXXTMqTPE+0kgt/GCSXTAi2wrhGzoqGIReu2hVRbu7rfNJ9PMLHYPoS6+Lwu+lDToBxeo5Et
      7tl+QSUqN7oUUFb7fVIz1lSO6jFGC4LJGXmDrQt/dpp1dViyjngZ47Zj8lrsqhzDFzNwDZVI
      IJs6S+utf8/miU9SkpEwwkseAxkimCTHl0WMeGnUX2utvszdV77La50PkySWJMkIwROCZ2ur
      z5kz51joxMBGQDBpF1+NELGYMJzxNSt1JFmbshhgtMT7ftQCUzDpHHeGI7Z8RTeN+myZNsnT
      DlU5xNfBBieOO3dW8OWQAwcPRuStyUBLnIohTJZ6mQpW1w2hcS+61xCZfm87Dm3Ruhxwl9Wy
      oEF3E6c7a+mp5bdWmizbgLPKzyxux7EvbjkeymdL/lZKw0rlONdOdkkm7DtwiJdeeokkSWg2
      mzz00ENUlZ8MgEotIg5CwZl2wAetRZ8DLedQFZxL0So+OBP6E0ddebBKyfbt5rGIZlrsziZY
      277vOUYU0WEE05mUuSRiatZLS9MqztY4Ih2ARqXAbGpSGOog0sX4JolMd+qpAMb72DbZ0dpk
      VI9Pk5qlAqAaedLWIuUgcg8FVbYWHiY8cYyF9U2GwyGIYF3C1saAVrtDu91BJdSSAcKYY1ao
      YtZ8ylySR3Y4HUWqRhngyxWsXUBCYL8ruEXJi8NLNNNbPCIfBm1EzenJfXoO7F9GdFQPLh+R
      vTrCjOswVQxaVzQpEmei8b93ddfYDeKuLL6kfsG2it/Ol2oV939axllx5lXwye6ALy/1+dTc
      iIezireHU5EDsztCtO4NLw8cwRfxZqZeAJ/4xCf44he/yDPPPLPrwRrqa7I5xjVxJidhyNfX
      hzGlHrZQPyD4IsKWoU4ClduAufDgKIz6CqsDLGWsbCKm9N/gEpf963uesxrusqYr8T+hQCXB
      Egu5B94wzbzZtIF+ZfBTj2fEgC3dABTVvUfp61uOm8V78ZwVCVMY+novrVOsCwqUg17kV7XN
      OEGZhCuX3+Ds2bNcvXqVXq/H66+/zgsvvMCpkyd55523sUQirzGYDttATUoInmltBDE2wtqF
      evXtcs1t8AZvoIATw5Ek44Q9xtrgJAn5nlmqyCQ6BtNF5vKAw6HbGmH1J/9apiEuybs4JaHm
      soxc/S9sJTzSLKeKxiMZbTeJ52U28OebGSAcyUoeybe3VEFhoxROZRUnU4+Q7IrA9DfvUY36
      3H3lLyi7RxkO+xw/uA0aiytJhYaKKjRwdRTnp+aFpBZRq8oRNslmIjHF6BqmkVEO3yKQkuZn
      Js0WE6gxzGlqeo6d16WhYsEexOreYVRPSUfm4xdKAlqhtomqp50KAy8M1RD5ruMPb5R2QlE5
      J4sgEAg1Ae/sc7g3MlwdOj6QvhueajaJI8JEacXtCDGIKFr10aSNcQ7vA4vL+7l06RKf/OQn
      abVapGnK+vo6b1x8gYNHTgDU1XIj1Ns6Yy6slJdYSo6QSHPqMmqoiQQ8gaPmPJWOZrYgZ9Iu
      GyHEajGi7KqV8XZXePP1S9y5cpnugUOce+yRmAzlbwALVNX8NHZ7fXyAKeP0VirKa0PHhZlY
      9vTspnx+fhgV20tLY5JNhruV4ZubGY+3Ci40qqnet21PfeBxrAjN1y6x+dAsJv7bqymlCB+b
      G02IrsbnJ1M9NtaWJ4TQx5c3SJIlssZJvMkofYF1CVIrlozPCtLA6gj1Ju41d5joiCV7ZAJT
      2GkNybmjNzjCEhoKTBhO9v0KtE1dAFK3pBCVOPve1H5Cfe0hIDZhzd9lwBaHzHEAVrzh+WHC
      B+feG6BwvG297+HpB+5HBBTrmuw/cJhbN97kB8/+P4g7gIjFGTg3Fzj0zh8wPPVJikaEcuu4
      kgyllR7B7VUrXJvREpUGbkpyyavnteEaa3qbXM5TSaASQy6xFvilr/47Tr7+PZ5oNVi9/BzP
      X3qRJ3/uy3EFeW+tcH/71nrGzdLypeU+6fuIRz+UV4x26EYJ0K+EtcJwuAa0GYG5hLoaqyIg
      DIPwSF7xVj/hhY2M5dywUjr+/vLe0ISd9sxCfPiqkWwKmX3GPd1gQ9fosB8XMhIpKXSKGiUU
      2MZRpFrdxYMZ6kRf2KPPqAaK0XWS5rn7Xltb5mjLXByPxhFCVkNAtgfZzvzwXOLZKO3MAamT
      h5k0ZiaHc82KkiFz70JrGVSwolTNfWQPmtV2HLKUhHITcW0OHDzGvqUUmx2NRf31JNbTCzTf
      /FPS5hxbR56pSbOiaHbLdKawOrt/QASMDqkkBw2TSNhSVvHmZhffKEm1i9OAEri7cofFl7/D
      oYUOAIt5g/O33+Ct1y5y5qGzMzD1v5JtBMNQ3ls8Oobc4r+NQL4zoiMZ65owNCXDKvDq0PFk
      u5ysMDUJN0uJ50YJp5qBrdIynzk6Zg+a9Kk/739NAaPVTDs3yGmbbk3qWgGKS+YxNVLT4EnS
      fdv5ggfYNpU3kf8oPRa/4V1qemJ/KJEw3EXetZftvHsRqDTBskRTItOD1jUK55sGJYvKlzbO
      gWqmAx0CNiWIxZhYgFJpY8c11J82FoytO7EBMqL/oUjSIUm7NRNDVBLSoJSmw8b5n6V57yLd
      i7/D8MznGTYP1lBuxWuYJK8a1lG6Zl1vLNE/CBVSk/YGAmIy9skBugy54zc4ku5DjEXEcO/e
      KifT2Xl+udnghVu3OXPu/F8/D/Dp+WFk/3qPvsMDPxZG7LclmqR4zVmt9oZeLCWR6xOiTq0Y
      Zd1Uu0BQwAP7/xgCsdPG9azGGMpiBV/cBALN1oXt8zSAiVSDXmGtMCykkXuzDBnWxNrgso7q
      WNdENKqfuCTFo6gWeL8Vk2u2OfluAJtklMOtB7KcTW5xD9REnClLLCOGGpN/ni0Ei+gYdBdr
      AySMJnCYcZP5KoY1jc3qSSJuxSpfolLU6pYRqatYjA65WP6Qc/YZHAXeW5zfjPyhrolWfVy9
      AviQoqFkOH+SsnuU/PI3SFzK4PhHqcaOe305vkrRqo8VH4OTSoS525TULaOhQozDVxUfnrN8
      bf0OB/MKUUFFOHL0OFcLWJ6qxX9jo8+JcxfwanAwHQadtAuxUDtMcOR1xGpXB27uzCEoqHH4
      SRx06iQxEWS1R6dUifkDDXFXKdbx4a6nIkUk5g8qtZPvGVelq8TPZtZQoDEuXpubbskdVnmQ
      tAN+FGcrke09u4BgIubdHo7lkdZEbk2lpviwaFXig48VZaWjaSsSqXAyInihNIGV8DqisOTP
      T2KowVRY7VNVG/jRNcQtYrIDM9fnp1paNVAWt2t6k9knMPRC3xvm9tJzEHhuLeWt0vEfLw5o
      292MDEaHBNOI0S0Z+0IxDj5Gbwox7BsECgb0WOGQOTa+uPq4cFYejpFBGQMnBSdVJPcyOUFj
      KBmtwDigpBRHefZnaK6/Svvl32V0/KMM24eZXr8rYsLOiav7UoX3Fb0QCLqOYYEeb+No8/Tc
      KYxJUeMRY8lbczR+6u/y3T/6TZbCiDUc5sd/krOHD4OCw9hdsVdFCSrc8RlvbgUSUR5plnxt
      o8GxxDMMkf1r00Ow8GhzKuklTKFG6wiCbn9vHMWe633LRimcmxtHoQwadIIUdb6MIhUKqhYw
      PLcZVb8+0gUJsVF8EBAllxEjL2x6G3ngBcyDnDch8sdoiWosgilJYocIBucEDQVowJIADbTc
      isUySQ519jcehyfb0aUS3Y4/JyRkNMhNC4tiZVTzH8WBbEyDNDuMkb30Dma3JKZeIabNK6xX
      lv1pdV8/9YPdAunDn29kHM08jzVnE5SxQw5RavYIiQFtEQthZ9cQGjTpjDs/MWGm4qgCGG2A
      TSg8iMSEnqGue9CSIDnUgoXTl6saGHaOMHrkl2hd/hM6d16hf/IT+Boi/3Z4i3nTYr8cRrUi
      1u0lNKRJxRAnKU09QsGAbw++zxP+GealDxInweNnjzP8z3+Nu/fWODK/SCe34KMCjyFUkxj1
      +GWpECoOJBXnWwXnWwUrlcEa5Wyz4FijpKfKUqqslrNrdGw+z2YZeLsvWInMCFGELb6MBJbz
      kmEC39lMasW/QMmIEVv1Z7aRo2Og2Zo3tIzWxyOsQWolF2Mgd8piWnGnSLZXrb3U76gRouMt
      ifE4UyHqsXiEMl6rVohrYKzD6Ag1jZrOfAR1VtiOi9opsBS7MtUGS1kLCRZa8KZ/ZRscZlKc
      m8Pcr25XxyFIwbnurtm/CDKj2bDTDHFl+3C74COdEYfrEtStUmZyB5HMK9Kvx+dfTOU4dqQ7
      xRCIXElRVdRitCCVEYlEevfUjHAMJufGVSEm74IkNV27qROiFjEWr45ScjZOfpbh/idoX/wK
      tugjxnBYTjIvEVhXlWu87p+n0KgAmmizrjh1JNrisfQwoyqG3LXOZYUgpEnKoQP7aTRa+BDf
      8/oeqBH31XvteVdxqg5ZZsZzayvlfBpjqUWIumKxueLTeG2YcCTbuSxvN2bDwId21Pa+Hd7k
      brjCh+zHSJmdFX0QPrsoXB1E5uS+F37jluOX9w+ZxvQZgYWkYr2yzNsCbdyfctFIqB3ZWXd5
      TGMTgmL8aIoa0OPVUzEiYyGm/mqYxs6OH7PFFsURZSbgerjMMXN6JtFzX3s3p1eh7y2Lyf2T
      cRr3ayDKwpS3t66GP1lL+en5wbsXzGhUjvRq+Mo3v8J3r30LEH7s2Mf5wkc+zxgLtX3dDl//
      LCalCoIRB2NdLh3hbbtOcMXzjDEEYzFWUA/D5kGqs1+g+9q/pXzs5yndPCEoJaDJcc5wHFNT
      T4Yxn00dru1W82xlHkx7hkN0bBGRmkzADuZ+j2KvdnluLeW1gSMxcL4ZozPLacW9kWWttLOs
      ywa+thFntrVCuFsY/LtETfbLEc6aR9nN2SuIi9R+K2VJ8FtkVvl7B2Pl105rWKVtPeXqdXz3
      6P1/UKN49qWB44WNHsFvUTDchjzouJm27aa+zav+Be5q5MVUQE1jb79GQbE0ZD8qFkEYMnhv
      A2Dnd42/r34ZpiJMOvt6NzuQ+PfW+esvF4U//M6f8kL6LO3zDdrnM/7SfouvPve1XfcyxgQZ
      HdGv1hmEOwQ/ywCIL9GyF6/VDymLERJGkR5SS6yUVEmT3sNfIvnBvyQfXieVPgl9Uokv8VuR
      QS4M6tcQ9QUm9GiGLWwSE5HjldkS1S4jnmsYZZ92YKJ22XQDVQHuquFkFmecllVeWo8Z2Oul
      4YUtx7VhwkoR3dBH85Jzdfb2Wul4bitlpXpwSKMtXZbNgRnVl3GzmVAgWvFUuyI1saE7MkC0
      GDfrrovvrL1OOX98z99SjaJuZVDeHDkSG53tDSq8UtMhsmsmOGJO8qT7CAuyBBIdRfwIJOFO
      uMFoOsGlgZL1KDannoPmGAWjXY2uGmtjg21BuoAmCyRZk6TRQZMFQrIAyQKk9SuLr4V2F7JF
      ZPxqxL9JulSaEPZKRlALd79L59/epQsQeOHm97Dp9nNxmeMHN/4SmcI5UU8c46o6QVCp4cnT
      Tj2RE2myrZRITePSHFw7QrBxDKTJ6EP/Cc2LXyEpt3bfh3MR1GbZAYkJAAAgAElEQVQySNpg
      G1g3TyaO3nDAqqYzE1Pceln69Lih1wlY3KreZehXmJeliVDbXuYM/OTCdq3neimYNH67Mcor
      WynqSy4NU37+QEnXljxds7c92ip5tFXW2433Lp69y9SDpHgdoWJ2Ney0NUf3IGmw6jOs6EyW
      FOotiihJnXGGlEIbLCqo62D8FrgE9SVBR4gksw97/KTr/yjClvYoKDjMCWySURUDUjJCHaXP
      pMESzZnMtWpEjqaNJqPhJqGMrMaltnlzeJF74e37NseomiNz6zPvCYau3cf+7BjzyX7EK1Ux
      QEOBlXeXvx1qn3fCZRblDAuyXaOc2Zz+DtXIhs1rhuYI9QcIJk6WAKnk2BCLXI2p9/wqYC1V
      cDEoop6s2cWYDtVoQAgVIkLe6qKqeGsYPPp3ab70W2w+9mUql0+4V2M11FhJ0kd26BqZkIry
      9ugOc43FyNGkAi7Bhj5t6ZLrHGIcblPXWNGrOHHMs3MAmO2ZMLbu+A+aDpYQSnXcLjMeaimH
      nHCoWdFKDL0qo223cfAKdQDd4bf1ciYWIw8Or7uZZdTE8KmEGB40bg71RY1rt7Eg2wvjHYsB
      Gpf/LcPHfom2yaMyotl2KOOdRRSir9LJvaXiICSIdQTTwiUpZVFEThrbgqmVydYhXQ2RLdoY
      y5I/zUC3QFpkjQbBe+blRNwjG4eGGGkxzhHq1VBsioTAqHeP27zNQYlbNlXFS0Fl9s5uqwqV
      WOwex+9qj7uDt1ganeSkPEySNjC2XbfydBVBHInbW6lAQpdjLJPZBqFSggmA4XOPfYF/9eY/
      J1+Og2JwZ8QvPPEFGnkTMRB8mORhQmhEBoagiDRxCsYago/BXTHC819/jov/5g+wWcoHfuUX
      Of34ozWosSBgGG55kkaLqvJoYwl96KfoXPxtek/8Q6qaW8hYR0HGd577Futb92ikLf7OBz9K
      u9VCXULHHyZJhRCiELpLUqpSED9AJEI85a1rr6o3GzSlRT7F3OsDiItCbeMuOv5zMoFNWrJW
      ZldFMYixbBSBrtsJwY0DIIY6dziNKmAi5mXHo2bMHzkOkU6bD4LYrC5wiN/ZvPsaZrTB6oFn
      EJvinKU3HGBEyWxUjR+T0kqdZlWimrs1hrIsMEYRlxO8Uo5ukDYOIqGISurlLVy6hEjKzvpe
      iJ3aOGEw2qCvPfr0CBpYNgdn2nicMdV60IeIjgfApTmvDb7PXX1r1/ePbVjO0UjW73t80Rzj
      rJyLWsP1tm7bZd25bdyeeBTwNHAMSKyl+cb/x8apz/DK25f4s4t/jtWUTz7+aY4fPo21pt5X
      jxgG4drIslYYPjQvcXY2CT5o5DYKAxT43h9/i+v/+H+mE+K93s0NT/7f/y1nP/BB1Bc1/HyE
      zRcZDvqkEulpGpvXSa98k96jP0+FJdiMr/75H3PozBJJkhBC4Pt//F1ONRYZ7T/Kkx99ikWJ
      EcNQF8sTBnixWHFRg65pWqRmdxguhhCrPQtbZj+0bVteuDy0XOjEaiK3A54wLmuzexTXx7Cc
      3RNFGuq8wp6F9swes+pJ77zE5oWfw4ZItyII3aRivbSYsEGwXRwe2YHjqQJoKBDbIoQKJwZn
      KyRdQEIZWdjEAg4xGVJt7bmft2nOD9bf4O3iJov5jfp9JbdKaw/C17FNez4a3n2rmNgBw3Ke
      RrK253HZER3bq23vZyHoREg8nq/sO9riF47+NAuyv17TB3hvI5wiWBoWTjYtRUNRcQT6BDyJ
      xGhQnV/n4v/52xwN29e2NAg8/+u/x5lHz0T4d5JTDiucxOjaeNLd7Oyje/wjtF/5fTYf/llu
      3r6HbSpJEr/56v/7dT7z9WfZ7xybPvDKD57iI//Fr8bKPL+JMftAR1SDq3i3jzQ/jnkQt/z7
      sX93u8Gv32xxoxxz+Oxl7xaiuN+1PPi86bPyq99ieOpTUd6oPlb5GrWKEvwme3F7BhVMvRoI
      YCmoioJQbEYHPAxZCW/QC2ukrkVZ7g3/iFs9y2GrpG7Ezf4xbvcPIyKs6T1u7xCV+OuYkYK9
      oBzjC+nI4n25LyutWPUrVHqfMOrMvSmrQ8PXVk+zaOpstNSaXmHcyhGn430Bg5cwYYstVnnL
      v4ZKinUJFbHWOBR7rOSjMtaWhBG+2KI9v0wx7E3aeE3vccNfZdA9TnXwUdqX/pDgS2yNFVm9
      u8rxr32XA0nUju46y9m/fI5XX7gIGKxtx8nX5uTNs6TJHITyvu3zrnHonfbxpRGfWx5yvFHV
      neD9nf9XNZEIhQBIh2uIeob5AaYHjUh01LwKZajYjaeEiWyOWMT38WGAdcRCDZuhNmPOnqBj
      5u6zhdg2VWXBLPFUdpSlBI4nI2zVZMP3uOnf3wDQ6YjUDqtCzm6PKdqiOc4+lu/r9N70b3Ox
      /MHEQd9pIgYveVT2BNqZ4QsLY4rLulDKQxiMi2TAV5uoVuT5KYRYm3DWXkC0iNpoISYQT/zi
      T07QtQCbJnDu5z7DuE1tkjPY2gRkwgk1L4sct7H2or9wFj93lLMbzzJYK1BVNtc2md8Ri553
      lnu3bgGCMdvFVSI2bl8jUmnvBnq/dqcwXB46jIFTeVRdCcoes+T2G5Umk44XjKnT8u/vd42A
      DwGRhMbVP6d39qcIGnXHxu1hRPnuVsmFXNDkzC5muMlVacyGYkACVFVFwnYRfksh4KnI4rK/
      41pVleAHWGLWctHs4xP5Pq7fDfQHgTy3JE5g7r3f34SzqJwnsVtYM1UYFJJdUSCABl1O2HPY
      PfyTsR11p6i0JN0ThhEdYqtDNKRxC1HeJFhHkCUMgmqFWMF10oi8NDliE5JaUaf0Q6xtIApB
      NBJm1WPt47/y9/gzhcu/+YeYNOHCP/oyj3/8o3iN5MPOGKTs10U/WdQU2PHMevs/SDt8n88V
      N/nqyze5t77OJWM5OHUPl31g6ZFHCZLEkktjQSPVZYFhTtvvhmJ+76PjLzYzNiuDGuGj3REt
      F9jyhs60kss4Qzj+dp1agrR2Ut7ntYiADX3ye5colx6ikrgEBq1pzAXQitTMIc6SaZ/1UlhI
      ZgfnzoCqMRmqs9QpImCpsFSUahnpkIqSlnTqT3iK0Q1ca5aOXQScE0ZFwO2RuNtpA+0jOvs5
      I9Wu7U4VGiT0Zt43mnAmeYpM3z3kuWi3eZB++1aTXzgwG1GKMHQPoaAob/Ky3OKMf4R95hDD
      wRWsbSHuQK3QEvFZKuBJ0PIucaQLVXETsqM4LSIrhRc+/stf5Mf/4c9QVRs424nQC5vRbHfZ
      2rg3ISI2OoqaCdIgUtDYOtpn6R35OHP+T/iFJcvm0S9y7eFn+N7/8j/RWbnNVqtN/p/+Z9zu
      wqIG5okieUFHZDRIJCdU65igQhXiHrny2/vlEGSWAvz/Z+3NYyzL7vu+z++cc5e3VnVVdfW+
      zcaefeGQFBdRlEhRkm0IiCwltrPAcQIlQYQIceLAyH9KDBjOBjhBoCxAkBgOIMDwIkNLLEqW
      LUjkSCSH5HAWDjlLL9N7da1vu/eec37549z3qqq7ZzQj8TQKqK7tvXvuuef8lu+i+zzhhAPZ
      /6ijxajlfKl8rBMxxiaVZVxyQSHxMFUcIvv/F+NaMFWWlAlM3urR7H9EKdKDYQuiFIv/p48S
      NSXOGPK732e2/hzGFYjNEFsgrpNMmU3GJ1Y6DEzEupwjZcZU+qgpCeqSWoXJ4UA8nCyG0ue7
      us1Idw99z4gw1THbunlgyVjKzvkHPqrWGmJMCd3BOXkQp+CN8C12dOvQ15ydUPnDsA4rzeHE
      VoVz7ln69zy47zeGZl/06xPLDzbTAKGWyOViyrJZW8xDUZ4my9daeJBNqFGToa2SBm6NqmmI
      povLT2FaxpdBsRIRiaCKtR2ciQmPlWWMdzfZunuXl/6/r/DSV/4Vo2lEXIF1BTbvI2GG1Xnn
      d8bk1ItIPaJ//SVOP3KW/l//RX7fneQ1PUqtBc/3z7JTdZBiCXXCVDMiQ5AOXnrIndt3VLjf
      TA4FsRmE+kF1z3uGtkbQ7ZSZHGLNv94p+fxwtsjklRzB31M6TMhTTMHIbHOtfpMlWeFkS+FT
      cajGNjyKi9/Zvz3Qv/kNwvAU096J/QaTKRIykxRDG5tDnB3qR243jkFucVlJaGrsnP03v9ZW
      xbnSGYIsMPAA2A5Tv0FNQ5+VBJ6LCeloylXC9O7iAbq1na6xaSJ5nrM6JPFoVdL7uqe8u6vb
      9PI1Ls1eO1QGndYrdPLN9vMj5G4Pa/Yf2mPmMc7KueQZ/OccdasBlDlH+eZvs/3wX9yfcZEF
      5kLFEExgFkfUcUZhhjQ6YklWkq4/BVneSbImom1VLpE6VU3quYRkP1t0lnjrlZeRX/vfeaSw
      RFW+Q8HJX/ybLK+sIdrgyiHVLJVFnYlITPem9/ZXeG1ryNd/8e+z2uYlIxNZ/+9/iRd+6vOI
      K7jTZKzJOLnxtMMRE/bi3qGaunuW+kPF5fNwItWbLYLnZq3cquF0mYK/RhVLc6j8CKnnoASU
      wEhu0xW7KKGGFsy1F3cYms59MAkRQza+zfTkx5NpmsxhDnFxoaqAydADFDqJFUeyhq060gdM
      rFKZ9sC1arRIqJjXkwLzHkX7OISMkd7FmBKVgmi6gOKM0GjKvOd/brkH45kBYxBqXAsbiAtj
      3/3XHTLAqOOoPUsvDplvH5VbIjd7qBpiVmDsCE+NErCScVLOYvXBSe2HHSGCyTqJFBSlPQYD
      PmxgTBe0wLgOQrO4tlxyMrNCjBVERew6xJCajaLEGDFxhrMQ1ZFOgoCPLeMuTnmreZmH889z
      +zf/EZ/vtFL5CB/Xmn/9O7/JJ//af4hGaGa7ZFmXGBq0NQdRlPHDP8k3/+v/abH4AfrR8Ob/
      9U948S9+GcRyezpifTjvGYERg/ugs/KjQrYSJ7bEtCCj1Szcw/v9gLhUUvwK4A+oDijw9hje
      mK5xrn+H5zuDQ7+WTTYI5RIvbWd8fFiTmQO7uMBYR4zjjNWYp6SOtmjXPoRHssB241hyJmnG
      yP61BBT3AD+y1P6PiNRs6U2OcCRxBkKKoWPstPLm6b2sLUvqNBfKnu5gNJnapRj7wbu1ogy0
      x7LsAwMrK8TYYRwMa7kHeos5CiQy/ocCuH3AMALT0dtIdozcZgRxNOp55a2rvHvtByiBfr7M
      xRceo7QzjrBGUabehoolyzvEug0XbYlvApltdeZiK4RlM9QIYg1GBEPBI/ICmeSYvR3o7F+E
      iMDOFtZKW+ywhOApyj71bG/RfVYgNA8ob9c+5RFRONGzbHjHCRMpb72C2732w3GI8TFVfyoC
      QXfot5WFF3r1oWaMiqXWkpHu4LTPv9x0RASH8tNrilFH43tsqGDsDVChNH1enqxwubZcjX3O
      5nus2v2HQCZ3Cf1jrBXxvqQWkqv5fNdXrWnqO8Q4xbohLltHgJ4Tthuh7xKsO7ZEGMz9JJT9
      v2+po2FJz+C1QEyOSACNacebVy3aN7IRbtGTAbfi24icZumg6O4DXyAhVRdkIk1exEaSHtCh
      5BwIH0K6/sMMEeiUx2noYEgit2/dVfaW7nDx+Yfb96K8/s03+PJnvwCk+F8xiCqx2sK35hTW
      5kgMuDxHYw9jFGKqIEWf0ACh9UswmoFYwtlH0ds/WEBWpo2nfOQiMQS09RgzUlPNUmkzxKJ9
      8JWL/8aXePe3v86gNTysNXLuF36KQI6KYd1Z7NU/oje6yuz4c0xPPP/DeQCseKJagoDEsAhD
      +jYddYvJ1UAmFS9Pr/Gp8hxfXFuiUeFOIxjT0Jcun+ITbWKXsDqRnE8fucHzJLvSmVhg/wEw
      k038iad5xN3b0EkTWEoHK11SoyYQQtqdYpxR+xF5eRwb/YJDMPbQCTcIYULef/96ZfQ7MHsT
      zAxhm+DWcNkqiuKMua89VUjJTCcMZPi+tfd7x8EmZVCYxbTz5w8AsR/04v3zjCRvv69mLcAb
      Y8P6o/s4MRFhVO9gTB9jLEgSr4rNTYJOU7XF5xh7AVGPxpwQ2s1B90lSkDr5kZAUIxSe/Pm/
      ylf/4f/J8NKbBDFMn/8sz37hx4CIE5+om+Qt/qgB9Wg2AAJPfu6z1H//b/H6//FrxKrm/F/+
      Ep/99/4KAGWzRffNf0F14nl2znyWKBb8CPeBneD3B1seGqk8GOiqoOYIUDHRgj/cNXxxaYqP
      CU26+LOaMdM9jpq0O/dkD/RokhtxQ0zYhxhELGfc+gPhE6rg/ITK3e+Te+9akPkbXfzfJOSh
      cWgzRkxSX2uiMOI82IDFMm0sXue4U6W0SsdEPModVzGjoh88TpsFnKKQVO6doxb3vCXqCj0X
      F8ymP33oIdRowvPIIfL6D3uoQrQDTJwBjkRfFLL4IDiMYI1JOKbkFE5WnmhppOCjEENCdtbV
      DNEqnWbq0PvitLa1qEq3k/P8f/TL7O5sY7OSbm+QzLEBiNTVNbLiAnO1MkMAP8KbHiZOee7H
      P8ELX/4CN+vXeeyNl9irtsDm9N76bcaP/QxeMvB7qOnQSP+DT4CPOtVpx04XU4jnfFmw0Vhe
      nuT8zPKUqU55LXyDU3nJjXibQXwMiQ11s0OZraVGUlOBLZPqM6CSyrGH8aPtZyaR472mStHi
      62m1t2K8qXOJMWgsEbtMjA1i1zB2mdiMW1fCJpViRelliX0UbaAbAgeNWibBsOstnaxLx53m
      an2D7ewaR0zkETmKiKXynnH74BhRBjZgBe42DieJAR0VVvP3PwlSbHswFoa1vOHmLOdU50Gi
      VvqhN6z3fU1TEkJoE9y0Y6kInz/Z4ddfu8LDT50DYHd7jxNHT+M11c5FknAwJsO2vRcVwZDk
      NmOcY5GUqCHh8jVPEGkxGJsRgiHPMoLvYoxlsJzK5IkJ1iG3BU2ImPxCUtA2GRojjWgqscak
      oIefMtI9trjL5OwnWXrlH0ComT79b9K0XW0UJEyTwfn99c8/+4gYbFYSmlSNOdPLiQFetBBM
      j75zPBU/jzU5GpPfF+pBj5LZToILa0JTaovCksVOmrFfokl32RgLxtGEPZRIlq0uwoYkeNTC
      ryT9bDQF3eHjiYEkIBKpvdIp+4TgMQgxpLJaTgeLQZ0h6FyLDQqbCiMBRwjHeaZYZyfMgMBU
      c7A5WWweqNKwlu9Lt+w2hiomF8wHD4V7kCrOKMUHmYR/xMV/Z2b440nBX1qZpgqYbVWiRff1
      YFVZypWfeOHL/Ml3vkETKk4fO8tTzz5EUEEkIiYnGgHj8CGFYlEMBwWupF1oAjT1XVy2RCRD
      wjjF8VT4Jkf9FLUWowGNERNavH8wiVhkUi5HFGwYMWquUeZnknhXmBFNh2G+xGN8Bn/EAr9L
      XD5HNTibFr5oiz4Qck0qoR9t1g6M7+5mZE652G1vbNbD1zOmzQZWMqLZY6aRtyZ9Pj0I+Log
      k4oQNMGsWxn1cdzFhdR1jDEhEROpev++qkZm03dSo6mtjNi6YayGN/f2eLjYo7BdYpig6nHZ
      8uL3QwA10lYDkpyhNUo9u0nTjCmyp9FmAqZcaHYqNb7OMNYkQSkVsDkb/gprcgxjA0dzy3vh
      MtvcRqKwGZVTxUWKuPy+IKv5pj5wyR4q2PvJOmnd3V8xC1Go3ofl9WcZq0Xkp4s0z1GKJDhl
      7od4AAz6A770mc8iogsDvtgua8Enk+wQ2/lTRA1Itlhdaku8BlSEvFgDBBPHh4TSIDJXwEuq
      EmbRdkAOlNrb8motNc4UqXrUopZFpzRTj5gMiRNUoVk+B2G87zmXjLEw+P0QaBSEWoUV9wE7
      zD3jZBFo5m9KcggNBk/thDv6JkYzLtfCmjuPSPfQxCbAXEZQoc8R6tlbdDoX0jcfcCqJGLL8
      GAd3RduMML1VTvROskukJ4qS2t33jXY1adS0CwBZvo5xLCh8gbiw41Rxya0djyG2cWvkmF1J
      GCeTXE7WzVFWpMcuW6lhJour+8AhAkfywN3aYdDkh3ygBFtFwYph2qT4KypsNhlde//JMvXC
      nWB5d1SSOeVHhvfTLh80kmVtGjF6hBlK/9CeqCiiEUu1KG4c/H6ay/SFTb3NUVleqDFYkzGZ
      THn33XcZT8Y88fijED0uy7i1scPxtWVC8DShod9xXLv2LjFGjhxZZjLe5PbGiEcvnEYVym5B
      CJHMGbQNiK/Gd9mTHZ7m7IH3k4otYkqilki1g18+e882v/+eD+UAr0wyvjA8QGD+U2LK1aLN
      5BWwOSYkS89le4yVFhC27nYxoY/HITZLsGSTAQbVgEQP4lI8rkmm3bqc6FNn9eAu6Nx+9SdE
      QSbbhHzIStlB4owQI9YOMXaYIBPikmivNmnRtgC9eUgv7Q4DwkLtzebE6LA6IURDVvQIMU/Q
      Wa1SI84k+qcQyWSJPb/EN7dP44znZ45Z4gdxKO4ZK5lnEgwbrWWTtPNZOKVjlPyA7MlyFths
      HCOfqjSZUXKjtFEH2+ZtNpqC5/Qo3Q9Iljdrw29vd/jppeniHoo4jHTv5xHfk4tA2yNRSShc
      zUESpCUaS9A8gc8yeOeVV3nll/8Oq7d3GTnDv/qrP8nRL/4I4/GE/mDArVu3aJoGay1Lwz5N
      E/AhcOPmTe7evcvS0hJf+/q3ybKMqqp46qmnObZ+HCRibM5Z/XgSb7MFTUjSi6n7LhAr8moz
      hcj50mEclcItrnOMtX1pxL7VQ4sfIJP3w4ccHkEtDr+I1w964/ZlmZ0wxZsREntIs4PNViB6
      jLGpdm46SL4OaKJ5hgSXiLafOrShRfKJw1pDUIOYZN4Q1y5irMOTJx6u960gVkTCGK8C4nAu
      p1bBZQUEbUtoDfMNex7ChWoXscUi3YihSpCFWLU6OKDGIjrDmHTkrjnhL62XjLxJqmTv61B2
      /xCBnot0bSRoW+2BRRJ6cO0ZSQ/M/J5tN47V3NO3SsdGGrOLoUMha4vfuT01/IPNPsdccm7P
      jdJD+WtHx/cA/Uxy2mnnYz5UlYOt+xD2wDmMZPgYsNrgfQYxsCpH0ViRztKCl//2f8fDdyYg
      jn6AvX/4O+iLT/HM80+jmnSmfISXXnqJlSNHOHv2Ajvbd9ne3ubY0RW63S4xBHxQ3r18hZNH
      h8Swg1cwMiBr15n3kvIDIHpBTY4xgtt9jzA4iTcdTKwQ/KIyV9Inqnl/cdyP0lE06aBcdD73
      Nc2EK9feYxYq9HSfzArT7T2OHV9N8eEC2bd41bSooDWTaBKZolwmNtNWy19bkS0w0y0aU1LP
      7hLDHtENKIpVIBLUoZqsfELTEGyTnMZ3xmwG4ZmOYrJBS6pwyXY1RsR1yfKCurJJsMsarGT4
      uiIrhjQ+krmcGGtCbLCGJMeoU5ZsStYOjrndEou52f88xpoYJli3hIi0p1UKS8L73BhjTIIA
      iACemFpQKPCQe/y+0Gcpj/zsSlJJs8Cp3KdN4Z6hGtHoicGCaYsG0kvQDesIppceBCkTtj4q
      1jmiB+tymhhxJu3CMeyys3Ub3r0OBxTt+mrYunyNoz/xaWa1gnrqYPncZ36EwfAIZZHTLQyn
      jx/mpivCmTNnEZ1SxzEjP2It6x/QJNgPH61o22dxmMkm2ltD1GOyTsKcxVTaXZKjoP6H0wgz
      koSTRO95cAS+9tJLnDp5gtKd41vf+gbeey6c32MwHDAe7fH0ExfBxpSp0tb252oTkrTfo58h
      1QR8uygKS3Dd1EbPu2Q46mYI2tD4BqO+lUsh4cvzDi7P8Y3nTDdyOkwRk6N+1JrZOFBNCa+v
      aRrBWSXEuZJBQGNFCB4Js9TwE4NIj1kVmG+SqlD0s4SH9xZjDEYaxLq26tWCBiXxkpUatQMC
      bnETrcsSNFhMIn37LlYbjJ8Qsx7b/+uvYnpd6kuXma0dpbj4CJ0f/3HUGKZeeHWS8amlmrfC
      64x1l6ftJ3m09HhKpC0ZZgq68C178NAYkouLGjCOUN3CuGUsfuG5EbRAdZcYVshkCppjqDFi
      GfRX0BNrcHsfYj0VZeXhM9TUfO/7l6jqGmsdu7s7PPzwY+zt7STijEBV17zwzEWsSUwzSaW3
      dlkdThJVDfeH6oIJyVPBUaFNBVKC6+LrFvioFmeznLlA3OJPtuWi9xdZOvwNUcizAg32ngQJ
      1tePUTee119/g9FozPlzZ3nssY/xz379n/KlL34RsS6FNzgyGqgn2NmIOULS0Z4SlUebefPD
      Qr2F7N3E7V4GNyDPypTI1amBJAtQmBLUYGOBCRUxKlaE0IzTLodgqoo81oQmT6JMJLK7IFib
      kmEfwdRbiAgaQWJFHAVsaI+wNpM2XU3a9BIw1iGxJhJBAnMZx6ChDf98a/KnC+RqEIs1FV4z
      BENhE2TAVBOMTvl/8y+w1i+YPfoZAE5nS3y56GOznKYu0Vlk6vqcsZ9oNYmKVBAWi8SaJFxp
      EqAt7vcTDHNcjmkZUxZRm06aeoxYm2DM8/4AaRPYiLc5blaTHsr8kTKO3HV44ld+mXf+i7/H
      iXFgj0D181/gsz/6KXbjFpNZxfrqEe5u7ZC5jEuX3mFjY4P1o0fZuHsX7z1PP/EoNp9X6u9Z
      WAfX4LzAocp09i6VHbBUniGarLV4am+PzohNTea6EKZYCcitG9f2Leva5oK0ber5yxxqQD0o
      NNK0E8dm/2lXrfHNNrW3dPsnuH3nFlag31+i9g3f+dbLfP5HfzS9rMDwyu/DzjViuYzmfZL5
      wcHXmLfY0juSZoK98yZh5SEohwtkIO1kpaSnDSZafHyMrSyH+jbWPdBtnSNFdW4JuE/G1uBb
      Sb10xCVVibh4X6nwHUAOVJU1tg2MuN/MOHBFsthdDgXcqS/SFhfvq4ZlJX/ztx5GygHdMsOH
      yMdPbPHz519f3K0HLpaDO9v8Ph78v0b2JV8OfM23omN7t2AwV682JK6okgwRU0GRFu+vJsMv
      n6NxPYrdy9zcHPPq5RHrywXPnMwWSWoMAWk7yZCED6Lt8MpkmdNulxU3wxbdJCdjc7BF2jxE
      8RrJbVIskWaGNJPFCeqdZbx0GnvsU3Qu/UskNOye/QKJ7R0MCvMAACAASURBVBcWtyLYASaM
      kI2bV3TeXk929vF9EYoPGql93oMwOwRXCGFCNbtMlGUGy48zne4AFoNQ9JYI07utAG7CctfH
      n2fcO0eMDVlWEvwsTXbbX3ZtiXGrMXRdTs6MpXd+h72Hv0y0XaKfLmACniJh810fG0f4aHFF
      j1jv0tDh8thTuIDL3uWEewTFprDEz5KkSRuBe83JbEzhS6wWyhNe0vWKcYh6oio+GpzL2t5G
      OFQI+DC9logBk4HKQiEjLzKCD6lJ5wp8U/PWpRH/469+m+nMc+78kF/6jy9wulsQbJe749cR
      lLXyHFEtNusmIV/bSYu13sWaNlw1OUZnXPFvcMx3E7vLHsVlJYQpgTyFQED/+7/J9sf+LawB
      jSmssESamSJ1wAw6rQq08NI//z2+8z/8P8S9CWs/8SJ/4b/9z+n2OiiGGCZE9ajfpOhfTMWN
      +TYTZ9hiKcEnwjgt6FCDnyHNDKJi4jS5wceIuh5YS8w6BDdIgLhQY+o93O03sdUWsv0esxMf
      Z3zux5KDPa7dyBowRXINvfdGfFSViIjFEFM158AwpqAoTuO1RFWxAtModMy8saVYIr23fofp
      yU8xGz6E+hrEIQSsVnx3lPFEv1nQ4wBuVZZzrl1TxjInaB+6Bg2oFFhjiTEHI+koNzlOI+c7
      njteeMffoW/W6LsT0IyQVqV5bubn6ylZkSbNR8XM7QlI9L0E+A/UWmKtweWpWx2bwwpqH6Yv
      YAgLeTVDkkr0TYMGjyOgzYQcePy88Hf+9qd45fW7PPXiEtZJMhhURWOkly3jY0WIBpN1E0TE
      T4iS4yS0PI/W90EVmgkh5rhsQIgxicWqLtItEcB1EJ0ya3KM+pRkxhGhPoI0iouCE+X1l1/j
      2n/1qzyMBSz6Gy/zm+Z/5mf+m3+XqIayewbEENUxq2a4ll/hKUANBZam2kJokhuPySHPia6D
      lyG5tE27CEEKiBVGDNGUSDSJg1wMGffOMLj5MsX1V3Ba0202kxGfWELWR20JxpBbh8urHVys
      0nEyGwGKZiVknfa+3XvzDhzd86jAOO5lNc1/Vxkj1Saln5H7SE6D3RKK6TbZ5DbT819gli9D
      vZNgsWFCNMluc0+TBegcSKcKj/YFbJ4SH0yb3DnSniQkX61AaDYw2SlCVLxPMblt9Y8yV3LM
      VlwbPYfmFdFvEZq7iK6msli+krwDrBKDIVYVxnu03+4XsU6uJ612zlbT8E7t+IzLWmmVH8ZI
      ZnM+jlkw9hQUx/qK4UufWeKGnzD1HaLNUNJp6rVmXG2C5hwtV5iHjHM5cGv2QzuA4/Y84hzG
      5AQvC5Eu3d+bIXqC6VH5bTB7FLGPotiuw9oiQSBil7d+9yWWDihuiAh3f+9PyP7uf7YIPcHi
      bMvvxTEaTyi6JZNJRdlLaymEMbOZodNJPxe0wjohaI8QA6oT8swQYwchUSwxXaKGBOQzDlvv
      Uj3z8zTT29hrXyWva2K9i/M+PdW2RLMOTvwU8VNopkj0aHcNfIXU40M3g7Z6kS7iYAYubdI5
      x8sIo1b2r5c7JMwQI1RkFLlBpcC7DnFwkmn+qXSUNeNWqjy2riTp9nx2eH8fQqMnxIbczCA2
      WGZoM8VrjjEZTTXDMCWGtuYrFpeBs+CbOoUEeQeNgacGq0xjjVgFq9isS/TbGI1tBccjIe2K
      seileLSdjswaQsvpPdkzrBakI9XC65PkfvlhfNPebxhiW2Z0xBb5GNv5tzpDTMqdIslUxNgu
      g/wUhXGQHW1xOpYojhinzEzDVrjBcT0DkmHb3CDLDpQchcUDYHRCMD2UFpMjkZneJkqP0vYw
      0kN93TYJU2qdHbnfANwOe2SuTPAXWjn5ti6sClev32Fj43UmkwmPPfYod+7cQTWysXGXpaUh
      6eGNjEYv8xNf+DFy2aaur6PyCNbsg9vSvS5SE05Sjrh99AVuhIJd3caZjD3d4Yg5RdcM8HHC
      kizjXuEMnSJyYdkT1aFiU9v73oWn4CkXDYf57jDXjbE01FHY85ah84gtGZkC63cwAjuNXQDE
      vGZkZR9ipKmrRQ0qMcoynM1QLQ+8thKjxxJwJrYJr7alyxIfTVsLV7K8A5Q4OZJw5y2U09qk
      Dymu7bhagwm7GI18v8p5rOyiQTB02fZ3yayhlCGmYwm54ZZ/jdPxXLsQk8bkSB1XdyuWepcx
      onSky0pYo8yuMWOJPofZax9liKSGYAhx4eM8iVu8Os5osIgKRoRVB9gOsdoly45AGCGSiDRN
      s0s9fY+sfAQXdymqW2jWxckyQieVZNXsc67bEcIUH2dYTRUqNCKxZtmeb8VnA0qRWF3GtQk/
      fPLnfpTf+ke/x+mriXOxI4Gn/8u/kYB2YhN4UQUjKRmNCoNBn7Onj/Hd177HlStXOLa+Trdb
      krmMxnvKsuT40VWuXr/Brc0dVlb6mAf0MURSZY6s1UDNCi5znU29RiSk+VJHTp9XxzcZ5htc
      ChVuPY9Mo7DnDV2b/lKIqSPZtBS2Yn5sugIfUmnMWksIDcZYpnVFE9NCW8l8SqBcQe0jE28p
      bVw0X6ICpkCMpZrspjgVB+rJXIfQ7LE1eQ8TSxozwmAY2lVMPsD75NJuXEYTLNHk5NbQqE1u
      ikSiKVJ5Tw0+KKaNM/d0zM3mezgG5LYgakKsSizJOc5WFJZN2v2WzRBDZOb3HV9E9llYGlMF
      442x8vbMccrVlMVlUhPLECVykk9+pAW/6dtyqRpWXQ5oIosTFsWFN8aGk2XFcovXGgXDpZkh
      iuIkEuOsLUhMSW48qe7vnEMqGMYSqyEB0Gye5A9NMhpP15XypGiWmdodMjwd6aIira5mwJkk
      StvUVTKu05jyDYHB0jF+9h//L3z1136demuXR3/yczz+/JOo5AQFCVUraCwggeinnDx+DKMz
      Xvz4ixSdPqHaw4rn7KmTiM2TW41G8uUVXhtnHLHCu/ERdJQzdIYL3f2uuzEQ/BSTlRADXbPE
      MDvOu83XAVg2p9iK17g6+RhPFXcpXIkb2siyjUyDYRQN1hk0GCLCN7dzvINP9msy18E2Y0rj
      UzwZHU4apr6kMErX7D/VrugSZts4cfRzx7RJ2f5eY+kWHSRMiCFZI5mwt6hSxHqb95od/sXW
      Kl9Y2mPPfJfNyQk+P+iQ1QFpE5/YijbFrIvfuwXl8YWRNPOTQz2SDYghx+DpuQ5n43NoWqJt
      1QJq2+d4adiYzJjmJV3TS8rT1mGkwlpL9DNyWVu00bEFddjGsMxIC7ZnT3KquEbAp0X8EUZU
      ZRI9TRTejN9GxGOrPkflHEdkgNbCbvDc8g2ZRM5kJVYsIQrDLONEkfH9yQZLruKkWyaGQDRJ
      Mc7lOWJ6qVrllnDmcTBZmsd5KHXgvdi2+pRJRaY1Pwgv85B9nGWT4XSKV0sMNdq6TEYpMca0
      Jd2IMY7hsODLv/jvJPNBU2CoCJrMD60NBIHv/eAqitDrGsQ09ErH3c1rjKcVDz90gffee4/h
      cMjNWzfpdLrMqhl3bcaTp3vcuVKz1BvS6ypT0+VyZRkHw8VO01o9hQVh/pZ/i/PZi/RZp9IR
      hemxGS9zvLy8uGZnXI41hj6k5oexNI0hxoZOHnm0G+lnDhHPuFZEE2/W0jAJhpkKxYHyd9SE
      5f6TvZy1XHloUNKJkYghz3IkjBL0FjCuwMQpMYx4vXmH7+5e4I4/wl9enbEh32HXZ9R6gq/s
      bfPlwTIuAi4RwUMQYjEgq7ZpyhWi7afENY5QbFr8zSRJc4hFfY3TGWpyfLAJcyMOE2aIFqzn
      NVcqRcoeXZliYuoWhgiBMT7u4e3RFB/HKbf0CkftgEwMTZD7qmf+T8EDbfqGUZxyJ95iIhuA
      kLl53lWxZNY5WmRcqyaULvDJTpb4zSo0QbDlEsFXOJuzjOF6lXPSQfSbhDAhK07ha7BxDGGc
      6jICaJP08k0PJTLSPbwmiIlozmqW5rcvQ56wL6AofukUdusqLD2GoyJKmyLHGrCtEl965+/n
      fiPzEhqRvb1dXnj2Kb7+rVcYjyeEEKjrmqZpUFVOnzzO1/74T7hw/hzBe6bVFBlv8kdvbnL6
      1Cn2Ll3h5InjPHHxY0R1jIPlq3uGZRN5stegomAdDxWfYDU/wYnBGUIIvL3zGoJjrXNr/wGQ
      WC2aMpEsoTFjcjx5fpjjjCSpcD9m4OBu7fjqTsbzg5qhSy7lBxXnbd4h1DOe7nsqzWjGb5MV
      J+k5ZWM6Y6XIMSjNbJe8s0ScTTFiOW5X+YNg+dmVGTf9NmKO8VgGNt/kcr3DqzPl2e45bNgj
      YlFSzZ1QEeoNyI61uPFUIdJmD9r8RNQj0sVTEEPE5SW+UYzJMNQL5eKzRcOV2RjN8uQ+IyQt
      Ghlg5A6TeIOGmplOMBgqgae6Nb3i++zdgwD12hwq/6vCrhf6LsHcbvpNtu2riOOBeJSoAmI4
      lkXsAcW8iEHyuRqEJTQTZsZw1KZQz7plrNvnMj8I0zXvr+2EEd8ceXI3w9oxje/yjBvSpyKX
      IrnMA9XaRfpv/gb18BRekmKeyn5HeI6NEDnQ8zswjFaLDUIwPP74E7x7+T2eePwJZrMKDTN2
      dkccO3mGjeY9lpYynn7+BbbcAIq7HNEZa7eHXDh3lh+89Q7PPfsshdNkfSQwcAXPdmsC8Mo4
      45GeQWxBHWf88fZvIMDArHOy8zCn7aPcri4TW6TA4bk3ya5eBBwNlgYiBHpYEjH7a7sZD3cj
      u9ERmoDNMkoCjabdqcxKQjWiYyylcVi7ilAnpKPtMo0wMMkvNgaPuj74EWt2hb+xXlGQs+aG
      fGXX0nTf5oxbZ+ACjxUPIc0YFYO28oeadTGhwrk+EU8MoPiFw2TUACZBAVQjjoqqeo9oPobG
      BrGtQasRtK2OnS0a3pnVTG3JiktVi7zskNcr9FkhqGHZJsjHtQhH5CZ3zTv3LbKDm0JU5fXq
      BjvmB1B3ybRLY+98IGZfVdrqC0SNpDM0A9vDGhBjyPKc6KHrlDtVw8zNKKVkUW15v92YFKq+
      MVF63deYxR02Zw+Rm0DA8O3pHhfyKcu2i7b/srOfpnf1jxid/tQCRp6Afg6XFa1mmUmk9Xuu
      K8EQ2soPkU4OD507iQKd8ghGImtHj5MVfd7ae4mtiedqJ1LVK5zK32bo+jz6yHkiwkOPPI4g
      +KbCS6JZzgUYgunweJ7z+vgu60Te86/iTeodbHKJzckleqxxJDtBKvSa/QcgJacZJswWF7BA
      2BkleLhTWyorLLnAei58dbfL8Y7HyazFuAhGBglOjCCxpgk1Gu5i8zMsZ4EY61QpygKx2UXy
      4eIhKNvQqC8FXx4K3wuR3bjLo+4TSDOFrJ/cWnR2oB0REzBNG2zWR3yzeN9JTa5KrW9XpCpW
      9zGSW3uWTNmMTTImB27YhQLerre4Pe3zRKlEb5mGTY6YXvq5ueCVvcFdef39lvDisyv1lF37
      vTah3iWw+wGy3IfHpfh9Ap5z5tGEG5JAiCmTQSMSRqy5I3QIXK53KKgwCFdnhnOdjG+Ptlgp
      lAtZxrGsm/gMAnc37rD3W78DOmX1ixdhZcSyrVm1H6PX6fD6bMI79R6qwsRbluwynx/d5uVx
      n48VU0ShlysaQxL5iuOktXwvfIP2QVysKUlFEFkAPlC1WJ0CPXam56nUcLz/XbR7qZ2zQXrY
      TE7wiVzvdILMiTd5nzp2ccZxZTTmSnWHT0tE9J6zVWDMBmO/sfiSS28QsF1e2/VYMp7o3k/o
      2KkNNxrLzx2ZEKVE1PO54ZgbTYc/2O7xb6+n+DWqoqFOMhckmERQjxWH1QpnYBpYKEfHehfJ
      0kOwMxvz6l7OC8Oanst5kueIpsRp3Wb4Y8Sm9r4RUJtBa56WVKID2mJ5QkxANm11etSHZGZH
      4iMrgrE2aYmqAdNjz9/FEelIl4fzDu/VDTfigBNhkmbPZMwBX1OtuRPefd+Fe/AEWHcl15oh
      8gAl5/cbsWU9nTOPIKROdlBoptcJfkTReRhxJZECA/TdCo9Kwe0wZhYNHx9aBMdfOLLEWMe8
      U8Hb1S7ed1jd2WDyt36Fj08T1OHSP/l9lv7ef8LRR4+BBrrS4/myOJzQq0VV+fhy4LdulTzS
      bcgrOJOFBc9ZYgDbQVrif+J8p5W3OBRUE6yk3QGCWkRMgrhkwjOdU6xmNXf0Itt6lyVZYUnX
      iaaDkYQh8ih7eodVs44VJfiajArvSx7peCqOE3d/wKg6SpbvJ7zzsTVbo3BTrHicSo4PNWIN
      T3ZGvDm535lENdKI4eFug0oGscaaBFY7lnl+5sgcVajEELEH6H2CpeicQprtxde6NjBqTwEj
      pJMgG+LdkF2teXmS84l+jTNLGJ0tQgUrkRAmqO0nFQdbYjVVI5BkuowbAB5rIhiHaMC5tHg1
      tD8XHYJHY2A2uoKaJXJr6NoltnSLOm4zlCWiu8Gq9PjaqOJkqez4bVDljt5gi5sEeZA6Qxqz
      mHhh7zR32NAriP3wix+gZu6obg7MpVL2ziUMjRgiKawLTY26AieG4wdYc7OY+AMDGfBMqXg8
      M2q+/r/9Y56dVouG4wUf+fb//bs893d/hfn2bcUddlEQcCZxFn56JSkqvLKXMTVCr10yRpTg
      pwuMYTTlIjmej4Nd6ND2ne7WDa+Oc35ioDgbAcuaOc+qPIqYDOccdTVLBhrGkWEQPcZu2GNo
      +4f+JsDHOh1yDEfDE1yqRiwXdw+9h1F1isftUb413sFpDGRFF5UMr31GPvKNbeH5wQ5NfZuy
      c47oG451MyR6GgWJe2B683nhe5OMTw2StqYzgo8JTz/X/1c/QZFEHAEyA3VUJt7QdXHxEKxm
      Q7605vj6Vo01xaHFPx9WIkFDuxwa5uQXE8YtxNhCrNr4tFjIBfqYHM01RtTkKWSSpErciCYg
      Xaw4woCRbXi3fpdTnScxPvKsfY9vjtd5zwY24m2Odq7jzPtXeVThLX+TS3Ida3c/FD93PrYn
      q3hxHOsoxloq6aJaoxqSZHuIxJhI4cYYfBRCSHlM09IZReZo2P0hImRkZOTEu9v30RzD5hYR
      gzEZ6u/3TwCYs9Tm1/N0v+F704xzuaFsT3R3gIrZPCgHaUvJ8+aYhorL05wfX55hpUvM+uns
      izNMnKBapoJC9GirIyUiFFERY5noOHkcKLDo2aQu98WhcKJ5nmvNlJv6Ft38Fhvjk3xucIKj
      maUsaoyRgDZjqmrGrcmUox3Ds0uGaIaQnSBKkfRZpKDRTuLrtk2tEFMoc6FrEo7H5ZgWLpxy
      ipI5vFfumYx9oREWk6rNLpkVPrPebdGX98/fHL+3G65xlUtIqDBxhBdhoiPElTSuZEPGXPdX
      W0mTFJJo24RTDCrzDvEgAa9oISIS6AfLhf6LSD3GaE1wj3A7rPNoR1gtb3Bjeo4q3O+rBlD7
      PrUfkNs9nNv9SMw6gBuzc4ziMqgSQsDpBK2vEKavY+MOjd/D6Rgbx0RVrCtweUmWZUlC3BUY
      lyOui8sKGrp46eGlS5SCEKH3yRdo4v4DElUpXnwBEUNdV0ng4EFDDKKxFbVtc0RV/vh2YCwD
      wj18YiOeWjtt1e7wiJKUJTILK0XkcpUcXHxQiB5Lquu3bXswjjt6nUoni6ZkKR08+6dwSu4F
      l5cJImkyBs7xZKfklD6NnXyek+5x1nOLZUYunf0kWIDNxvBYMVp80dkcbXVZQrA4psRGsNky
      tRqsEzKTsS5jjAZQiLELIqlSEyeoyRMhRTwHvbn6NrLjDd8bZ1zsNe2E7YdDkvWJfu/QQxA1
      gZhMGHFdr9CTiJntMorXEVkCM8D7mt3mBl3XpbJCZQs0pEpKJgHVQKBMMhoCxuRYDnsDYEve
      25kyyLcp6fCD2RJHsm2u8jK59Zzuvs2N8TlO9g/Hl1UzwNnZIReXjzoeX3kZANVz932vCsIf
      jkpO5YFO+SrHeIquJMkW9WHR9Z6vtiZGchmn+J3UoxHX5cVf+AX+eGOT2T//LYiR7Ke+yGf/
      /b+SXNppUOkls8B7wxebYA8J/pLu5cWu57Gu5weTnOPdAZuTCcMsspbFREUUi8376T1GhzGO
      GBIdtmlmGOmwZB1FW8YNUXGZYV/kOqamWlBUAl6nYPutojjkDJjKjCImcxZxferpjF7wCU0r
      BgNc7CmQEUiy+UZgWZcPPABG+MY055nh4Zs3r+vOs/aEuU/1V43JnsgdgEL7eoorevimxtFA
      nGJsL3FNDwolCSy5yN1g2K4Ny3nL9hLwzRSb99BsQGzSQ5CqAF1MSGTux8xTbNt3MFtfo3/u
      k0wo6JmMN5uXseI5qecIWnG5/iYPZ58kdzm+SXmL4bC4rJVAJLXdAzlNgDenyjnWceYSwQaG
      xTcJbXPrwZUOAPlzLf6D427teKiXWKDfnJ7lR4YTtn2OjTD2wlJb7kyvrQ8u+BOIscLabmrg
      SUDDGCTj07/0n9L84n+AiJLb2CKp5na38XCsHiZUs6t0SaXZg0MkcY0vdmuisfSLwJXa8ofb
      BV9cs3S0YjIeUWSu5ePO5y8Qpt9nas9wdbbCM0tgnaXIEgekppswQyZBq60VTpgkzmuNSbRU
      m9PEbbrRgCb4tHOGoigwfgIuTw1PXy/OoHT/53lOs/8AGBH++vr9dvTQ6veL4OPcSI72j9lk
      +hz3myuJyFESvN9PTMIYTIegaZEdnLyzueel3YJnTc3QKUET2F/r7VQdyobEZjd1dwlt3Tfi
      Z9fpxkizfILe5lXi6gsEA7f9JabxGFfiHdbLMSfMYxgVqqqmkNn+DTh4E2PFLT9kPTfshIx/
      dlv5ubUxuR3xVriOFm/ed4RnWUMdc3JTowqVX36gX9efdexUK4vaSTcTjMm5UlvEwm1veU7O
      LXocGAWbE3xzoP6fQgAjSTc1hCm+2SAvTmFpCCHQ6S3T1FVClBqbKnOZkuc5s5ksxKoaVVz3
      ccTdQqXAZWUKgw4+d0orCW84Z2uOdhyVD4x85JVJwUNd8CHj8d7caC+Na5VhUEQsnuBD2kCd
      kONTYzYGYqhTZan1NI2Q8rwIEgxqLfgZXgQjFpluoHmPBUzU5KkXBIjkSWozphW7KEeLzYim
      h5rOIpaLEYLpIlkPlzmstWw0Od+YdLje5Ill45t0LGoKL2KYUc1mlJ0enmJxetg4BbGJb3tw
      IRnoGLg2dQR1RFO2xGqSRanNUkjkuq0DC6mZFSeIKZkcexJ7913QwMjv0pVlltyEYMZYLbke
      X6GWOhFA5MEb5aY3/NPbikpGny1eOPI6Y/Mur4ZvMGbvgQt0rbhO3aTrmzVL5G4PkXsfkz/b
      MBiGLtkhOYHn2kWzaiMDG/nSkWkiCRFpGo/3M6IfLUCKM/ZQKzg3Zw6loQedeVTx9QzUE5pp
      S0KaIn5CaCpsHLcfU0orqBYJKh0n+GaGDen7JrQfcYz6GaFJ0pLduMdeXeGs8pNHJpwv9vWN
      xkF4dbfgO9UTZNmQCx2TjNnnoLsD0zh/93JPQiiSSERl1kWwSNZduNO76QZNuZKIQH5K9A3e
      1zTBJI+BWOGY4agOdIJjg41jLs1yzve7eCXRPMMMIRDpYbUhSGTFeE5nnqhl6h5rwMwJMa4P
      zS6zWij7q8xGHtfCXxORpEcIgqFaVASOlx6HZRwtPcZE6aBxhpoCP90k664k+e35zCgoOcXg
      aXa4w1KsyDLDql3lSP5T+KBshffYDNc5Yh6hUIe2DoGLy41Net+2ZMVFPjOsU3NJlGivciXe
      y+o6PESgl4/YrE5SmFky1/ghDV+f4pGs5TGzvwhqhBuV5eleuwAkIDa51agkmUk0MKvvMOEm
      S53HmYMorO1gO/t5hck6NDEVTlLPpnXHkTknWhYPdIiCc21dv5W/f3CVqK1AtX2bC900J8k+
      SxjayB9sFjzc83Ry+Fih5MYTZN6tT6exuLZ/YCwxJHspI6nxN38dA2icEVURIjEmyDsIduca
      YfnMwtwkxNRZF0loXx9k8XcOtcpE4L1GOO8TeOrtqePhTkinQJiCwMmDisaqaJihYoimgxjT
      0tRSTbiajrB5B/womethcH6XaDpELROhWj0nMkVFaELFyBv6boaaDhKn4HpMd98m75zGFsvU
      0x3EFOTdR9EQ2GM7vXE/oYmG6KfcaBzfG5/mM0fPk4cG24pOhRi4Hi9jxbIeV6ir9+h0LyIi
      PLNkUD/jFteo+ODFv3/5hr4dkWe7f/oPf8ghmrMUHuPokSHGHHRXgFOFp7SKa8u6qG81evzh
      Avv8b90XuB34nhhmccYg6yGmQ6j22vLp/NoO/HDLwFPj2mqe3Pda7R9FjMVLgbTsrIXOkyhH
      i4KjZQu7xmDFwj3cE4MnaIGoQFSsSeQkMQ5ikxqMOr++hD6wNidzGUhqfrpqh3r4OVSK1DXP
      DM5I4rtbi2qR0APyABzWTmP4ykbJmouMrXBeY4uteQDMV+Y7UcSLoKFNfBfZU4Ut+1TVBBVP
      mL1L1j2PiVM0G6bEq65Rk6UusU3H+htjx/lySidPD16RLSUN+FhS9FaAFarJLmKUjhkASiDJ
      F47NlDzfY3l6Ets0WCqaYLF2QbtBYoEWq3R7Z9u+QUNyPJ/S5X5W04NGVEMd+hRu54Fr4c86
      pL7Io13BNzXWlocWdmngVLsBeXGgoV20gSBZ0vo58GbE2ARcm2domvD7GjXNXUwhq9XEOrP2
      Qfo6/z9rbxas2XWe5z1r2sM/nqH7nJ4HNIAGGgMJgAAIQhwlipKKsmVJdlJOIlemSsVJORdJ
      blzlm8SVi0ylVK59kcQXkmVLLElhRGvmYIkUBxAkZjS6G+j59Okz/dPee6315WLt/z+nGwBF
      Wl5VDTRwhn8Pa/i+93u/9wXxNa7bbyNmWeDt77t2raFJCs5zMYo5hTyGhlY3C2kVqMX1qOsa
      ZRQ+JEKij23/tmiUhAVpTbkkGKDQpP4zcHlJ6TKqqqGqZkTfoLMOnWaC9zMaibh2MwvKEkQR
      bA5+iugco9X+Ahh7xR9tdfjMYMYkWo4WNnH7s4Jm5zCHEgAAIABJREFUNlmUru+54fkNKmjQ
      /NWu5lhmebDwqYaphHqyR3d4mL3tq0Ak4Ig6Q/sZIg0mH0K9XyXOtHBhYNlqSvZmMw65gGu/
      aGRGM5mhsiXK3hJVNeMwy8maB42VKX3dpxtLir5OR7iAdgUqjFBoMpY51n+Iq5M32Zhe4Yw+
      T6lXycsS1TmEn40SWPUjZrWIovYDcrv9gaHATzqUWKzkZHFIX44mV5V2m2uiYr73zKedgsRt
      FovGEMmSeFXIkBixehWlNUYnVQlt9qv7SmmcNWhjaHQS31JKYbVNrYQqUUQw2QLwyFBYl/SR
      jOvQKfpITHHYHIESETJnqXWRBMYEfAgLSoRFcNYQQoSctndaIEuCAiEE8iJDtdZRSi0CsdQN
      aFxK8kmqdcHXzCa3sNlquj+tsEWBo0HsPPfcT9SlrSJrlTwLBFoV8nZ0M8NnVxQ9VbKkPBIm
      WAWjesDt0GGJyNAmhGF+09Za2jiG0hg+udQASSgVZdLRHBtGO3fp9I9SzZYhzrAyxjd3qJsN
      dHOUvDiemt9NOh6jr1kyAa1rrjWGnVpTo3iwaOi4HGn2mHlHXvZoKp8UJqxDKZtepNZkYR48
      JPmLIBHjSo66B7m09xI3eZtcF/TsEqIMzewOb/vXOdN9iiPxUW7G1z50wt4aHWe9d/UDJ78W
      y4o+ze34DjtVEgh2pqJrd99XfdXieKT4KXr6EJiARMdSL2c8SWFBUWQotYK1yTI0+kBb0ksv
      dp4YSkaMka9/65tsbF0HBf1ymc9++liihEiD0kmJu6lT9VzHQIgJEJRYJbOJmMS8tNJU1Qzr
      HE3d4Jyhmk3p1g3VdIoPu0iowXSShIkpiL6iybrEZoK2Nk3ckLhfDTmWilldYmVKFE3QZpE3
      NqZHDAFjDNVkB6sCEbOo+0j0WCdJIVCBmBTaYIapX1pLG+c32NlNQpnkMa3cp38qPjl/ikfE
      gmoXwPd3HI8OG5bVZLHVtCEYHRt4gHGKCcO9sFeo0m4YSOoJWhoqZuSL1EuhrGaix+SxgzE6
      6U/GMU2z0Z6RHhRICNRNjdh041l79B2xkXUTsVq43RhitAxIiXk1CRSdXhuGgW8q6noDly2n
      FwQY10URcNmQveYu16pvs8tduvQ5bT5KUODiGKUMD9nz3Jpc4WzvMerxhLvxyj0ngQjcGJ1h
      kN/90J2/kAFezYiiuTx9BFAM7GVOdTdxByqsmXR5qPg4e2GTv9j9IaftEmd7T7G9tZ0QFYFK
      HaKe7lCplNzpOF54DwMt1SQ9529999usHutx/IEnAIgx8qd//hU+84kXoHVZN0rAKCQ01F6h
      wwTRGlEFxiT/Xm0SDm9tUmRzVrcLV1opEYUHrMuSQFZbWW9EQ0whTNluu4tCrqS/a71/msF+
      jUlEIM4Q6WGzLlqqpPHZCi5oExENxiQkT7Sg8WQqOYxFlWEdeGaw/RZV9yyi8lbSXjOHEtLp
      5ghSYE2i1FuAc30POLYbQ98GqqD43c2SL6zMWHLp4F04vUuzUNhaCMMCtQhvVIE7Tc6n+5GK
      GQbDbtjhjtxiGDOi7ePKFb51K+eICxzKLS5fJ9ajJK+dDxlPd1hyEaMSU1Abh1IRHwyHCsO4
      nvLK1HE4C6xlDbHeSwvJ72FEyPJVTBwvhM6a6LEy4YZ/l/fiOxxWRzkkxxjY4+zJDjHskbWO
      6UZZjtmj+Mk25zofZaU5xqXZdwl6P1FrJKOX/XVJr2B14KNLXyNKYBYmizZCBDqs8MTg07y9
      9xKbXOKsO8f5wdNU02nSwNRlq14NwUeUBWMUkBEXevyJHaol7dpbu5scOXNucQVaayazPUQC
      xmi0NS0L1qCNJTeajfo2fVaRpkqq1qFqDStUwtl1jqJBK4cySQY9+jp5KsQqCU3FClE5pQt4
      LRQ2JlKi0MLpQlQplNNaU3vVJssaEZNoG8ZSoymVovE1WjlirLBZBwmBoEq0KIKP3JKrDO06
      ZWx1mdrZGaLCNwXDuzcIUlBu/jDlIyp5M0u5TOit4wencGGGHu9APUsLoKeFaAxDAjve8Dsb
      JZtotmpNP1OJcYnFyoxAxvXKsZzfIadsM/n0ZguzyyCWCJab/m3GCo6bh+mJY1PGLHlLI4HH
      D/ewdQtFRUkcIhTBjxhmSbEskCE6o9YVOQXWKWIzYmAjj/cDdxvNe7XhTNvID6QXdsBT4KDy
      9F3Z4EH9GJV4BvkJxs0tNFMG6sT7pu8eG7w5+jNOu6d4dvhF3tz7DnflMiFaSjt93/f/qBHE
      43SGUYZrF28Td3LO9c7w5cnvcFeuMJCjZB24tPQGJ0+eBD9CXB8tsRXbytLOrHVbJGzaG4tk
      rkw0E6vpFH1CaBNZ0q6a2QLEUVdTqHdQs5o4ydBrfcZNzdvhW+TS5bHsUxhXABpjk3sK2rQI
      U/sAVVpEkYDJSpo6Sc4HrxLdQBmsdql5yrbyLa0ih1Xp9yjjkm+DKLROfcISG8SPiEyRuIz3
      FUYnqyptsiRLabL0M3gsSSVDSUiVbUgK3rM7DK/+BebO64Slk9QnniW6TnpmzQQz2yab3Ka7
      fZkoisYUUK7s5wBzS54lF/gHR0e8M3N8Z5JzQywf7xcghkCBIrALvBu+icXxrP1Uej4oHsyG
      kKWCy2G/QpGX1HKXEXd4UD2GVh4JnsI6dNFNkKZ4FAkLNgSCHyHFYcRXqLjDJOyRqUNo5e+h
      1q64SDfCG5OCZ9qaqSiDIlVmXxs7JkHxQE/zxliImeNCvkq0fe7U77CiV3AHdPQPDqMsmcqY
      hBv48TKP9J5lJo9RxQmjvCCwxHZ9m4m6m8wwPjQRVmS6wEpJZ7rGicGzrD+4zmg0Ir/leNA+
      SlEU9Ho9rl67ximT+g0Q32oOCYQEJcaQ9He02qdaBD9DKUVsDB/7yNN8/a++yrFTh7HWcuXS
      dZ57+pNoLampRPfQnRmNTZyqsdpBRJipEZNwHTtdRYCmAW8MypNshmSWEkrTViRCjZ9uY9uS
      gIkjYpwS6dAoyNRkYYU1H15yDLMkHymzxAQVu7A1Qhs6sQdK4VwHRFB0QRSd2S3cnddRElGx
      YSAR4qtJu8pX6FCBnyGupDr8BPrIE0yPPM02NWUsyfOCqB0x71P1jyUeWJxgdJK3OQCDyqJq
      qxWcKxoeKDxj6SChwen0ICKGfjZiFB0Dte/DpdodSosHNJTHKOIOHbXCjmwmCTtJH6p8QDmN
      iAKtacS1GXuF6CQPnhS/DMssEZVFxN8Td4tApuChTgNKsd3KukwaxRvT1LPsNERteK5veXv2
      NO9WlsO5sFMd583GcNQFzpX+ffH8QC3xUfNxAiElZNO7SFS8NrYEs8vpruaB3pMUDKjVhJ1m
      g6nfIxLJdZfMFvTjITp2QNcsYcl4dXyFTllgreUHP/gBV65cYWVlhYceeoirV69y6NChBPuR
      pH3vZ8LOu6pqqfj6TiQqw0d626zYo0gM5Fng8z/1GX74+jtUAj/zyV8gy3LqpkFCQCtLhUac
      IrOOTljhEftJroc3uCHvcZOrRAJBAse5QN+uJTSnnuEsqdFcG7SK9+QhIQqz2RZZplK1Ht53
      7btssR3f44R66p7NYfE3pbHOYAjks9u4ZhfdTLC3XsFc/S4yPAYI9I8kSrQpiJ0VouvQlEPq
      7km8Tri+md7B4hmqjBArfKOxba0hhdVpo4+6SFFNuoCkqVI3Cmek5VuY1CPQzDAuMA6KSVQc
      doEjZpll/wzdticAQGJgW7ZYMusEqdmMlzmmjhCJ1NQECYgqaJpdis5aqtxZm0RkFYSowQ0x
      fpbkEdv2SEWSOcQuoeOYGGcYMyDopA7sWn74jk9iJ69NHaLgr8Y5T3ZqyjhGTIdzuScay3e3
      G44VwifKik2v+dZuxqkycMSFexEDpTBi2W0UfSu8NbY8UAZm5jrv+cu86wUlhkKWGNpDdO2g
      hftyRs0yUb3NRnWVS/4HNHqPTS906yc5c+YMn/3sZ5nNZmRZhrUWEeGll15Cice27Z4hgsQD
      lOs2ngsEJH+Zb23+LEGN+PwwpC48ZahUjzOPPEkMDTuzhswn3lSUwGgWeGMK6523eUA/yihs
      cJVXOG8+zo7cZRRvYlWSbFekGF+wiC4RoxKvyDoCGdF08UHIbQaqR8edSxPa5IS6pTGLQhuN
      UprDTZcj1Sri38FON9D1eCFkq4o+zPVU8yFWG3SYYe68RTj8KLuf/6dgdGIHNCMEjdKaGJLa
      MySdUNPKyyuJBJXTqBxlwFrNXKAjyXhqIj2sUahQH6RDR1zWIUaPiE568CFJjPzJ3YKbwfBz
      wynbtWZYKjLptsWnupUzhBUGgMfiOaX3Y+sz+mEUFkHjslX8bIRxxQIWTDz9jOhnGCrknt3B
      QNzFB4txg1QlNGVyJCRpTTYYTuapYeK5QUyJT2x4eeo4zVVKW9AdPEwz3eb5wf5EX3ORtWHN
      q2PLjrc8XHr2GsXACbOo+OrdnH4uXK8Nz3RqDrsIPMCKWuOd8BojtctUbTKNm8w5fp24wm44
      i9fvUJjpwpDs6HDA9GbN17/2jUTuwqMRvCrRNKytrSfV5ghoRzRZKiy1Q7dv0Yuiqs7wy2s1
      q3mBaJtCy+io6inDsoQs1QNQJvnhkuDTq7FkxdyiMOfxfpVCFWzHd5lQM7pi0VUizl1Rd7Dm
      LsZoNm5v8MKzH031gtk2Vmuy/iFyE1HjLXS1ia4nqOkWBI/1k1SBdiVSj9Pp7UrE5jTlGrF/
      BJ/3iXnqXIshEO5uMfrjP0flY3RpkWuXWfvCx9k58jEUhlDXuEwRyFo6Q+IMhTlnWmeJSyQp
      GpjEbZR00aZDiBrTUjHEdNI8bHZSs9RBLlDy4Up9u16V/Pkd+PRKQRTPc8MKHxX/707JM92a
      3SbjeKYhVMkaNaYSeJrk6n0dRR16RJW1grMKayI+NLi8S/QTgipQIgs5blFJKU5IpW5bnAVl
      wY+xmuTUYrL0+W2v7Cvjgkf6Fld08PUEtOOpTsXl+ixF5gjTTTAdojSosIs2++7yF7qe243m
      L0c5McJaHbjaWJ5frvnhnuMTg+oeCkhX9XjcfIybcpX34jsLmvR8rOY32Dkgj35IHuBc/2ko
      PfhWrkUCWkWq2EH8DZQdEmnYNHfpxg6dUCCxYBYCv3fL0SnGHHI3eH33PDc5wquTKV9cf5Nl
      dRajkweC1qnE733yPjNWc61xfGvL0XEH/BbaKm1X9RElZCi2J7dYy85y+fJltra2GAwGNE3D
      iRMnWL7yx+jpJqoagSswd94m5n2i7UJnFems0fROQH+NcUiFK4lhoUoxr0RrWxB9k3KbGqxN
      peFrW2P+5M0uvV6Gc5rtnZP8Su9JOnEKOkv5hNgkhhYjQWZo3Ufj8c0WYg7hVFhAwlEmGEkd
      hcEXKJ0Bye7WR9BtM32MByrBEgLGljQxcnEc6WfpwpXO6LhAwPH5ZcWSyfjWTs2xZZK8daiT
      nLd3jKfvUXbPEXUvCcsqjaATH0OpREVVAlG3q9UkowKtoNlLsZkolCuIERrxeD0lDxHiLlM1
      xmLZlrvcrje5ULyIVLtkznGhMyPGEt8IKs6SarQbclLX/MWW52xpOK7SYqv9iEKnwtl8rLnI
      mkvH6HuV4fmyYrfRWCP38p/mc0gpjqqTLKtDXIyvsStbi5f93ughBp3rWMk4aZ7haOcU9WQb
      lMEpFqS+KIosz4l6DfGb+NhwhZc4ox+mq04QgFdnMy6HIXHS41S+w12lOJbd4eZsmbf3nuBY
      d4KEBBkPypwQapQ2hBCQEDlZwjGbxIJfqzs8sNvQ332JmT7EY1uXkiuMLZne3WVwYYVvfvOb
      PPLII5w/f57r169TFAXTRz6BKEN+47vErMe0d4yocqzRNNUEo9KCC3VIDNL55ndfzuaDwanJ
      Av8PUia41pT82eYSnzh3nMOrJV/7w3f4OzbDKzDaEoLB6YygYaxHaEq6lEBIbi/KJdFjkhlJ
      VwoaVyKqwBmLNHsYFYm4VnA4p9INNhzwBzBaCFFooubdGk4Wlq9ses52LTYYXBzxe7e7FAYe
      6TTEmJSSXxo7Hio9hdEU+XrqthFPkGSapWyyJjJaeGnPcSQXMl1SGNiYBo7kiljvIaaL9xOU
      7RDqGcYoQtzhreZlltQKPTXk3XiRGZOWbrsMQXD1DiFfQUwXozVaK4Ie4mJN09Rkasonl+Bb
      uxlKwRE7I2aneHXkuRs1o1pThbZHVVLxz5tUKj9aej47/NFOmYUquaCf4rZc50p8G4Vwsvs2
      Pq7wYPkCdSiox3fQjAgsp91XEhNdmYKmrslVMvPQEnmcj5GTpOljFL62d5QjnUvcmD3A1fo8
      n1u5wjOdHm/vfJNzrFM0oPwUO91F3dpDNxN0bFCtPmalc/7ZNzd48uFTuO4ytyeON6pdaht5
      +tlfJZdJSqLDZe7euc3zzz+HAm7dvIFRwubtG/gzR/Cqiwt1YvTGOm1svkLbLnHeG6AtEmE3
      3mVHtvA01NQsqWXW1Unmor1pA0kUeQlw/pTmwoMDLr+7w0s/uM2Lzx2j19HJGLHtCAs+ER03
      1BUinrPqAppEuYkqBcLzhxvCFJxCxQofA9mCSxJSM5QWurpErEV9++J1uesVYuCZYSKUxVBz
      S3q8M2n45LKhaRqm0XC78Rx1nm+NMp4cWJZVxStjxdAZjhVJgSH6Cmf2O66CaFCmvUB4fWz5
      3Z0ORPipgefFwzlSbeGjJuuuMhnfYkOusG4exknDO/E1bst1cgpqKkq6HFVnWNYnUAjDq1+l
      Xn+CqVtN6hX1BnnnODpMaKTAqdniWt6aWjYqw6PDjGkz4eh9ie/fdDRScyPcptCHOVQe56sb
      DdtVzblOzSPuNmLXccoTdInWLnmaKYuJu2iVkjslET3dgnqMbabcuPwS3b7DxJKeVViXEesZ
      YnKiK4i2A53l5JRSrOJNkRLfEBA0F69d4eIb76CA9eNrXH7rMssrKzx24QLD1TUymnbxJ4qL
      MhlIargPocFIRcSBKeje+T7ROib9M2hbJnUQl7M9vUrUM5btWQhjtuQWb8YfAlDSoa+WOK0e
      w7g8sYrvGYrure8zmXr+r5eOsbJc8jOfOs5g0GM62kkdYbFu874ZXnzyMdOJG2RNMtzQzJjW
      Qmf7bcz6Q0x9q6ptShz7nzl3D1Im9STbM13POSXcrjW365xVnSQDj2g43p+hVBctNT1jyEzG
      xlR4stvgQsOm7qFkxrrZRbxCzJBoAzUOKwGNEMMeyi4vLuB4HvipfpUkBW3eCpkCtmDv7iuE
      cpmbzXUaZVjhEBtyk6FaxkvgqD7Jij6NVSUqplPFNGN8PkCTGIWZW0EweFViXE7wSZoPFA8U
      gYdKT6MMS/+OJ78IaMk4lj1CUZZc3NhBYzldKg476ESDGl9DVXvoeg/jJ+BnaF+hiqRrGn2F
      ZD3EloRiSOwdYfWxn4VyQNSO3aioRi9TFOfADZHQtOQ3T4wNjd/BqiKhesaAMpw9dojT64am
      9thshYdOlnQ6ySNgFoRxEylNoDQRH+4irLdmeJZMJXd4Q00VbXID9XdQvkDUCa7dfJcvf/NP
      CHg++8JzrBw7g0iyO0xTW9FfQOUqvRdpRdNIraj9je+hJpv4B36e/+ABg5+lek9Tz5AYgCTN
      HrBJr1W5tFiD51/99u/Q6XR4+pmPMZvscnvjLiLChXyPd65cZWVpyGC4zM72HUQiZVFw5Mjx
      9L7aq7JRYNtrGlF8ZzPyi8csUTSxGYNOzQNGg1KBLM4YZAVLbTX0Ui2c74JSqXspSmIOgieq
      nKiSyK6dc2NJEnYv9FJYoV1OPZuibUk9fgMVR5jxiPPd53ir+TZ3QsajxWcopYvVkWZ2E1OW
      CdlQggkN0Zbt7uWTR5coIBDFY/y0tSVNrvEqzoCA1SoVcf4tFsAsGDKrcATieBvnR8Rqgq22
      qaqGgamQ6HnSdXiimSCiiFkXsTkxHyQEpHeIpugjtqSRAh33CFFTVdcostX2dADTWcVPNjFR
      INZpJ25x7BDvNYZSyiS/YakWPa8pNKmRZgurQKsBmRG0TBFl6BhPTzeMql1GLNOzKzQYROL7
      GM+ZVQTROLuMd4d4+eKb/OMv/1NkkJCqP/zNb/C//+r/wJn1dXo6aZMuq8Mc1afYlqTEFkON
      O6ClVN55HbV3i90Hv4iKnqgsOEOSTp/vLOmPzP+0vCRBMZvN6A/6fOMbX6fb6zEcDFDA6O5t
      rl69yt7eHvrqdc4+cIqvf/0vWFlZZv3IKWJr6StBYd+YOi5Vhqd7Nc+vTPGhJIYZWZ4sgNR9
      6gC+jZUFOFIodNRJYU0bJEZC7LbSfW2PqCyjrGVaW0xbb0hVZ0WWFcm+yO+gpGrprzWl9zxR
      /DT/eusyx+wuAwMhWlzvNFKPF5r9ptohZGnxGRXYvLPB5SvvESNJPaLt6jp+/ChH1tcOJGUx
      KRovuCQKrZPhhPIVarqFbqaoahdd7SXMuhmjXMkAlZzsXUmwHapimZ1shaXBUaRYZVT0qKsN
      qr03gUN0uuc/dDGFpkEZ1+LAkiDfg00skshl8+YUZSzWHUPEENoFPOfcg0abAvH1gko9b3Nf
      NLeojKw4leo8bV0hRjBxj6iXuFM5cqupgyEXy7SJDG2rFWv0wiFHTMn/89XfWEx+AD+A//tP
      fpP/8T/5JwiRx+WzCFCoAcc5nvg/KpEhRYTyxl+hd66zc+7nE/ff9cmsTgbcRqPN3AJJEWIk
      N4bgO61ReLqvY8eP0+31OXXqDCFEut0Ohsj47nssL6+wvr6OMZZjx89y+vRNVldXcEUH3dav
      YojYRzsNj3dbU2kBsTapvkni3pi2O60OsBNKeoUl6j4SI3kYJ3fFZkwwZWusMdfZNNDs4YiE
      pmC7brhWGT42aD8rgm/yJFKrO2TFWerqClm2DrpP9J4vLJ0h+p2WtRcIzZSDq1G0XfjAAlx+
      7yZnHryAiLC7u0un02F3d5cbtzY5NXRpEjdTVDVKmj9hhgoNKusioUmnRdYluhIpl/GD04i1
      +HwVTcONKWQ60LcZlllqtLGWvlRUkkPwNJMxSmm0Sc6LHzYSvSDFtaikVKHtCiJCUAViDIWz
      0FshSkCRjC5ql+DbPInmpBcZk3N85szCTglJfsiFPoTvnkEAYwxN49tqMzhr8b5DUaQG/J4i
      VX/b5pgQcmYCG7XGypjTzkJI8PTudBfuu72d6W5qcJGGQorkMB9mBCS1JNoCwozBzluY7XeZ
      XPhVcpfj6xkh1IxHNwh+D5cdxuZLBN+ib7FK0ogtLKpayvtPf/pFrsdL9GWdgU5sgmJ0HeM0
      e8c/joozgiowfpcXn32MSKJbQyL/WTw2iiaEPYgjsmwNxPOdnciT/cBINK+2UugbdZej5YRr
      1VXWs9N0Wi53EIfTEFqZPs285Gz3KbFE1jJhaJsFnQKV2uu0sallUvfIigdTqAJYqVOHj11G
      wqil1Qa0zTES0X6KHd/Gbr9Lx2SoekQnGH7rt36Lvb09Tp48yVNPPcWdO3dYKTX27iVCPkDy
      PqGzhmR9yHJiFHxIsKa+T+I86C4qjAk+YGi4NM34WD/t1lHlyX5JJ7MKZXI0NcpkKFWgVd5+
      n2p7JtSBwp+ke1MaTevcKIYsHxBCQMUZhhl1nfPu5CWu8zZPmU8QzWri35M2pYAj4UnJD632
      Jb6pmKvCRdEYmyfHGAW16mBkwlvxZaax4cn8xWQ9Or8uYCo5Kjbs6W169ZTKHOIPtjybfom/
      rUY84SKz8VU+ce5ZfvP6lxc9CdFHXnjgWaxOnJ3GbyNqDdcq6KX37unuvI3dfJPRQ18gVjvU
      dd4m2gVl3oe2QJZcbNpooT3TtDEoWxB8nU555Vg3DybFPEnNMpL3Ya99RwSCNGT70g9IFBom
      FK2ns0VpYpwQm820ABB+OHFc6AnbteZyY+lOhAsDIZfIKbfGxWqDs/kqmgwjdfur79/hJDVR
      E3j9tR+23f6JvUfbzpcSIxh2HadOnkS7EnyFre6i61Ey2JsmXoiuRwtX+dDUSDEAm4PW+MFR
      xHWYbF7iV37lV4BEBz5+/DjXr1/n0sW3mBx7mihQk2OJmKxDaO1Md6JhqKaLrredRjF0kiq1
      4rBZwc2J4fF+SKZ+SrE7m1Hq5Pjuq03IVtEiKF3j3IH7awtC8xeZJprCZB1A05DUDDQBX08W
      LieLsAfFY+ZpclXsB2xzgmb7PfPDQOYU9fbrPgpKCaatRs95MGv66GKp39+kM18KHT1EG+gw
      4YWu4RuTDfbqZbTaIcvX+Q9/7u+x+6U9vvzKH6OU4u985Of45c/+wuL3xTjjbryFUzWHdPJu
      6G2/jrnzOrsP/y2IdRJP0y6dhphktbTQbNrPcaJobJ4RGkHVu4AjqoCWlDAnde92oWmDaqvg
      oiwNnnJxVwZFg5iceZ+Avee2W9rz8azmYl1wZxoZ2MhDPYttOTtWWY47w+XqKkvuKMu6TShU
      +i3zFzf/XSEEfNQ8//yzfOUrX+H27dsURUFZlkwmE37t136Nv/zNX2fo30BiJGYlYgpCvoTk
      XeLSkLp7DK+L9NAkpOZoEbTrMNy8SFOuIihOnz7Fq29dZrkIRFVw7UrC5c+cOALAXiz4wWST
      Z4tIROFI+U2Mmr+YZnyydaX8wTTjRVsRRJEVXbbHFRpPoeHLG8IjnRmXKsvPDCpEWVxxGC2J
      S69cThKH9PuP9n3JtiASkDgjU2ER9osyYHKiOCSmZPaoOoVp43hBiGHUNpfkqaJ8P0Pw/k+S
      /Zxr/tUVfZhG9i9sHlMnFep0ORk5Abg7G1Oa4zzW/yuWdxO9WiQJpP2jX/qP+K9+6dfYkg1W
      GKZ7IkcBWXaErh+RtbtKufsu9tYr7J77DI2fYtwQwjSBLUBUNU24TW375LEkt0mDShmNUobg
      PVaHJHKMAaUWngOgUhM9gNKo2KAlycSXlEBL5FRJGaKks8iT3m9OEj1rNvLqqOEXVw3b3lKo
      GVriolCUy4CzdshdGbEVe6wXicQkdJJArdbs1IdfAAAgAElEQVRkKEQpai8Ec4WiKDh69Cjj
      8Zjz58+jlOLixYuICNOVh9k9+/j+JUgywdCtsG2MAW2gkSRzh1atW2FGdfw5ivf+kvHJFwjd
      IXvn1vjU8pSgOqg4uYeZ2DORF3qphN4cmJWHbGTdBS5XlmmlOF9GoumhwoxxrZkFYb1IOcJP
      DQMrNuU5RgtBfBu2JZHfEGqiiigJbVL7wSMG3zosHqwyS6uz5NG2xFqLNyW+FSZQCmazqygl
      ZPkxlMlROif6CXV1DZOtoVRvf8EJ3JSrFBI4pNbvW4etgrfADXmPa/EyDsdZ8zSlFKAUN+tl
      fnv7OFNRvDh8llX1Dlt1RSOa3pzeIJFxuMMSDmMG+CDMO5BLu4pTFeXeVey177N76uep6muE
      MCHKWZzt4YwQxGCUYqYMb4RvgMAD8TnW3UnqapdY3UZlp9C6budH8oRWyi/+26r7YKM4Q6RG
      6WQDq1SKN6YyoVTLLbLksZtb21y5/C5PPHoEHxOP4+FhwbEm0LHQLy1IidY90Bq9OOKEMi5T
      h4iIJ4SE3U5nnlkd+P1xl8f7DVdnlpu7GvPnX+WOV6weO85kMkFrw4kTJ/jq177O4UOrXJ8Z
      Xpk5nuzWrDqHln30KXE+ZonxZzpE32BVJHiYLZ2mv/UW9d5d1nornNPzkrcjhg5RKbxvY0jd
      qh+HCVpbvG/QxiI642w3MQxNkcKR6Ee8suc404d+q1upFSybyN1a82DpF9cW28RVSZ24UET0
      X7MAFB65TyRM2saXtONP8E2OilOsblmdcS6HKO3viO2xHolxipI6+f9C6ypDq6fzwZpFIp6m
      ucvALtE1TzBUywRyQsvJWs8DJ/LA2Cu2mowjDjCGV2qh185ypRSn7fn296VnnJpkUrdXsXMZ
      e/V7bK99gTAO0E/XF2ZX0N0nQBTS9h0oNAUDTrknWdaHkdBglMNkh/D3naKKpO0U/C5iDi9I
      h+k0EERqgt9D5yss+qIEaqkp2xURVYm9dOkyWdZj9chTCYEIyfWj6zQxprg0htAe2RHanU4r
      mMVEKuramERHY4W0qqW7URMBp4SnHn2Awllu7cEnV6cYU/L2XvIYOzro4adbVMqxFjOWbCv7
      0WySZSuLBztfDaqdiEolZbAoisnZz7L22pfYffTvcbifoMQYA9vTirdaiDdBfwW39hSNGZBn
      mllw3Jx61vWMYe4Y++QXtjPTeJXxRN/jjKBdF0JSiAvAv9zu8IXOlCNlIDekRh6JiO6ijcKY
      kqZqX6qaTzYhxgladxZxstL6Hk3eW/Ea6+Z0G+6oFu9PsF9d3yIvj+GKcynRVMmNJfGKHHlx
      FmW7xHauX4yvMQ5TnnSfQjNpJ+t+3qBIPHytM3pqXwpGmOcUmszALx+acLU2rLmAbDVgHU4L
      QVL4JW2Mp9R8l1WoYpnYTMhnt8kuf5W9J/8Bmxs7vPry9zh89BAPXXgcpSzWFRCztGmESMYq
      j7sjmFghvkJbh2o3woPzX+Y3I8kaVsx9jcZEtO6is27iwUoiVWIdjmNMtWFUC0pF7EeeeBxR
      hp3NWxgti8l1cKWZe/6yP+qoGbQTdh47zi9WSLKHX1ieMmZEZlawZIlEFcdMyNhsFOsx7c7X
      KkMdZ4QINi8gHiJKTCQrMr4/dpwvFUWMqDaBkRiSepwpqY4/T+fav+HK6sd5b6Y5OxR2omYz
      GP7ZRo8vLk8pjcJkNbfqwMngOew6dGI7OURxIks7s26JolHl+GYMroNIctBU4vloWfM7ex2e
      l4oX+vsggKIm+tTMoqUiqCLp35BmXpQKbTsp1hcwLscfCNvX9MOAIqjUE+2sJboMiJQmgQRR
      Z0RJAgRC8kwO0k0Ve5uBTo3ia/phGhNRJmPmU1jgXJ56ctucLTd5EtjSSW1HJADJNQed4VsF
      5mNlG+6EGt9Z43i3y81pw9AEMvY1YNV8HniDsQWdN36P6SO/yA+//k2+/4/+Z9ZHgbdU4O1/
      /3P8wj/5L4l1jejEWdKuxEmqO6FT/7EyDiWprgSGWUgvxlqXXH9wkC+TuYy6aReKSm8i6G6C
      l5UhRoMnMmoUfR2xStFxNYQZNnfpKA2qwPCT9bt2beohXnKJb35w5RiEVRtwGgYMmAb43U3F
      F1caHizgXOF5ZeLaH9GsZYqlKOSqgVBjlSSt0hhSASjOlYIblM0R70Fnya+gGdEsnSC//TKn
      i8jpIiDG0Ss8Z4p9sahREF6aOFZtYC2LBBX5/7ZLAsK2GP7+WlJIGDBOu2D0SXNGJXPwGBqU
      KfhYd8pHujV7Yb8QJDLfXVukp20kj6FibtgBBaGeLq6nDoKVOaxpMNoCMcmFCHifI6Hal/gL
      hp3mKp0QAUuWrRF8JPpW/CkkDpDVnry+Q8eug6nJ2GI2fZeoHiVrBQ28ABEyJsTQ+rtpk1CZ
      6Ak+SWVqRZKljA1mdJP6yOPg91hzlq9tz1jrv8RhfZQVdRi7UL0I9C59hebEx9mLJd/+x/8H
      p8aJqTnEMvmNP+N7n36cpz/9mVS8kzGq2dknCbY5XjQ21aJU0kidK9mKUiD1wqQkRIWVbRQO
      TYOKTXqubfX4eiN03YBlUyW1kFhiZMYGN1MSrFVMRhLvQyt+9LAHkR9pQOcUpZB3LH+/F1i2
      loBFRJEbxX99rCEFDIaOhY8NEic8upKB1kTfKk2LoFSirnoPSiJPrmQ0sxGoCLZIGL000Oy2
      UBgQA1YJXkjN1irHSyrCAGTG8pmlpkXOc6wx/NJaRRDPGzPL62PFA904T6NQrUKWTnXzxURv
      osVoYWigiaY98ZJEn9FJdSE0FcrvJjVlvb/Nx9gg0mBMB7QQfYIuG3HoUKXPmgMa9z3vqIRL
      4W0eM0/iVJ6qqjqFpPOswJgEg6psmYWjiy7odB8mqBzmJ96Bf86lLMFTB4+jxhiL9wpthBhr
      YpxgCDRiW4tUjTe32GOHvbjDFd5iWR3mhD7L8ngb1UyZrD7CeGsHubEJurO4j1IUdy9vwmeS
      6Z2VKSFMsLbPXOkhiGqBhXl4c68ymyJBywnPA+9HWNtLDyImuD2KoVE5R/PUu6yRezo3hmr5
      XhRI7t3Ef6zRs4GtxrDsApYki+eBVVvtv0B1378PjOALxE8SykErk6E1EiKh2sOq2MpZN7gs
      0Qain2DmMoAHfme0BdnmW/iVh9DSLEwwDt4fwL+42eHZpZrT3djaJFke67TJqwYfi0StVqlw
      grZgSoxKCtJGIpcmlkvB8jODadvHkESCfVWj8hxDnVxw5vgwCUFrwrT1WABCk6DMFpU/uFD2
      n9eBU1UUT2SfwLbJdYxgjSFEl75L64VSiNZFqmyLWhzOKUxVzCP3Dxr72Lvap5yYDi4bIuHb
      6WQLY0QVFPRa85NIIHBHblIEOHL5VUaP/yoSPb1uB33mKLy7Lx0/0pEzF86h45TQxpta3+u4
      o1TKffbCHaayy7p78H3vsaHmzeY7PKJexLmUL0YiSGQUurw1g3P5lKG9d3Ofo1+ZyveXlSYQ
      1Afb/vyoYRR0TWSrMYSD7+/9kPSHDFnEjkaFVJn0yZooJXvz4k6DCtO2Stp84EJtjjyBe+VL
      ZNUH6/QrleL655c1q1YTQjoLNDVOVajmBvXoexh/AysTdBxjZUL0NdLKbMfgMVT86a7i5VEy
      a1axTjcc5uHN/v4agO1Gs1PDrjfUaok9WWG3fV5BFPUBvs8HPiFJfa+iMiTmNNHiY5KTD3Gu
      2eRQ2qJMh6iLhZfDfvntvv3nr9noUhFt/79NtZMYqiGJCCiteaa3xrD+HKZ+mr3Jo0h9ioff
      eo2tB3+agAIRrFF84n/977h2uGQigQ0bKP7hL/Hk8x9p34lCKYPWbnGv895dEAqzRG5W3v8u
      EZzKOe+eRZsuXizRdJi4Iaoe89at62x4YcWlZqz5H6sVViWaiFYKdefmu2Jas+GoUp/kv80Q
      gbuNZcX5hf/Tj3WauAGh2lvYqh4cQWCjMpQmMnQ/zopSlNuXyN74Ms25zzE99Oii4AFpx9yW
      PpmM6FmhoXuPfJ7I3AFm/2AUEaIZgDQo8SCRSxPN7++W1KL474/tpkmokhTIvHJMs7eYuPgN
      mvoWZeehe+5tFrMEOkhDpGAW6tYbS6OVptsZUs/GGDvveDJo9r3TfABskhuERI2IMU15nfWI
      weOco56NEk5uO4ifLsylxXRbFbqQmkgQghqS6UjQXUzcIyE8imLrHaIyjIfn08kQk2lFUuxQ
      OB0ZvPElqqMf5SVzjHH0DMurnDGPgoI7O1d49Z1XWD98hMePXwAknVA60TOCwCRWyWdaFXRL
      l8TB6t0D76dF+W0PRFplaEeWJwlHiR6tFN2dt5A7F7H13oE5KO3PJMteJIC2/+4WAEDV7mTO
      Zh9qcve+4QaEapQ0LA+MJsJv3Olywxt6JvKfHR6hAftjOEzvxU2OvfWXYCyTBz9PLVmi+NqS
      376lOZTVPNut6TiXiF9qPzL8oDCwlg5ZKxs5CYpv7OXUJL37ThC2ouaTy2BpULaDcRnVdJqq
      1cYR/IwYZ7isj1GRBfbZaqiGEBMnSjw+zDBaU8ecXreDn02QMMYo2W/maKOqIKBMKvglKCMj
      SmhDLI2mIehOIhSafmLf1tPUiIOgbIkO41QPqG/jww7anaRwPRo6hOnLZPlRjOnSffcbVEef
      pnJJpsbGMckMMaFeg0v/mnD4AuPhuRZlUmz6wKHM8M7429zVtwgqolA8qB9jwCG264xBJ+Pu
      dEotXbpOcyiPSYan6FP7FM6okCxjYwssOGeoppNEGYk+Sen7PYwGW42Q0OA7K7z23dd56ytf
      xQ06PP/vfZHVQ0Nu1JdZLx5NxDrUfTnAjzFff9RooiK/byL/deN+Dfso6cVOvOKZfs26Cbw3
      M3zpToczpee5/od7887HLXbonv/bdHcu0v3hv0Ie/kUYnqSe7vBLqzW7QdOzKblDd5MO0XxX
      JcNS34s7Lyop0DHC55f2/QMaSeX0oEpQOU1TobUiU5NEWJOIjbep61tofRZRRYtmAdIgcZZy
      i+AwpP7qGAKZaqibjElVM08AjdaEaFCtbmYU6DuLSDpJjMkSu7VtIoFkjST1DbI80tTJTEK7
      TpK3NFkyQlHJLVNCjTE5aIXTGZozoAsayVHVCMkGoCwigeiW0GGK1Yb+5T8iDE4w7p8GpWmC
      QBxxbTZlyfbZNduENjkRUdxuxkzNEY52cqxxHLY71LPLdPIzKE8q5IZAmI3Q1iY1CK3QsYZ6
      h9rn6DhrC4FJ5Hb+/oqb32N66gW+8wdf4+p/+38yjOnZ/cG//FO+8C/+Nw6tnG3zi0QtsVH2
      yVM/Yf77vtFERc+2VngHJs1PMt6tDCfywHVv2fCa1yeOU7nn51emvLHneH3iOF9+cA4wH2+O
      hKXeDDU4jbtwlN5rv8vk7OfQ/VOIRFZsW8VVKf08eKjcTw5L//PDP8u1X0usStAHBHDnzd/O
      LWHdvDMqsq9pmT48yH4fQMqF5j8fKU1EtwTmOd1Ft+w3L4raeyqfyHP9PGLibEGO8xEUMyIe
      1QrsEtMdx5i4MnO4ENLpKjHBolGDikni0CpPYvY2mNhwMfyAU/4jDDZeIgszoiuZHHoUTYP4
      hibmRN0lV4H3mhr8Mn27go6rLOsjrBZFotY0EwLdJHloLCHsYu0gwbRNhcvylv062/dXVBDa
      XC6KMFLbTGcXWXMPY1WF9jO8HfKDX//nnIn7b/bYzTHf/I3f5+f+m/8cbbLkjqPAjoOhkECu
      5W98AizmjuyfJgtW44dMovs/czto7AwuzwyjqHms03Ch03BxYjnZ89yZGqZR0THCqFG8NMp4
      blgdoLym2PrPd2q+uJSjdMbX6nO4N69Q2c32yI4cOTTk6JH1hPIcvNYPuM7kUikfvDjm3zP/
      /PtcFD8cbzkwlELJXEv/wM/O3RptmSBf8URVEfwY61awJBHejguEmLD9qU+nS9+GtBD0AO1m
      xNZkMLEvG9CWGJr7a5uLBThnli6ux5XQ2hStqnWsVjhfAYHx0edBUhi96w2lqbEoHu70cXlB
      qLuIJChZEdAyTp7FKCajMT/4y+/jcsvjz/Sxdl41r7DZMLla3n+NCPgtrLEsScaSPZUMM8ab
      NMNTeF8T9t7/c832LvgpUaWF7+JVdN8GpvHHCKx/kiGxdZ7P8BSE9z3me775nkny0W5DVPC5
      pRl/99CEB4oEEY6i4rCNrJeBcSvYOkFxuAhcqy3NgXl3oneRc/3v41tPKVMOyVaO886ly/zR
      H/0hn/zUZ7h6feN9VxKVQ0nzvil7ENl539ULLX8m/Zk3bDSSU0sOytJEkwwAVUbUOVEVBFUS
      VcGtcIttdghkSdFMcmopqKVI8KtO5nRzWNdqi7N9NCEJXs03GO2wNPRdwM8m3NqZzR8v2DVE
      ZyhpkuI2MQnOxuYD7wkSIhdkf15Ek6GqpIq9qtcYbL6K9mPGJ19k5mGnMex5TWEimU6OQipW
      SU1aKgx1QvkOJKU3r97i9/7Wf8HoH/46d/7T/4Uv/cf/E3ujKSHs0tS3P/TaAOr6FiGk5qNI
      olXbuxdpVs9hlefw519ou97S2FWBcz/7IvMHZrRHzV7/ADbo32CEtl0S8SjbSVVcJJlo/wTD
      Iby8l9F1wroLFDoiMSVbSzbyvXHG0NSLSt/J3PPDseMjvRQaOXKW1CqZyph7UF24cIFer8cz
      zzyTtPC1XSS8c+itVg11HDPQ3Xt2Yv0jdv627ouWudGzgdYOVkwn7ZrzDUAkbQ4xpt1daZaz
      0+z4bbTMUuhz8KOCg1gfOF7SSH0W912HdsR6wv/f25sF2XWk+X2/zDzrXWtFoQoo7ABBAtyX
      JrubPWyxu9mz9PRMqOVw2COFpdCDQg+27AiFPGFNhMMRUtjhCD3bDm+SImSPt9laPezhzPTe
      3IYEmmATJAFiLQCFAmq761ly0UOee6sKC5tscZwvQFXdc+7JPJn5ffl9/+//f/m//59Z+Tcv
      I4yl+fVn+bV/9o+Iam1yA4VWBIEgEOBMiRAKL6t0d/+8pFEIFeWgiZrIvAthg3T9Amr9Er2j
      X2egfXFQI9wy9RZXUbF7k+qNbHXac75cRyrJT/+7/4n5ax0QkhDYdeoyP/xf/l+++p/+fQLl
      1WuGzrNc5K5PTOyFzWVEkBzGIihF5KvXih7Z4ZfQ2TrOOb7yu/+AV6zl1ss/QTZSHvrP/jYn
      nnkUW4VYVe9VTP0LBB8Xf/60ra68NUmlRRufGBslq+78ntGPd0Y/r2eKDMGTLU+5eKZiea4F
      fjcPBDxaK3irG9NSlrnYEEiYjSxdI2gFjgn7JFNhHyEDCivQVvDaa6+hlNfC+tEf/iuOnXwG
      p+pEYYQu/QOGQBjWPHDKGVQFZhstkvutg+1gLSUsyIBC1imKIakKdhSC+06P/uNhDLPRbnTR
      x1bRITe+V5XilfJ+gM4q4wkg+PHvf5vwX77CAVHF1L/zNq/M/O986R//Q+pRTCQDrM1ZLxXt
      oMTKCJ2vEMdzHuzoNEV+kyje7akDR/WwAGkbuXmNpCKt7T7wTQa6woOpbCTgWD2T5/8XMvSU
      6KaSW8JSiIJ1t8KM28Pg4rWdwyIEvY+u+nCylTibEokMg6bvbtNgEikszkkCYcfJP+cMImxg
      haIUNaQQ1Boh3/zn/yX6v9EopSiMpuuG1FWD2H6ECRcobNufASaCndR+v0xzDnpaMRXpCqnp
      sFaMs54WWVWF2WoxeAShlDu1bC/lAZ/fRkb1YK3k/UHIsXTLXEcSTtQLSieYDkcLw9G1khaG
      paxJXtZYiC1NlfHYQwcxZkDpFLGKUWaRxrnvYDqzmPZ+gqgOSQsrBM75PKkhxKoGTg89SZeT
      lXXbeW5xztNCWuvrIAh8RCYrNN/rRLw06WV47rd4pMDr9AoJ0vOljhdTGCON85AQJxgVrIy/
      238KY0PCIODmq6eZ22YdhBCsvfoOrcAihKWwikjkTIbeV29Ih4gWGCnK63IdazOECJEjiauq
      la1Fmh++jFMRvcd+h672z+lxYHfNhuqeFmvkWBx96AasuRWsK1GypPXwUdzFN8YWSDvL1KPH
      x7kMW53PlAiYUvM7vsE6D9oTuosSXi3HaY9tchZs6UP6IXhlI5dhXY9YGFz/XXT6ok/UNaqq
      /8/CEijpkxueHdgftEZpfodAuNIT2m5/iXbLCysMzN5BQxgIOFm/21dtBSPEjm9CQFClop9v
      5RQWNjRkrkZbDtE2JQkDSpGQC3AP/Taq7BPkXeTaJcJiE6mHPu5cMRfYqIlt70UvPAmiCU5X
      4uDVAhUeZyRV5DEpKsEUHXKdMdls8xtqjfKTZNcFSJvvkA/SVhHGDZzOscISuC35qjubdiFF
      llGbn73rsB7vnsGpFGRApAROW1yVudbWIlXKoBwQyppnAnGFX4QypBheQ8U+CxsMV2Gwjj72
      VW4VIa3AEN4jeXlnc87xoTnD0A04pk6yIPahzQZCOl743X/In129SXL6AkaA+PrT/Orf+Vt3
      IHbuvJ8fMBn62P+OXNPHuKqxSIhFghr+GFv7PM547NOORJgR8ZhL/ZdphfWhuZryu7wWCWFV
      juZlbrIxvmTcIVVHlwW4ktObEScnStKPGdhRNvAu/nzgtU7MU42csNoESwMZKX1d8n6m+GJL
      cz5Leavn+NZ0n0iASqfJhn1fl2uHXsdKCJbsFaZMi4nuGsmVnzJ84BsM40lkkNIrNHXpSZuM
      dYRJE13mOCSB9dEHEU1gdAa4X5gU1PjC8O0ZTxlPUOYDr74iFcIMxv2soCyMdhKHJ9tdv32L
      V37nd9l1ZQMB3JqMOfwv/gtyadnY6PDwwycJw5i1jQ12zcxw6tTbHDz6AGVRktQaJLGi6G8y
      PTVBWp8icB2ECAj1gPS9P2Lt0K8yceN1isWnKZIteML9Nk8HZFLQMVcBmBa7xjppo/lmLFw6
      /z5hGLJ//yJOJhhTIqUkTlvovMMoG+0Tb5IgjDB5B4lhYAsy+rSDBc8LVXbuOZedM1jbJSne
      Ik9f2pL8+qwWgHPQM56jvx0acKPMZYGTkY9i3ENr2Kk6RhfkVvNaN6YuLQnQCC0N6dgd77QI
      vhhRjougt7fMwKl+zLNNzzF0bpByqFbSK93YVBekrBSOvVGGdoq0OU3eX/eTTkVg+nRtlziY
      RFlfrpdGIY3T/5LeI/8xVgT8yQ3Lr89mOBRB3KLMe97aVYfcNWOQFMw1ZsmHfZTL7ikzuzUR
      Eg8krJp2IWHSpMy644wtxr8XJ0OwJSOmBMCrchoPD+50Brz13R/SKzZ5/CtfIgpSTr1zll6v
      R5qmNBoNiiJnfX2DI4cPUWpDv99nbW2NMAzZs2cP7clpFvcdoiy6tERG4+wfsL7ni5StPaTS
      0jj/Mvnis2TxpJ+wzgtRAyBVxejmf1bBlsXczj5hLR67JCRlmaPkiBqy9Cx5ThCnTXQ2wnX5
      gzUCRNAA3aHrNlk2GTPCK0lO1vehi1UkAUI0dszlolghkj0Cc5th5FWNJOazWQCj+G8SBJw/
      9yGNep1aGlKrNclKy8rNG+yenSKKI3SpaTe3qMmdqnmOR1EyCsmPxvLdfsieWDMZbMPzVFyj
      2ylMzLZk3u1SslQoAmB/EtCQQyzQKVV15gix1lBXJUFYo+9i3u87VnLLc/U+zTDklrvCrNvN
      6fWAFdfnxYmCtLNOIgo2Jx7ieinYFw7RIgGbM8hXiaNZYqnpuA3ezwuOxjGRalEPpnHF+n0t
      gHaqokcpq/6BSqYo8yEdI1FuQBLELGWbHIojX2Rjc6SE08VrOGlpy73sE4cIhB7vxp18iTia
      Q1AjyzKEkOgyx5qCwWBAs9lkMBgQRRFprY3VQ4QU9Hp9JlotgnSKyGU03v0/yE78TTJX7cKV
      4uPER/+W4f5fIQtbSLYy6UbEYHKksAyHV4lqD0JlvWALlSpGnxXBuCbCEHtmO4Hniq1NYoar
      43tbB4QtXNnjmr1ILCdZM0tsskybPSykR3hv+H0AHhTPMaFqCClQ9iai/zbGbFK2vwGu7cUe
      xb2K4n+JNjASqWICMrrdDkEQcmN5mes3ltm7dy/WaD48dx4pJceOHKTd3Lfj+tHOcOckOVkv
      OdWPmAx2RlGM84r2k5FlOZd8MAz5Utu7EDMVD/5UYD3/EH5xTEamkmgKsUJTWEkcxJy6ZTkz
      MHxresCr/ZjjqWRvsIAIFAcbAxb1bZxrUE7sp3H+T5DTD7MYKKwxhFGNXhkRpnUvH2odTVEn
      yW+zbtbY65qIcGenRi6cdYrrQ8F86tjOQ2hFjDAa5YZkNiatzmdLumQxClDSM0c4HKmcQlMS
      kuKqOgtfLO5oJgcrcFhJXFMYIjq65OrVa7Rm2tDM2dPaBUBBbVyd3KxVZxaX0Xzv/6J/5CUK
      WRtPWolnkOg+8Fs03v8D5L5nybe5Q9vPKEpGFczi7jmzxR5yj/CgGCUQdyYpnaphyxyERIoa
      V/U7PBg8yg3rSZglioAQiaSvrjJbZkizig12s9H4Au/rM+zSyyyq2vgcOrYA4H3RT2sBbLX7
      14KAfllybXPAiV11zn7wEUm9jRQCUw6Q0jObzc1MEoVbI+JU6kWSKbAOzg5CnAErIASCwHE0
      1du+T/LuIOF6YXmxnRFKuJgFLBWK/YFmX23LZbrTt7b43b+rBc0wQCYNhoM+68YwHzoKAm6a
      mEU1QNscoW/SN2DEFO0oZWLpR2R7n0OnM5R5BykU727CRDTkQCoxxHTLHjdszHyc0hSWOG2Q
      Dz2q0oeDJQJHbh3rWrE7ETgLphL2rjfqZIMu2AxtS5RUqGjK+8V4IN12fiH/Fkf1uRJhPEjs
      zmaIOPfRJZauXWUwGLKwbzerN9eYnpqi0+0xNzvFiQcOAT4c2Xj/j9GH/wadaB5pOndtTtaB
      UimND/6AYvFp8sSLglsRY3XuRc8d2ArtaZ1FUxKJeOuZrC9MDyugoSEGm6OkPzOqMMYU/apA
      yRca5f0PWQ1K6rLGRfsBMSmzcjfT7GWccgcAAB2DSURBVCdKm8hyCTl8x7PJpScxYhfOWXpO
      0XWXqIvmDm27nRbgl8DvOKCvJTmKmio4NJVyti956NgBLmUhi4kEp+/5UkY3EMKXwH2YhRxO
      NYl0lBY6RjIV3HlucLSF43g1+QEOJprJUPo49yjILgRCBFhjsa5k03aJVUrgIgIBSaPN68sd
      Hm9kxCrBWIt1ObtFzq1CUoqS2+Iit+xeHqkpHAHFnqdJrvyAzoGv8vPMsEvmLNRCvrvhWLND
      9kQhp/pd9iZdtK6DSrG25jH0bogxOVHYILfw436Xo7VVnDmOdJlXvrFgbQo4hKoThR67UxQF
      cSUsca9mKiMiXIlTDYwe+Hg5eLCYihAyotWe4JmF3dxcucXq6iqtZosgCAjDkEaz5c9BAuof
      /FuK+cfoigZRFGHvUSkrBWg95C3xEPa7v0++7/MY4elsrNEo6Wi1Whw88tB4I191N5kXW9bf
      08psu+m2/qkgpMwHDO0qy+Yix6JHKXQMaFIR4mvBLF02aIgmMcsE3e/hiCjLE2jqKBSjBEXo
      Yubl4l392LkAPuXkB+9bzyclTsixaPZaIXEpdAqQce6LOXyJxD2av2YpU7SVJakiQKGE6fsg
      S1eMom4kE8L6WlGgLoWPNztvOp0Fg0SIgNuF5d3hLC9MODJXUktq/Hw950ia0ysFq0azUkj2
      pJKBFrSVYyJo85PVBzCyJGkUKDVFpjW1oksgHQ/UBH90u+CJhuWFiT5r4gJdmrzQ3ksiRmcc
      i7XGvwSXgeuyXrR4fXCNVuN9Oq4NKgQHxvgid1tNZOFKqIrSt9cnfFyTwsfShUoxFR2KROP0
      ACc1u6abBMLQ2j/H0f1z4+tMVXvtBNQv/wV613Gy1iKBcxhj7zstrMmwMmDyS3+X9XWfgU3T
      lIWFBVZWVlhfX9/2bHLH5B9l353YSuT52SCxzlHRYhGJOi21UBXvh8h4lnPmp+CgoRrsNYKZ
      /BJCaXTja5hiSLmZI2PLdhaH+yHdxiM7NJ7I6pPg7UetsIJI7vTWnPNEUyulx3aPWSKc903v
      1YQQnlvAOYbGD8T1XDEfG2rqjrApsJg6ftav8XijZEJ5pKRU4ThRBYAEiULYIbvikL+RCITT
      1JXFyZA5NsFJrHQshpqDozkbQWkjVok5EO+hEfZphdNgCgSWcvIQ4eYFgtYDHInXOBAJApqs
      G80trpDYgL3q4FbfAOcKJIJM7OJSHvB0W6A5SihamKLLilhmt9oPSAIlMTJE61V/vYzZ1E2m
      Ay8jes/x84NY9d+gyL2YoCsqjeBfjNBV5NSvv41pzNFvH0bixkwf2xHD4/fgHHl2nTBscvbs
      WZaXl8dyr8888wwffvghx48fr/q/9e6cA1QMMsQYg1IhxtYQwucvpPTIWBUonIsIrGCOCkwn
      BMpG7A8WaRfXmNBdiI5havvJS5Am8IRljeCuBxZii9Xc4onMxIgaMTOC0kqSwJG7pMJZ+05G
      orxnBMNnfiVT0RaPJXiuoEQ5ZkPLlUyRWwiF54EcSyneMZBCCA4mmhUt+XAY0JCO6chyPgt4
      5M4kmIPZ0PLldrFtG6GiCvHnlze6Mc80PVWhPxbmaCMqmg1fTN0KzX0jM1JYZkTObFuAq7HU
      K9hbsUsUux4iOf8yrnGIpxsTO65zDq7Y6+xVByv8iiYVkiK7jBQFH5WLPNIOCISnatSEbLBM
      160wbScIXII2KegeOruKlAkXywW+3XP8zmzMfDi41+Mymtk7ckKfCtsrqN/6OUhJf+o4TiYe
      z+MsSRQw1DVGgvHVakMAUf0oG5fe5/jx4xw6dIg0TRFCEMcxrVaLa9eve+oX1GgnqLiQBkib
      owRkGhI5xOohxvQJIy9ebnSA1fk4iywQKNEjzN/kAAYbP4oW035hjMs3nZ/SqRccHwHPhRCE
      QYQxo3pojSDEIgj6WiKEnxBeWGLUSx+vKkkRzrMjj3YF62CzDGgEnmd/e1ImkI5SwOVhwO7Y
      0Kv8eFtVD/18EBAKv0AS6YgUBMKn+OdCy1wFbSgt4O6DInUVEnLbS3F4DgQhYN1IftBNeL61
      NQl89EJhRYJSEld4RGEQTnieTTzbg5AShORmUVITjsnQEsgRIxtoJEKlpEHAW+teqHUhNVgp
      OLPxHJmp05x+n5ZUCNlkT9kgjicBQVG0CcQWu8SVQvLtjWkO1FfoJm9yXDxJgykQkiheIAja
      HEvgOXKCbeC9obFo0acpm9umMOP7jsbjrmEDhq7PNXuJVNTZIw8A0Lj9M2TRp7fnGe8ymZ4v
      V0RgTA1deHY6tmGeHN7B2Ds3QX9zBSdT8qwgIMMsn0bFTQ4eeJbB5gekiY82aSuRQYR2fTqu
      y6SYGT+bdSXGlRTZJdJoT4UR86FX5W4is7OI9WXMwm+iXbqts3d20rLmVhi6Aet2FYnkQfUo
      xgXj8tdhVnL6p3+FKUuCemC3WAoYhSK3fInIDbFIDJHn03QOgaQVma09x4FwBQhfIHIk1mwa
      wXvDkIdrnrBIugIrYpqq5EBifL1vqbwCoJJII5mJtnz+c/2Qg7V7pcR/8Un9a5NDciuQIhrj
      kXyN9bAat7ovSQlShAjH1wVCo41CBYKWtORVBUqnEOzexmK4NvsY9Wtv8vD8kwSUbGjBe0Wd
      RyZfpV80eH3zIU623+Kp2jdwwz5hOEVpoBV6tmznoERy3SwxMAfo6Clmuc575m2eZg8/7dVo
      y4SDsWatlMwob6r/9UqdRDqeqBe0k9s0aW7VyQoFIiGMUpwJkEJhysG4znk0eVNR54g6ga7o
      7ZPNy8jeTboHvoywo4TVyINw4zkR3Gcvmts1i3FzoGoI0/M1zgf3U7/8EzQ3GER7d3x+RGVi
      K3duNIeUarAhB5w3F3hMzJEKTWw/RBYf4YJ5TO1LyLWfbU3+ezXnaVS0y1hy51AioCGaXuOi
      8tPX17u8/Pd+j6mzN3yJ7f3vxtZgeGkBH9aq6DJ2TMHqh8LCOxsRJyZKJgLHfGjoGMmMtFUh
      dkkkEgwFgpLdkcGgkSpgaSD40UbM0VpJSznSwNFU99jFnM8gerawrS1JyAhjRrbLkEpP1uWj
      Qjt9Z4HgPXMKRMnDPL2jr2vGEaGYUI6m8EU3blulzFKuiJJZppdfJ5PP4Yzv63Q2R84Ncp3i
      BCSuhXKQZeeQySIQIRHkSDbcOrfdEqjbfG7yMqnKEDZCG08TeHYQ0lCOQMDeWDPtLJfyhHlV
      UkjBodTgWMDKCGNFxXnqsOWAIgflfFbZqSa24isVd9iEQITE3esEq+fpHPq638TuPas+dn4Y
      J3ZMfvCVaN1DL9G89AoNqxlMP4C3SRWUwTVp00RbL9rhrId4T4pZHlDHqBXvERQ9THgEXXvR
      g+IsRMJSfhxw7Y4w2SF5nBk5t/UnAT/+H3+fubPLY0j5p0qE+Z3h/gOyWUhmapZzg4BdgWW5
      UDy6rYZXCcPQ5uAcViTjqIcCFmPDQmS4nAd0NRxK7wOIEuBr9kq2vxxrPR2hAJyMfExchp7J
      4R790E4jhOa6u8I8izgcBs1sGLJeFuQyISHjQh7wYFoAAZczn03eFWj0xH7ijY/IWotYU3K9
      NAzNQW70DvDwzGsETCCFQkQH0KSUMqen1ninPIMWA7IyZXWwyH7VYrMzTxp7mttgKuBvzw2J
      hKnoD+FnmxEzNYdtRByILFYmCGfIs2WicBJhPUd+mS8TJovj8591ZkzRCDuGizhbI7r5Dr0j
      Xx+LTjhGsOWtDyoh/YF1+wsYRz0EpXJ0ywvMKu/m+ENuHVf26C8+R33pNWq332Mw89A45L39
      8CWr8rNAdImyM6RYbHyCXO3B6iFqW4VdmG2SC4m9DzZ8dNcZMUdTtcdifVt/E/QuXaOxbaF8
      pgUx07Glk0kOpZrSCR6OC5SA1ULSr1LofSMqFgaP95AyBRVhTIlAcyDenvS6zxcJd08aldEZ
      YHTY1na7DhhbSFWgJSY4rI5w0X7IbZbJXUYkE0pbsjvYXzHaeZfuaqYQKiSRmvnKTctnH6T2
      0Z/TaR7ix5trTDTOMiU0c+kSoSwJmMVZSxIooKBrb7EpLrLRn2WhcZmBbbK7eZV2cYRdSY5z
      jjBQWGtYyUoagaQVRFzpC460I+ohzOucwq2yrG8xo1PCcB6nPIQalyPCCbZP3hEBlNdv0+O/
      Rfkm8dXX6R39ugcuG3uXFtyoeVJk7RMNjh33t6oOukdTNqrPgpUpmGxMvdLf8yzZ2e/x4YU1
      snACISRKaI4dOUSj0UCZS4jsHVAtTPokxkas2BtMCYtwd5il+wGqfG99QAVv3bZP/m2dYfrx
      BzHfPztm0f5MF4AUcCjRnMsCmsoxoeDa0B8U96fe953fBneWwlGaAueGlNkyYbwHRhGDux4e
      EN7kftKHHlkXAITiz/7yh8xOTzE7t4DWEZfVMqWIuNZbZ3pXi6WlTS/4N7lOWVqs1eyemmTp
      1gZzrRq7prZYlI0Dp2JcOcSl51BS4+PW1b8yYUeVCFALethYcXO4l4CCofF0gUJ4ozaCBaxr
      iRGCTR2xu+4Qtsd7mym705jSDXEiRQRzCBmCGeIL5h1ltkxQ32JQG8OihfR0IiInKlaJP/h/
      yB/8IkqfR0Z7KG3tbla68bhXeVixczIaJ8m147vrdX5ruhIZF55+JthOM4Pj58UsX/71r3Pq
      1Cnq9TqHjxzhJ6/8rzx9IsIG+9C1F/xQWc9i0XcdmlKTVN6GP+dIsBYnY6zTY6ZyUVEjoiKc
      KbZOr9tCr1tIAMHz/8m3+NMPr6Bffh1hHcHACJrB/bbaT9+EgGOpZmAE57OAprLsqXZNIe69
      4pwrcWYN6SaRMrrHJ4Aq+nS+F3JoIqlqz7foMDwRLdvMsy+2MS6uLpf0en2UDNjo9JCppVWf
      YHO1w+TUBDcurYINWV9boxwalJRoY3jr1M9oNOpk09PMTD4EQmIdXL92lc2bCnHlZXSyC5VM
      cPKh40gpEQiEbOLc3UmkRrhJLehyc3gUdfMmq8N19s/toSy1Zza0jpOtiIwArOanm4aUGk+3
      S25q2BPM0+t1PdWmMyA8rFdJRZQeBKE8LyqC8x+d54FjDxDFKaL7KqLzc8JLN8ge+gYuTLzV
      yN6jbjdx0WFMcODOmv5tAVaHLjewdugjQPEBanLAiXrAmUHII3WHkCHS9O/awFQQ+GiOUtTr
      dQKlEOEMZfoUhtiXZ2J8lE7G7FOPoQL/e4ffbNJiwx+ddQlCeAZr4UUBjbWEYYzRJU5szXy/
      EEb6YhHWOaIUfvNf/B7X/vMrHoT5zjDiC82Mz7rV1E4MT/UsXM0Vs6ElVduCp5+IQs67TwMh
      ENZTGfp7+ldkTHUGcFtGehTV8LuA5Ne+9mWUlGz0C27qq1hXcmL+JDI2xKJOiaa70WHX9Bxl
      WVKWmiNHDiOFwDpVKcH4/MFaZ8CBk8+ysrJCa2WFJx79Au+89y5PHPd4Gis8hfe9gidSWOqd
      DV7/o7/ksceeZM/kAKMNvZ7GzLR56/QpRBjz+EMPYs++wfSBw9zOh1zesMwdWeBPX/kLdj/x
      K9jpPayeO8PhxHD00EEuXbwAIuDkw49w+tQpXn75O/zT/+r3GHTWSPUuajc/oH/i77AqB9Rc
      nZAJXLALGbcIs9ME/ZdxyUm0XNwCqVWxV+ccZbmKcwVONgmEJ6k/nurK9WkiTPfuVykEpuyx
      vLxMs9nEWsu1a9ewLql4VwUEdX9EdhppvHxsaXPO5G9we/AgLxU/ww43eGtxloOuR0TsNSsQ
      KJ9lwGrhKTXv4yVpDbJSDLIoFvfOezqW5eLjGBs+22Yc/NF6jWNpyUtjcqlPbn2agccIeeSf
      qPISWyMuYEd97s6dyFJLvF+4uzlPO59EUBI6w7JZph022CiXmZ3fQ2wNsRKIxNO3m6rqa5Ro
      AwgDhXOOpaUlbt68yQsvvMDywGfUU+Wfy5r7M25HrQAcXD6/xJ7pFa5cucrq7RUu7d/HxdUO
      m5c/YHZmF8PNdf7P/+1/IG3E7Np3nJnd89zONI8HJYdbJT/O1vj9P/gOX/naS1y/cZPzly5z
      4eIFms0WAocpM+qDa8Q33qZ79GtcsZcxzp8H6gbK4haRehwrjyIbJwjztwmHP8OlT6Dlgh9G
      IRFCkKQHsXaIVRNedHxb35wbo7CqawTKXkdm7/P4sRbXli9htA+dJ8Uan4+X0IPd5M19uLJD
      l1WkULTERBXSFTjV58XsVS65Q3y/+RTB5iYHpkYEWz6zsy0Sf9dQ63IDKROkSu6aZq46XwQN
      dYfN+2tsgYRvTQ+YCu44xX9CCwDwuXaBdQInQo/1cXoHHv0TNeeQuiCqWIOtsCybJZoypWM6
      1ER7LP8J+MPYHSPY73UJw5CnnnoKYwxXrlzh0GTMlULxQKo9vMMKjIM4AGNDetkuavEtr3Kv
      4W/9B7/NT//iLZZvXGOz2+XWZod57XV4N4cFP3z1J+xq1QiDgHZ9kt/8xjeZSUPO1FKG3Q7L
      q3W+9+Yp4olpVgc54d6jRBtdLq91+frxB3k7jKitvYfauELn6Fc5Z84yK3bTFG1uuWXqroZz
      W0LaxgoITiLCBwmLUwTFm4j2l9FjnS0Jsl3VL+x8fcJ5TthQZqjyQ0R5DRcuomsvIKxgb237
      6O1l6B4gvPZXtG68Tb7wBCKdHIc3pTAI0WA3M9SHF7m5b5mwW2eznMFVAQ4n5I4NaeTqjJou
      1ynLVcJoFxIfcdRWMLSSREmcXkUEEeq//Sf/6L+u/f+4CJpVfHvURlq20kmkSu9J0XFn80X3
      BuG0B08Jrygi3cczxo2vV7FHLIpRQX0T7brUZYNUNJEE3MoFAyeoj3IRwhNLjVqrWWf99k2y
      QYfgyusEYcTCgWMMdMSG9VoBm4XlZuFN0uVhi0fSWS5kKXF4i1AI3v7RLQ7MzfD8F57jvbPn
      OHH8IIcfexazucL1K5f4D3/7m1y5fJnPf/4LHD5ymLnZXdwuYKaZ8qenzpLFLYYWnji6n4lD
      J2hOT/PU4jQPP/4E33/1dT538hj7s3O8tvA1bso3SUTKkAF10aTrNmm4BCfbqLCJciVOBJVu
      saQMj0G0F9l5BVV+iAynsKKOVbUxC962ESWUA4LiNKr8EBfsQcePYMQUI22GUXPOccvd4Kx9
      lyt1mJ35KsnNn5HeOouoz2KCpLq3ZNf1s1ycbdBRA6biFRbSS8zLRQIRYlEY10c4ixAKg2ex
      G+1bfRuDauBEjEBSuAhtLY3AYEREYf3vdtQDjFpp4Y1OzAaSQ5Hmwdr9CZT+fZsv/q7hyu4v
      fY9RNnTkAv3CFvoa3mAULnUxBR58ltJAk7BclITSsTv0+gTIeOeOs/12JiNeepPe/uc9hECE
      BHHTC3q4gvMD73odb5QsF4I3B2tkZcyXJhrMhRZj4cINzXK9xrQrOHv6LQ4s7uHph0/isFzo
      n8HaAQeCk/x0E56biiiN5o0Nxeme4NlGzsUy4FszAwIBK6Xktg54evkVVmce5q9oE6Q/4CH5
      NA1R57q7QkBAqTeY0QkiOUkssh3kyNb5RJpSjrD/Pcgv4YIZSE/iZAtXMc3JcglRXsYiKYMD
      yPoTGJ0jdP+ud+Gc5ar+gGviOgDKRTwRvkTAgMAWJEtvgpAM9z4DRhNe/DPOHD7kD7ROEMoG
      C/IAASGlhPVyiWkmUEETJ6IddQvaeYvmgNIJYpUQ4M8Ahi328ruCMs7Bt2/XmEkNz6U531lP
      mY80E59hpOiOb/z3vsMOv/8TfWV1dhifliF1ja2IEo7FeEfq5/45CaBUCbEMiIer5Ok0UI4p
      RQSwqQWPtPwmsjtyfCOarK7csrxSwNP1nE2X8Fu//msoZzFlji6HdO01Iq9tyCP1gh+sSoY2
      YDqQvDAl+GgY8LXJjBuZ4kedhFZo+Wq4hJYRcXOKWi/AkfJ6L+FI/QK33DXmxSIdWbA3PTGG
      fNwxRJ4oQEVk6YuE8U1U9i70fgzlGgKPmaL2CKb2JfK8S6k1wbBDGNexQQN0b1uhvyXPlxiI
      dZBQE5Ne9KKK2mkZ0dv3RcLhKrXzf4YoBgyO/TpHK+EM7RQgEVYDOaGFXWLW39xkoCRWprhR
      6FngJZScFzLUApzxADlXFQ85d48FcLuU9KTgt5t+JzioNFeLgIngr8cKfKqJ+xk1a+0d2Mk7
      mjN3PdgvWqaDxWdpnHsZfeSrmG34fSXhcxMfz2gtACUFTiQstJoECm53h9RdD0SdB9Xj48+2
      A8dcoEmCku9tJDRCyRfbIe2gpCZLDiWaVBVMXf4+f7zwH/Go7lBPzzBwcDwtuGyXUMKwUbY4
      HM9t2wh2+tBCxeiyQAWenc7YFBM9DfUXPeyBHCdiH4+3IIIZwkCiKLHFJiJq4YImTncRWPL8
      GtpkhPEcx9Q8TdFCWnuH8pGjSKYQ+58n+eA7pJe+T77wFEV9Fh/Itsht+QrnPEmCkCEyCCmK
      EuckSgq/OGXED9/4S273btJKJ/ji479CGkdYoZH48PhdC2A5U5zcRkJlhYdL//W2T3f/nhG8
      1Y0YWMFiZFiMvVKhqyI2K0NFqfxtNzPJwZpmITY7dqPtFuDOb9+eyPmkzSIYHnie2sUf0Dv8
      lU9s13wCKWT/vikPb+ivUQjBdHOaolDYUqOcd6HMtmve7kU8WStYd5I/v6343ETKhJRsovjK
      1T9kc9+X+GKjwxnzJqXLqdNiMjAsVaWXZ/M+K6bHczVQ1MZ4eZ9vET63oCy69Nz842RS2cWq
      Osa48RnKC5sH4/JTAbiig4haWFmjzK+DmiKOWxzwFGkItH9fUqLNFj7fyjrRte/RfeA3kWFI
      cuMU8fJphnufo4jbd4xbXOU9CpzRfH8dhg6+MTlACMEfv/qnpIcEM1ENazL+5PX/m28+92tc
      ED/npHoSuFN5DNjUckeU5nqp2Bt/+gnxadqncYJuDBTfXk/ZkxiebXl2hFd7MT/oJPyom/B+
      FpJXQnHOQang/9uocbPc1lXnxmCod/Qb3HRLv/gZP8FDlmED095Levv9j13SzvnyR0NCkE4T
      Jg1MtokrNgmk9Zipzi2CICJOPO2Ih0EL3tiMuJBHfGVKMhklJDLgb+7SzAaWmVqN3+j8gHLX
      MTYajrPmFNNiF9NijgE9OqbkSvc4pY1YrJ8nji5yxryBEVvkZUbEWJki7MAfdu8IMErhPGV5
      pe1lnMTKZEftNXi31OQ9knoTGcwSBXVC4cU7xq6mwNPbiABkgpV10mIVEzbRQYIRiv7CUwwP
      /grxyhnaF/+csPQ1Ebaie5d2gBIageUrkxm/OjlESVi6sUze7HpdOTwXaetAwpmzH9AWk+Pn
      DLpG7PDvG4FluVTsjz1kuWflGP/y19M++fTPLHy3m/CNqeGYEnEy8PTpH9dioG+9tvCojRZA
      TTQICT8ByPoTPuPMAzTP/iH5ns/d9Tfn/IRRUY04TinznGzYqfAxZuehUUVVMT1E9SlevzVk
      JoQBjv31gBYd2jEUokVsSi4PSxY3T6PCiPOTbS7kS2TlYRqxIJcX2SsPsDqY5XisuNQ7wGQw
      JFId4mCIjGK0ixgSsryRM1cfjsFjsRRYI7CloBGPkpcO4xzOBQiVQLGCQaNUcxzFs054reGy
      BFt6ksB7NetLZaXNcAiSqz+hf+irOFnDVghTLUOG+14kLW+TXHmVSIUMF5/HbKNvFwKcDH0Z
      J5DlhiDcmeMKo4Ait8zLB8fWNNjUkoltheftyHG92i1vDBUTn3Ly97WgbwUzof1kEkn+8e8e
      F+cTZ+G2jftUN+apZkFbqcqN8b/XVt09gap2aRCwVCqeam5nCbMI6fe2I+ohb0rtL2LD+GSd
      sQ6KiUMkGxfIo1lPxYJHVIZxipSK29lV2noK4UpCYTB49CrO+oom4fV6he4BcPq24NnZOlpr
      FtSA01mMEIqhMZwbWJCKBX2JoLNE5+CLTJASlgc4kZYsFQHSznNdC9ad5FCoOZ7CA2kA+Pi+
      cQ5p+yQOdtfFtmoQwDn6RnC7CHhrM+L5tk9gDkrN8akmJuti9DrGdAjDWYJwBovCyaSSX0q9
      mk1VtXXnO/KuqH+XyWAFW5v2NJOuxKEYO37OUaqU4tBLRGWP+qU/x0YN8j1PoUVFSmbNOFS9
      f3Gev3rN4Wa3kqW3Lm7wGyefR9p8/Dr/HaD9HanBmN2dAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='General Map' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='135' name='Highest Correlation' width='192'>
      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
      AJj2X4ec3c+zfWLmAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='135' name='TTL Parameter 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACHCAYAAABAgVbTAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAABk0lEQVR4nO3VwQnDAAwEQdukyODy3YjcQwjosTN/wX0WnTMzB0Rd2wNgkwBIEwBpAiBN
      AKQJgDQBkCYA0gRAmgBIEwBpAiDt88vR873/vQNW+ACkCYA0AZAmANIEQJoASBMAaQIgTQCk
      CYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoA
      SBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0
      AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMA
      aQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAm
      ANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIg
      TQCkCYA0AZAmANIEQJoASBMAaQIg7ZyZ2R4BW16Ffwqb05xS8wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='135' name='TTL Parameter 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACHCAYAAABAgVbTAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAABlElEQVR4nO3VwQnDAAwEQduknPTqYl2A3EMI6LEzf8F9Fp0zMwdEXdsDYJMASBMAaQIg
      TQCkCYA0AZAmANIEQJoASBMAaQIg7fPL0XN//70DVvgApAmANAGQJgDSBECaAEgTAGkCIE0A
      pAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECa
      AEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmA
      NAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgT
      AGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQ
      JgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkC
      IE0ApAmANAGQJgDSBECaAEgTAGkCIO2cmdkeAVteutEKtcmD49EAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
